{
	"id": "adbaaa7a-9eaa-73f2-38ef-fbe375e29edd",
	"name": "ambari-1.7",
	"timestamp": 1416896061957,
	"order": [
		"0a47ba8a-f727-aac9-ba12-ae705c51a254",
		"26d62b6b-2b5f-d41a-9ff1-ac74b08ce921",
		"56951531-98e0-f614-5ea6-5307b10c71ff",
		"5bcb19a1-7699-661e-246f-b388c8b00cbe",
		"5ca8e6a0-dc75-3ba2-c3da-bc3a9e959df0",
		"798a1f3d-3ba6-0dec-93d1-ada2104651d9",
		"7e7b2e9e-9f22-c6e1-ee9f-bab25dfa25c8",
		"a7600eb0-8f5b-9293-76ab-8ca94c1f97f7",
		"da68b39b-47a0-b5b4-d92c-b0559fc287ac",
		"efe18aae-10d0-357b-654b-3d54a5129aeb"
	],
	"owner": 0,
	"hasRequests": true,
	"requests": [
		{
			"collectionId": "adbaaa7a-9eaa-73f2-38ef-fbe375e29edd",
			"id": "0a47ba8a-f727-aac9-ba12-ae705c51a254",
			"name": "List all defined blueprints",
			"description": "",
			"url": "http://{{ambari-server-host}}:8080/api/v1/blueprints",
			"method": "GET",
			"headers": "Authorization: Basic YWRtaW46YWRtaW4=\nX-Requested-By: ambari\n",
			"data": [],
			"dataMode": "raw",
			"timestamp": 0,
			"version": 2,
			"time": 1417444354303,
			"preRequestScript": "",
			"tests": "",
			"rawModeData": "{\n  \"blueprint\" : \"blueprint-CLS\",\n  \"default_password\" : \"verint1!\",\n  \"configurations\" : [],    \n  \"host_groups\" :[\n    {\n      \"name\" : \"host_group_1\", \n      \"configurations\" : [],    \n      \"hosts\" : [         \n        {\n          \"fqdn\" : \"devdan.node\"\n        }\n      ]\n    }\n  ]\n}"
		},
		{
			"collectionId": "adbaaa7a-9eaa-73f2-38ef-fbe375e29edd",
			"id": "26d62b6b-2b5f-d41a-9ff1-ac74b08ce921",
			"name": "Register Blueprint with Ambari",
			"description": "send a premade blueprint json to ambari",
			"url": "http://{{ambari-server-host}}:8080/api/v1/blueprints/blueprint-CLS?validate_topology=false",
			"method": "POST",
			"headers": "Authorization: Basic YWRtaW46YWRtaW4=\nX-Requested-By: ambari\n",
			"data": [],
			"dataMode": "raw",
			"timestamp": 0,
			"version": 2,
			"time": 1420096689533,
			"preRequestScript": "",
			"tests": "",
			"rawModeData": "{\n    \"configurations\": [\n        {\n            \"capacity-scheduler\": {\n                \"yarn.scheduler.capacity.default.minimum-user-limit-percent\": \"100\",\n                \"yarn.scheduler.capacity.maximum-am-resource-percent\": \"0.2\",\n                \"yarn.scheduler.capacity.maximum-applications\": \"10000\",\n                \"yarn.scheduler.capacity.node-locality-delay\": \"40\",\n                \"yarn.scheduler.capacity.resource-calculator\": \"org.apache.hadoop.yarn.util.resource.DefaultResourceCalculator\",\n                \"yarn.scheduler.capacity.root.accessible-node-labels\": \"*\",\n                \"yarn.scheduler.capacity.root.accessible-node-labels.default.capacity\": \"-1\",\n                \"yarn.scheduler.capacity.root.accessible-node-labels.default.maximum-capacity\": \"-1\",\n                \"yarn.scheduler.capacity.root.acl_administer_queue\": \"*\",\n                \"yarn.scheduler.capacity.root.capacity\": \"100\",\n                \"yarn.scheduler.capacity.root.default-node-label-expression\": \" \",\n                \"yarn.scheduler.capacity.root.default.acl_administer_jobs\": \"*\",\n                \"yarn.scheduler.capacity.root.default.acl_submit_applications\": \"*\",\n                \"yarn.scheduler.capacity.root.default.capacity\": \"100\",\n                \"yarn.scheduler.capacity.root.default.maximum-capacity\": \"100\",\n                \"yarn.scheduler.capacity.root.default.state\": \"RUNNING\",\n                \"yarn.scheduler.capacity.root.default.user-limit-factor\": \"1\",\n                \"yarn.scheduler.capacity.root.queues\": \"default\"\n            }\n        },\n        {\n            \"cluster-env\": {\n                \"hadoop-streaming_tar_destination_folder\": \"hdfs:///hdp/apps/{{ hdp_stack_version }}/mapreduce/\",\n                \"hadoop-streaming_tar_source\": \"/usr/hdp/current/hadoop-mapreduce-client/hadoop-streaming.jar\",\n                \"hive_tar_destination_folder\": \"hdfs:///hdp/apps/{{ hdp_stack_version }}/hive/\",\n                \"hive_tar_source\": \"/usr/hdp/current/hive-client/hive.tar.gz\",\n                \"ignore_groupsusers_create\": \"false\",\n                \"kerberos_domain\": \"EXAMPLE.COM\",\n                \"mapreduce_tar_destination_folder\": \"hdfs:///hdp/apps/{{ hdp_stack_version }}/mapreduce/\",\n                \"mapreduce_tar_source\": \"/usr/hdp/current/hadoop-client/mapreduce.tar.gz\",\n                \"pig_tar_destination_folder\": \"hdfs:///hdp/apps/{{ hdp_stack_version }}/pig/\",\n                \"pig_tar_source\": \"/usr/hdp/current/pig-client/pig.tar.gz\",\n                \"security_enabled\": \"false\",\n                \"smokeuser\": \"ambari-qa\",\n                \"sqoop_tar_destination_folder\": \"hdfs:///hdp/apps/{{ hdp_stack_version }}/sqoop/\",\n                \"sqoop_tar_source\": \"/usr/hdp/current/sqoop-client/sqoop.tar.gz\",\n                \"tez_tar_destination_folder\": \"hdfs:///hdp/apps/{{ hdp_stack_version }}/tez/\",\n                \"tez_tar_source\": \"/usr/hdp/current/tez-client/lib/tez.tar.gz\",\n                \"user_group\": \"hadoop\"\n            }\n        },\n        {\n            \"falcon-env\": {\n                \"content\": \"\\n# The java implementation to use. If JAVA_HOME is not found we expect java and jar to be in path\\nexport JAVA_HOME={{java_home}}\\n\\n# any additional java opts you want to set. This will apply to both client and server operations\\n#export FALCON_OPTS=\\n\\n# any additional java opts that you want to set for client only\\n#export FALCON_CLIENT_OPTS=\\n\\n# java heap size we want to set for the client. Default is 1024MB\\n#export FALCON_CLIENT_HEAP=\\n\\n# any additional opts you want to set for prisim service.\\n#export FALCON_PRISM_OPTS=\\n\\n# java heap size we want to set for the prisim service. Default is 1024MB\\n#export FALCON_PRISM_HEAP=\\n\\n# any additional opts you want to set for falcon service.\\nexport FALCON_SERVER_OPTS=\\\"-Dfalcon.embeddedmq={{falcon_embeddedmq_enabled}} -Dfalcon.emeddedmq.port={{falcon_emeddedmq_port}}\\\"\\n\\n# java heap size we want to set for the falcon server. Default is 1024MB\\n#export FALCON_SERVER_HEAP=\\n\\n# What is is considered as falcon home dir. Default is the base location of the installed software\\n#export FALCON_HOME_DIR=\\n\\n# Where log files are stored. Defatult is logs directory under the base install location\\nexport FALCON_LOG_DIR={{falcon_log_dir}}\\n\\n# Where pid files are stored. Defatult is logs directory under the base install location\\nexport FALCON_PID_DIR={{falcon_pid_dir}}\\n\\n# where the falcon active mq data is stored. Defatult is logs/data directory under the base install location\\nexport FALCON_DATA_DIR={{falcon_embeddedmq_data}}\\n\\n# Where do you want to expand the war file. By Default it is in /server/webapp dir under the base install dir.\\n#export FALCON_EXPANDED_WEBAPP_DIR=\",\n                \"falcon.embeddedmq\": \"true\",\n                \"falcon.embeddedmq.data\": \"/hadoop/falcon/embeddedmq/data\",\n                \"falcon.emeddedmq.port\": \"61616\",\n                \"falcon_local_dir\": \"/hadoop/falcon\",\n                \"falcon_log_dir\": \"/var/log/falcon\",\n                \"falcon_pid_dir\": \"/var/run/falcon\",\n                \"falcon_port\": \"15000\",\n                \"falcon_store_uri\": \"file:///hadoop/falcon/store\",\n                \"falcon_user\": \"falcon\"\n            }\n        },\n        {\n            \"falcon-runtime.properties\": {\n                \"*.domain\": \"${falcon.app.type}\",\n                \"*.log.cleanup.frequency.days.retention\": \"days(7)\",\n                \"*.log.cleanup.frequency.hours.retention\": \"minutes(1)\",\n                \"*.log.cleanup.frequency.minutes.retention\": \"hours(6)\",\n                \"*.log.cleanup.frequency.months.retention\": \"months(3)\"\n            }\n        },\n        {\n            \"falcon-startup.properties\": {\n                \"*.ConfigSyncService.impl\": \"org.apache.falcon.resource.ConfigSyncService\",\n                \"*.ProcessInstanceManager.impl\": \"org.apache.falcon.resource.InstanceManager\",\n                \"*.SchedulableEntityManager.impl\": \"org.apache.falcon.resource.SchedulableEntityManager\",\n                \"*.application.services\": \"org.apache.falcon.security.AuthenticationInitializationService,\\\\\\n      org.apache.falcon.workflow.WorkflowJobEndNotificationService, \\\\\\n      org.apache.falcon.service.ProcessSubscriberService,\\\\\\n      org.apache.falcon.entity.store.ConfigurationStore,\\\\\\n      org.apache.falcon.rerun.service.RetryService,\\\\\\n      org.apache.falcon.rerun.service.LateRunService,\\\\\\n      org.apache.falcon.service.LogCleanupService,\\\\\\n      org.apache.falcon.metadata.MetadataMappingService\",\n                \"*.broker.impl.class\": \"org.apache.activemq.ActiveMQConnectionFactory\",\n                \"*.broker.ttlInMins\": \"4320\",\n                \"*.broker.url\": \"tcp://%HOSTGROUP::host_group_1%:61616\",\n                \"*.catalog.service.impl\": \"org.apache.falcon.catalog.HiveCatalogService\",\n                \"*.config.store.uri\": \"file:///hadoop/falcon/store\",\n                \"*.configstore.listeners\": \"org.apache.falcon.entity.v0.EntityGraph,\\\\\\n      org.apache.falcon.entity.ColoClusterRelation,\\\\\\n      org.apache.falcon.group.FeedGroupMap,\\\\\\n      org.apache.falcon.service.SharedLibraryHostingService\",\n                \"*.dfs.namenode.kerberos.principal\": \"nn/_HOST@EXAMPLE.COM\",\n                \"*.domain\": \"${falcon.app.type}\",\n                \"*.entity.topic\": \"FALCON.ENTITY.TOPIC\",\n                \"*.falcon.authentication.type\": \"simple\",\n                \"*.falcon.cleanup.service.frequency\": \"days(1)\",\n                \"*.falcon.enableTLS\": \"false\",\n                \"*.falcon.graph.blueprints.graph\": \"com.thinkaurelius.titan.core.TitanFactory\",\n                \"*.falcon.graph.preserve.history\": \"false\",\n                \"*.falcon.graph.serialize.path\": \"/hadoop/falcon/data/lineage\",\n                \"*.falcon.graph.storage.backend\": \"berkeleyje\",\n                \"*.falcon.graph.storage.directory\": \"/hadoop/falcon/data/lineage/graphdb\",\n                \"*.falcon.http.authentication.blacklisted.users\": \"\",\n                \"*.falcon.http.authentication.cookie.domain\": \"EXAMPLE.COM\",\n                \"*.falcon.http.authentication.kerberos.keytab\": \"/etc/security/keytabs/spnego.service.keytab\",\n                \"*.falcon.http.authentication.kerberos.name.rules\": \"DEFAULT\",\n                \"*.falcon.http.authentication.signature.secret\": \"falcon\",\n                \"*.falcon.http.authentication.simple.anonymous.allowed\": \"true\",\n                \"*.falcon.http.authentication.token.validity\": \"36000\",\n                \"*.falcon.http.authentication.type\": \"simple\",\n                \"*.falcon.security.authorization.admin.groups\": \"falcon\",\n                \"*.falcon.security.authorization.admin.users\": \"falcon,ambari-qa\",\n                \"*.falcon.security.authorization.enabled\": \"false\",\n                \"*.falcon.security.authorization.provider\": \"org.apache.falcon.security.DefaultAuthorizationProvider\",\n                \"*.falcon.security.authorization.superusergroup\": \"falcon\",\n                \"*.falcon.service.authentication.kerberos.keytab\": \"/etc/security/keytabs/falcon.service.keytab\",\n                \"*.internal.queue.size\": \"1000\",\n                \"*.journal.impl\": \"org.apache.falcon.transaction.SharedFileSystemJournal\",\n                \"*.max.retry.failure.count\": \"1\",\n                \"*.oozie.feed.workflow.builder\": \"org.apache.falcon.workflow.OozieFeedWorkflowBuilder\",\n                \"*.oozie.process.workflow.builder\": \"org.apache.falcon.workflow.OozieProcessWorkflowBuilder\",\n                \"*.retry.recorder.path\": \"${falcon.log.dir}/retry\",\n                \"*.shared.libs\": \"activemq-core,ant,geronimo-j2ee-management,hadoop-distcp,jms,json-simple,oozie-client,spring-jms\",\n                \"*.system.lib.location\": \"${falcon.home}/server/webapp/${falcon.app.type}/WEB-INF/lib\",\n                \"*.workflow.engine.impl\": \"org.apache.falcon.workflow.engine.OozieWorkflowEngine\",\n                \"prism.application.services\": \"org.apache.falcon.entity.store.ConfigurationStore\",\n                \"prism.configstore.listeners\": \"org.apache.falcon.entity.v0.EntityGraph,\\\\\\n      org.apache.falcon.entity.ColoClusterRelation,\\\\\\n      org.apache.falcon.group.FeedGroupMap\"\n            }\n        },\n        {\n            \"flume-conf\": {\n                \"content\": \"\\n# Flume agent config\"\n            }\n        },\n        {\n            \"flume-env\": {\n                \"content\": \"\\n# Licensed to the Apache Software Foundation (ASF) under one or more\\n# contributor license agreements.  See the NOTICE file distributed with\\n# this work for additional information regarding copyright ownership.\\n# The ASF licenses this file to You under the Apache License, Version 2.0\\n# (the \\\"License\\\"); you may not use this file except in compliance with\\n# the License.  You may obtain a copy of the License at\\n#\\n#     http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing, software\\n# distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n# See the License for the specific language governing permissions and\\n# limitations under the License.\\n\\n# If this file is placed at FLUME_CONF_DIR/flume-env.sh, it will be sourced\\n# during Flume startup.\\n\\n# Enviroment variables can be set here.\\n\\nexport JAVA_HOME={{java_home}}\\n\\n# Give Flume more memory and pre-allocate, enable remote monitoring via JMX\\n# export JAVA_OPTS=\\\"-Xms100m -Xmx2000m -Dcom.sun.management.jmxremote\\\"\\n\\n# Note that the Flume conf directory is always included in the classpath.\\n#FLUME_CLASSPATH=\\\"\\\"\\n\\nexport HIVE_HOME={{flume_hive_home}}\\nexport HCAT_HOME={{flume_hcat_home}}\",\n                \"flume_conf_dir\": \"/etc/flume/conf\",\n                \"flume_log_dir\": \"/var/log/flume\",\n                \"flume_user\": \"flume\"\n            }\n        },\n        {\n            \"ganglia-env\": {\n                \"additional_clusters\": \" \",\n                \"ganglia_runtime_dir\": \"/var/run/ganglia/hdp\",\n                \"gmetad_user\": \"nobody\",\n                \"gmond_user\": \"nobody\",\n                \"rrdcached_base_dir\": \"/var/lib/ganglia/rrds\",\n                \"rrdcached_delay\": \"1800\",\n                \"rrdcached_flush_timeout\": \"7200\",\n                \"rrdcached_timeout\": \"3600\",\n                \"rrdcached_write_threads\": \"4\"\n            }\n        },\n        {\n            \"gateway-log4j\": {\n                \"content\": \"\\n\\n      # Licensed to the Apache Software Foundation (ASF) under one\\n      # or more contributor license agreements. See the NOTICE file\\n      # distributed with this work for additional information\\n      # regarding copyright ownership. The ASF licenses this file\\n      # to you under the Apache License, Version 2.0 (the\\n      # \\\"License\\\"); you may not use this file except in compliance\\n      # with the License. You may obtain a copy of the License at\\n      #\\n      # http://www.apache.org/licenses/LICENSE-2.0\\n      #\\n      # Unless required by applicable law or agreed to in writing, software\\n      # distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n      # See the License for the specific language governing permissions and\\n      # limitations under the License.\\n\\n      app.log.dir=${launcher.dir}/../logs\\n      app.log.file=${launcher.name}.log\\n      app.audit.file=${launcher.name}-audit.log\\n\\n      log4j.rootLogger=ERROR, drfa\\n\\n      log4j.logger.org.apache.hadoop.gateway=INFO\\n      #log4j.logger.org.apache.hadoop.gateway=DEBUG\\n\\n      #log4j.logger.org.eclipse.jetty=DEBUG\\n      #log4j.logger.org.apache.shiro=DEBUG\\n      #log4j.logger.org.apache.http=DEBUG\\n      #log4j.logger.org.apache.http.client=DEBUG\\n      #log4j.logger.org.apache.http.headers=DEBUG\\n      #log4j.logger.org.apache.http.wire=DEBUG\\n\\n      log4j.appender.stdout=org.apache.log4j.ConsoleAppender\\n      log4j.appender.stdout.layout=org.apache.log4j.PatternLayout\\n      log4j.appender.stdout.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\\n\\n      log4j.appender.drfa=org.apache.log4j.DailyRollingFileAppender\\n      log4j.appender.drfa.File=${app.log.dir}/${app.log.file}\\n      log4j.appender.drfa.DatePattern=.yyyy-MM-dd\\n      log4j.appender.drfa.layout=org.apache.log4j.PatternLayout\\n      log4j.appender.drfa.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\\n\\n      log4j.logger.audit=INFO, auditfile\\n      log4j.appender.auditfile=org.apache.log4j.DailyRollingFileAppender\\n      log4j.appender.auditfile.File=${app.log.dir}/${app.audit.file}\\n      log4j.appender.auditfile.Append = true\\n      log4j.appender.auditfile.DatePattern = '.'yyyy-MM-dd\\n      log4j.appender.auditfile.layout = org.apache.hadoop.gateway.audit.log4j.layout.AuditLayout\"\n            }\n        },\n        {\n            \"gateway-site\": {\n                \"gateway.gateway.conf.dir\": \"deployments\",\n                \"gateway.hadoop.kerberos.secured\": \"false\",\n                \"gateway.path\": \"gateway\",\n                \"gateway.port\": \"8443\",\n                \"java.security.auth.login.config\": \"/etc/knox/conf/krb5JAASLogin.conf\",\n                \"java.security.krb5.conf\": \"/etc/knox/conf/krb5.conf\",\n                \"sun.security.krb5.debug\": \"true\"\n            }\n        },\n        {\n            \"hadoop-env\": {\n                \"content\": \"\\n# Set Hadoop-specific environment variables here.\\n\\n# The only required environment variable is JAVA_HOME.  All others are\\n# optional.  When running a distributed configuration it is best to\\n# set JAVA_HOME in this file, so that it is correctly defined on\\n# remote nodes.\\n\\n# The java implementation to use.  Required.\\nexport JAVA_HOME={{java_home}}\\nexport HADOOP_HOME_WARN_SUPPRESS=1\\n\\n# Hadoop home directory\\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\\n\\n# Hadoop Configuration Directory\\n\\n{# this is different for HDP1 #}\\n# Path to jsvc required by secure HDP 2.0 datanode\\nexport JSVC_HOME={{jsvc_path}}\\n\\n\\n# The maximum amount of heap to use, in MB. Default is 1000.\\nexport HADOOP_HEAPSIZE=\\\"{{hadoop_heapsize}}\\\"\\n\\nexport HADOOP_NAMENODE_INIT_HEAPSIZE=\\\"-Xms{{namenode_heapsize}}\\\"\\n\\n# Extra Java runtime options.  Empty by default.\\nexport HADOOP_OPTS=\\\"-Djava.net.preferIPv4Stack=true ${HADOOP_OPTS}\\\"\\n\\n# Command specific options appended to HADOOP_OPTS when specified\\nexport HADOOP_NAMENODE_OPTS=\\\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -XX:PermSize={{namenode_opt_permsize}} -XX:MaxPermSize={{namenode_opt_maxpermsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{namenode_heapsize}} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_NAMENODE_OPTS}\\\"\\nHADOOP_JOBTRACKER_OPTS=\\\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{jtnode_opt_newsize}} -XX:MaxNewSize={{jtnode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xmx{{jtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dmapred.audit.logger=INFO,MRAUDIT -Dhadoop.mapreduce.jobsummary.logger=INFO,JSA ${HADOOP_JOBTRACKER_OPTS}\\\"\\n\\nHADOOP_TASKTRACKER_OPTS=\\\"-server -Xmx{{ttnode_heapsize}} -Dhadoop.security.logger=ERROR,console -Dmapred.audit.logger=ERROR,console ${HADOOP_TASKTRACKER_OPTS}\\\"\\nexport HADOOP_DATANODE_OPTS=\\\"-server -XX:ParallelGCThreads=4 -XX:+UseConcMarkSweepGC -XX:ErrorFile=/var/log/hadoop/$USER/hs_err_pid%p.log -XX:NewSize=200m -XX:MaxNewSize=200m -XX:PermSize=128m -XX:MaxPermSize=256m -Xloggc:/var/log/hadoop/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{dtnode_heapsize}} -Xmx{{dtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_DATANODE_OPTS}\\\"\\nHADOOP_BALANCER_OPTS=\\\"-server -Xmx{{hadoop_heapsize}}m ${HADOOP_BALANCER_OPTS}\\\"\\n\\nexport HADOOP_SECONDARYNAMENODE_OPTS=$HADOOP_NAMENODE_OPTS\\n\\n# The following applies to multiple commands (fs, dfs, fsck, distcp etc)\\nexport HADOOP_CLIENT_OPTS=\\\"-Xmx${HADOOP_HEAPSIZE}m -XX:MaxPermSize=512m $HADOOP_CLIENT_OPTS\\\"\\n\\n# On secure datanodes, user to run the datanode as after dropping privileges\\nexport HADOOP_SECURE_DN_USER=${HADOOP_SECURE_DN_USER:-{{hadoop_secure_dn_user}}}\\n\\n# Extra ssh options.  Empty by default.\\nexport HADOOP_SSH_OPTS=\\\"-o ConnectTimeout=5 -o SendEnv=HADOOP_CONF_DIR\\\"\\n\\n# Where log files are stored.  $HADOOP_HOME/logs by default.\\nexport HADOOP_LOG_DIR={{hdfs_log_dir_prefix}}/$USER\\n\\n# History server logs\\nexport HADOOP_MAPRED_LOG_DIR={{mapred_log_dir_prefix}}/$USER\\n\\n# Where log files are stored in the secure data environment.\\nexport HADOOP_SECURE_DN_LOG_DIR={{hdfs_log_dir_prefix}}/$HADOOP_SECURE_DN_USER\\n\\n# File naming remote slave hosts.  $HADOOP_HOME/conf/slaves by default.\\n# export HADOOP_SLAVES=${HADOOP_HOME}/conf/slaves\\n\\n# host:path where hadoop code should be rsync'd from.  Unset by default.\\n# export HADOOP_MASTER=master:/home/$USER/src/hadoop\\n\\n# Seconds to sleep between slave commands.  Unset by default.  This\\n# can be useful in large clusters, where, e.g., slave rsyncs can\\n# otherwise arrive faster than the master can service them.\\n# export HADOOP_SLAVE_SLEEP=0.1\\n\\n# The directory where pid files are stored. /tmp by default.\\nexport HADOOP_PID_DIR={{hadoop_pid_dir_prefix}}/$USER\\nexport HADOOP_SECURE_DN_PID_DIR={{hadoop_pid_dir_prefix}}/$HADOOP_SECURE_DN_USER\\n\\n# History server pid\\nexport HADOOP_MAPRED_PID_DIR={{mapred_pid_dir_prefix}}/$USER\\n\\nYARN_RESOURCEMANAGER_OPTS=\\\"-Dyarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\\\"\\n\\n# A string representing this instance of hadoop. $USER by default.\\nexport HADOOP_IDENT_STRING=$USER\\n\\n# The scheduling priority for daemon processes.  See 'man nice'.\\n\\n# export HADOOP_NICENESS=10\\n\\n# Use libraries from standard classpath\\nJAVA_JDBC_LIBS=\\\"\\\"\\n#Add libraries required by mysql connector\\nfor jarFile in `ls /usr/share/java/*mysql* 2>/dev/null`\\ndo\\n  JAVA_JDBC_LIBS=${JAVA_JDBC_LIBS}:$jarFile\\ndone\\n# Add libraries required by oracle connector\\nfor jarFile in `ls /usr/share/java/*ojdbc* 2>/dev/null`\\ndo\\n  JAVA_JDBC_LIBS=${JAVA_JDBC_LIBS}:$jarFile\\ndone\\n# Add libraries required by nodemanager\\nMAPREDUCE_LIBS={{mapreduce_libs_path}}\\nexport HADOOP_CLASSPATH=${HADOOP_CLASSPATH}${JAVA_JDBC_LIBS}:${MAPREDUCE_LIBS}\\n\\n# added to the HADOOP_CLASSPATH\\nif [ -d \\\"/usr/hdp/current/tez-client\\\" ]; then\\n  if [ -d \\\"/etc/tez/conf/\\\" ]; then\\n    # When using versioned RPMs, the tez-client will be a symlink to the current folder of tez in HDP.\\n    export HADOOP_CLASSPATH=${HADOOP_CLASSPATH}:/usr/hdp/current/tez-client/*:/usr/hdp/current/tez-client/lib/*:/etc/tez/conf/\\n  fi\\nfi\\n\\n# Setting path to hdfs command line\\nexport HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\\n\\n# Mostly required for hadoop 2.0\\nexport JAVA_LIBRARY_PATH=${JAVA_LIBRARY_PATH}\\n\\nexport HADOOP_OPTS=\\\"-Dhdp.version=$HDP_VERSION $HADOOP_OPTS\\\"\",\n                \"dfs.datanode.data.dir.mount.file\": \"/etc/hadoop/conf/dfs_data_dir_mount.hist\",\n                \"dtnode_heapsize\": \"1024m\",\n                \"hadoop_heapsize\": \"1024\",\n                \"hadoop_pid_dir_prefix\": \"/var/run/hadoop\",\n                \"hadoop_root_logger\": \"INFO,RFA\",\n                \"hdfs_log_dir_prefix\": \"/var/log/hadoop\",\n                \"hdfs_user\": \"hdfs\",\n                \"namenode_heapsize\": \"1024m\",\n                \"namenode_opt_maxnewsize\": \"200m\",\n                \"namenode_opt_maxpermsize\": \"256m\",\n                \"namenode_opt_newsize\": \"200m\",\n                \"namenode_opt_permsize\": \"128m\",\n                \"proxyuser_group\": \"users\"\n            }\n        },\n        {\n            \"hadoop-policy\": {\n                \"security.admin.operations.protocol.acl\": \"hadoop\",\n                \"security.client.datanode.protocol.acl\": \"*\",\n                \"security.client.protocol.acl\": \"*\",\n                \"security.datanode.protocol.acl\": \"*\",\n                \"security.inter.datanode.protocol.acl\": \"*\",\n                \"security.inter.tracker.protocol.acl\": \"*\",\n                \"security.job.client.protocol.acl\": \"*\",\n                \"security.job.task.protocol.acl\": \"*\",\n                \"security.namenode.protocol.acl\": \"*\",\n                \"security.refresh.policy.protocol.acl\": \"hadoop\",\n                \"security.refresh.usertogroups.mappings.protocol.acl\": \"hadoop\"\n            }\n        },\n        {\n            \"hbase-env\": {\n                \"content\": \"\\n# Set environment variables here.\\n\\n# The java implementation to use. Java 1.6 required.\\nexport JAVA_HOME={{java64_home}}\\n\\n# HBase Configuration directory\\nexport HBASE_CONF_DIR=${HBASE_CONF_DIR:-{{hbase_conf_dir}}}\\n\\n# Extra Java CLASSPATH elements. Optional.\\nexport HBASE_CLASSPATH=${HBASE_CLASSPATH}\\n\\n# The maximum amount of heap to use, in MB. Default is 1000.\\n# export HBASE_HEAPSIZE=1000\\n\\n# Extra Java runtime options.\\n# Below are what we set by default. May only work with SUN JVM.\\n# For more on why as well as other possible settings,\\n# see http://wiki.apache.org/hadoop/PerformanceTuning\\nexport SERVER_GC_OPTS=\\\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{log_dir}}/gc.log-`date +'%Y%m%d%H%M'`\\\"\\n# Uncomment below to enable java garbage collection logging.\\n# export HBASE_OPTS=\\\"$HBASE_OPTS -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:$HBASE_HOME/logs/gc-hbase.log\\\"\\n\\n# Uncomment and adjust to enable JMX exporting\\n# See jmxremote.password and jmxremote.access in $JRE_HOME/lib/management to configure remote password access.\\n# More details at: http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html\\n#\\n# export HBASE_JMX_BASE=\\\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\\\"\\n# If you want to configure BucketCache, specify '-XX: MaxDirectMemorySize=' with proper direct memory size\\n# export HBASE_THRIFT_OPTS=\\\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10103\\\"\\n# export HBASE_ZOOKEEPER_OPTS=\\\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10104\\\"\\n\\n# File naming hosts on which HRegionServers will run. $HBASE_HOME/conf/regionservers by default.\\nexport HBASE_REGIONSERVERS=${HBASE_CONF_DIR}/regionservers\\n\\n# Extra ssh options. Empty by default.\\n# export HBASE_SSH_OPTS=\\\"-o ConnectTimeout=1 -o SendEnv=HBASE_CONF_DIR\\\"\\n\\n# Where log files are stored. $HBASE_HOME/logs by default.\\nexport HBASE_LOG_DIR={{log_dir}}\\n\\n# A string representing this instance of hbase. $USER by default.\\n# export HBASE_IDENT_STRING=$USER\\n\\n# The scheduling priority for daemon processes. See 'man nice'.\\n# export HBASE_NICENESS=10\\n\\n# The directory where pid files are stored. /tmp by default.\\nexport HBASE_PID_DIR={{pid_dir}}\\n\\n# Seconds to sleep between slave commands. Unset by default. This\\n# can be useful in large clusters, where, e.g., slave rsyncs can\\n# otherwise arrive faster than the master can service them.\\n# export HBASE_SLAVE_SLEEP=0.1\\n\\n# Tell HBase whether it should manage it's own instance of Zookeeper or not.\\nexport HBASE_MANAGES_ZK=false\\n\\n{% if security_enabled %}\\nexport HBASE_OPTS=\\\"$HBASE_OPTS -XX:+UseConcMarkSweepGC -XX:ErrorFile={{log_dir}}/hs_err_pid%p.log -Djava.security.auth.login.config={{client_jaas_config_file}}\\\"\\nexport HBASE_MASTER_OPTS=\\\"$HBASE_MASTER_OPTS -Xmx{{master_heapsize}} -Djava.security.auth.login.config={{master_jaas_config_file}}\\\"\\nexport HBASE_REGIONSERVER_OPTS=\\\"$HBASE_REGIONSERVER_OPTS -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70  -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}} -Djava.security.auth.login.config={{regionserver_jaas_config_file}}\\\"\\n{% else %}\\nexport HBASE_OPTS=\\\"$HBASE_OPTS -XX:+UseConcMarkSweepGC -XX:ErrorFile={{log_dir}}/hs_err_pid%p.log\\\"\\nexport HBASE_MASTER_OPTS=\\\"$HBASE_MASTER_OPTS -Xmx{{master_heapsize}}\\\"\\nexport HBASE_REGIONSERVER_OPTS=\\\"$HBASE_REGIONSERVER_OPTS -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70  -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}}\\\"\\n{% endif %}\",\n                \"hbase_log_dir\": \"/var/log/hbase\",\n                \"hbase_master_heapsize\": \"1024m\",\n                \"hbase_pid_dir\": \"/var/run/hbase\",\n                \"hbase_regionserver_heapsize\": \"1024m\",\n                \"hbase_regionserver_xmn_max\": \"512\",\n                \"hbase_regionserver_xmn_ratio\": \"0.2\",\n                \"hbase_user\": \"hbase\"\n            }\n        },\n        {\n            \"hbase-log4j\": {\n                \"content\": \"\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#     http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing, software\\n# distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n# See the License for the specific language governing permissions and\\n# limitations under the License.\\n\\n\\n# Define some default values that can be overridden by system properties\\nhbase.root.logger=INFO,console\\nhbase.security.logger=INFO,console\\nhbase.log.dir=.\\nhbase.log.file=hbase.log\\n\\n# Define the root logger to the system property \\\"hbase.root.logger\\\".\\nlog4j.rootLogger=${hbase.root.logger}\\n\\n# Logging Threshold\\nlog4j.threshold=ALL\\n\\n#\\n# Daily Rolling File Appender\\n#\\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.DRFA.File=${hbase.log.dir}/${hbase.log.file}\\n\\n# Rollver at midnight\\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\\n\\n# 30-day backup\\n#log4j.appender.DRFA.MaxBackupIndex=30\\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\\n\\n# Pattern format: Date LogLevel LoggerName LogMessage\\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\\n\\n# Rolling File Appender properties\\nhbase.log.maxfilesize=256MB\\nhbase.log.maxbackupindex=20\\n\\n# Rolling File Appender\\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\\nlog4j.appender.RFA.File=${hbase.log.dir}/${hbase.log.file}\\n\\nlog4j.appender.RFA.MaxFileSize=${hbase.log.maxfilesize}\\nlog4j.appender.RFA.MaxBackupIndex=${hbase.log.maxbackupindex}\\n\\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\\n\\n#\\n# Security audit appender\\n#\\nhbase.security.log.file=SecurityAuth.audit\\nhbase.security.log.maxfilesize=256MB\\nhbase.security.log.maxbackupindex=20\\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\\nlog4j.appender.RFAS.File=${hbase.log.dir}/${hbase.security.log.file}\\nlog4j.appender.RFAS.MaxFileSize=${hbase.security.log.maxfilesize}\\nlog4j.appender.RFAS.MaxBackupIndex=${hbase.security.log.maxbackupindex}\\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\\nlog4j.category.SecurityLogger=${hbase.security.logger}\\nlog4j.additivity.SecurityLogger=false\\n#log4j.logger.SecurityLogger.org.apache.hadoop.hbase.security.access.AccessController=TRACE\\n\\n#\\n# Null Appender\\n#\\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\\n\\n#\\n# console\\n# Add \\\"console\\\" to rootlogger above if you want to use this\\n#\\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\\nlog4j.appender.console.target=System.err\\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\\n\\n# Custom Logging levels\\n\\nlog4j.logger.org.apache.zookeeper=INFO\\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\\nlog4j.logger.org.apache.hadoop.hbase=DEBUG\\n# Make these two classes INFO-level. Make them DEBUG to see more zk debug.\\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZKUtil=INFO\\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher=INFO\\n#log4j.logger.org.apache.hadoop.dfs=DEBUG\\n# Set this class to log INFO only otherwise its OTT\\n# Enable this to get detailed connection error/retry logging.\\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=TRACE\\n\\n\\n# Uncomment this line to enable tracing on _every_ RPC call (this can be a lot of output)\\n#log4j.logger.org.apache.hadoop.ipc.HBaseServer.trace=DEBUG\\n\\n# Uncomment the below if you want to remove logging of client region caching'\\n# and scan of .META. messages\\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=INFO\\n# log4j.logger.org.apache.hadoop.hbase.client.MetaScanner=INFO\"\n            }\n        },\n        {\n            \"hbase-policy\": {\n                \"security.admin.protocol.acl\": \"*\",\n                \"security.client.protocol.acl\": \"*\",\n                \"security.masterregion.protocol.acl\": \"*\"\n            }\n        },\n        {\n            \"hbase-site\": {\n                \"dfs.domain.socket.path\": \"/var/lib/hadoop-hdfs/dn_socket\",\n                \"hbase.client.keyvalue.maxsize\": \"10485760\",\n                \"hbase.client.scanner.caching\": \"100\",\n                \"hbase.cluster.distributed\": \"true\",\n                \"hbase.coprocessor.master.classes\": \"\",\n                \"hbase.coprocessor.region.classes\": \"\",\n                \"hbase.defaults.for.version.skip\": \"true\",\n                \"hbase.hregion.majorcompaction\": \"604800000\",\n                \"hbase.hregion.majorcompaction.jitter\": \"0.50\",\n                \"hbase.hregion.max.filesize\": \"10737418240\",\n                \"hbase.hregion.memstore.block.multiplier\": \"4\",\n                \"hbase.hregion.memstore.flush.size\": \"134217728\",\n                \"hbase.hregion.memstore.mslab.enabled\": \"true\",\n                \"hbase.hstore.blockingStoreFiles\": \"10\",\n                \"hbase.hstore.compactionThreshold\": \"3\",\n                \"hbase.local.dir\": \"${hbase.tmp.dir}/local\",\n                \"hbase.master.info.bindAddress\": \"0.0.0.0\",\n                \"hbase.master.info.port\": \"60010\",\n                \"hbase.master.port\": \"60000\",\n                \"hbase.regionserver.global.memstore.lowerLimit\": \"0.38\",\n                \"hbase.regionserver.global.memstore.upperLimit\": \"0.4\",\n                \"hbase.regionserver.handler.count\": \"60\",\n                \"hbase.regionserver.info.port\": \"60030\",\n                \"hbase.rootdir\": \"hdfs://%HOSTGROUP::host_group_1%:8020/apps/hbase/data\",\n                \"hbase.security.authentication\": \"simple\",\n                \"hbase.security.authorization\": \"false\",\n                \"hbase.superuser\": \"hbase\",\n                \"hbase.tmp.dir\": \"/hadoop/hbase\",\n                \"hbase.zookeeper.property.clientPort\": \"2181\",\n                \"hbase.zookeeper.quorum\": \"%HOSTGROUP::host_group_1%\",\n                \"hbase.zookeeper.useMulti\": \"true\",\n                \"hfile.block.cache.size\": \"0.40\",\n                \"zookeeper.session.timeout\": \"30000\",\n                \"zookeeper.znode.parent\": \"/hbase-unsecure\"\n            }\n        },\n        {\n            \"hcat-env\": {\n                \"content\": \"\\n      # Licensed to the Apache Software Foundation (ASF) under one\\n      # or more contributor license agreements. See the NOTICE file\\n      # distributed with this work for additional information\\n      # regarding copyright ownership. The ASF licenses this file\\n      # to you under the Apache License, Version 2.0 (the\\n      # \\\"License\\\"); you may not use this file except in compliance\\n      # with the License. You may obtain a copy of the License at\\n      #\\n      # http://www.apache.org/licenses/LICENSE-2.0\\n      #\\n      # Unless required by applicable law or agreed to in writing, software\\n      # distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n      # See the License for the specific language governing permissions and\\n      # limitations under the License.\\n\\n      JAVA_HOME={{java64_home}}\\n      HCAT_PID_DIR={{hcat_pid_dir}}/\\n      HCAT_LOG_DIR={{hcat_log_dir}}/\\n      HCAT_CONF_DIR={{hcat_conf_dir}}\\n      HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\\n      #DBROOT is the path where the connector jars are downloaded\\n      DBROOT={{hcat_dbroot}}\\n      USER={{hcat_user}}\\n      METASTORE_PORT={{hive_metastore_port}}\"\n            }\n        },\n        {\n            \"hdfs-log4j\": {\n                \"content\": \"\\n#\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#  http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing,\\n# software distributed under the License is distributed on an\\n# \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n# KIND, either express or implied.  See the License for the\\n# specific language governing permissions and limitations\\n# under the License.\\n#\\n\\n\\n# Define some default values that can be overridden by system properties\\n# To change daemon root logger use hadoop_root_logger in hadoop-env\\nhadoop.root.logger=INFO,console\\nhadoop.log.dir=.\\nhadoop.log.file=hadoop.log\\n\\n\\n# Define the root logger to the system property \\\"hadoop.root.logger\\\".\\nlog4j.rootLogger=${hadoop.root.logger}, EventCounter\\n\\n# Logging Threshold\\nlog4j.threshhold=ALL\\n\\n#\\n# Daily Rolling File Appender\\n#\\n\\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.DRFA.File=${hadoop.log.dir}/${hadoop.log.file}\\n\\n# Rollver at midnight\\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\\n\\n# 30-day backup\\n#log4j.appender.DRFA.MaxBackupIndex=30\\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\\n\\n# Pattern format: Date LogLevel LoggerName LogMessage\\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\\n# Debugging Pattern format\\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\\n\\n\\n#\\n# console\\n# Add \\\"console\\\" to rootlogger above if you want to use this\\n#\\n\\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\\nlog4j.appender.console.target=System.err\\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\\n\\n#\\n# TaskLog Appender\\n#\\n\\n#Default values\\nhadoop.tasklog.taskid=null\\nhadoop.tasklog.iscleanup=false\\nhadoop.tasklog.noKeepSplits=4\\nhadoop.tasklog.totalLogFileSize=100\\nhadoop.tasklog.purgeLogSplits=true\\nhadoop.tasklog.logsRetainHours=12\\n\\nlog4j.appender.TLA=org.apache.hadoop.mapred.TaskLogAppender\\nlog4j.appender.TLA.taskId=${hadoop.tasklog.taskid}\\nlog4j.appender.TLA.isCleanup=${hadoop.tasklog.iscleanup}\\nlog4j.appender.TLA.totalLogFileSize=${hadoop.tasklog.totalLogFileSize}\\n\\nlog4j.appender.TLA.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.TLA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\\n\\n#\\n#Security audit appender\\n#\\nhadoop.security.logger=INFO,console\\nhadoop.security.log.maxfilesize=256MB\\nhadoop.security.log.maxbackupindex=20\\nlog4j.category.SecurityLogger=${hadoop.security.logger}\\nhadoop.security.log.file=SecurityAuth.audit\\nlog4j.appender.DRFAS=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.DRFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\\nlog4j.appender.DRFAS.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.DRFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\\nlog4j.appender.DRFAS.DatePattern=.yyyy-MM-dd\\n\\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\\nlog4j.appender.RFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\\nlog4j.appender.RFAS.MaxFileSize=${hadoop.security.log.maxfilesize}\\nlog4j.appender.RFAS.MaxBackupIndex=${hadoop.security.log.maxbackupindex}\\n\\n#\\n# hdfs audit logging\\n#\\nhdfs.audit.logger=INFO,console\\nlog4j.logger.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=${hdfs.audit.logger}\\nlog4j.additivity.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=false\\nlog4j.appender.DRFAAUDIT=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.DRFAAUDIT.File=${hadoop.log.dir}/hdfs-audit.log\\nlog4j.appender.DRFAAUDIT.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.DRFAAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\\nlog4j.appender.DRFAAUDIT.DatePattern=.yyyy-MM-dd\\n\\n#\\n# mapred audit logging\\n#\\nmapred.audit.logger=INFO,console\\nlog4j.logger.org.apache.hadoop.mapred.AuditLogger=${mapred.audit.logger}\\nlog4j.additivity.org.apache.hadoop.mapred.AuditLogger=false\\nlog4j.appender.MRAUDIT=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.MRAUDIT.File=${hadoop.log.dir}/mapred-audit.log\\nlog4j.appender.MRAUDIT.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.MRAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\\nlog4j.appender.MRAUDIT.DatePattern=.yyyy-MM-dd\\n\\n#\\n# Rolling File Appender\\n#\\n\\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\\nlog4j.appender.RFA.File=${hadoop.log.dir}/${hadoop.log.file}\\n\\n# Logfile size and and 30-day backups\\nlog4j.appender.RFA.MaxFileSize=256MB\\nlog4j.appender.RFA.MaxBackupIndex=10\\n\\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} - %m%n\\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\\n\\n\\n# Custom Logging levels\\n\\nhadoop.metrics.log.level=INFO\\n#log4j.logger.org.apache.hadoop.mapred.JobTracker=DEBUG\\n#log4j.logger.org.apache.hadoop.mapred.TaskTracker=DEBUG\\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\\nlog4j.logger.org.apache.hadoop.metrics2=${hadoop.metrics.log.level}\\n\\n# Jets3t library\\nlog4j.logger.org.jets3t.service.impl.rest.httpclient.RestS3Service=ERROR\\n\\n#\\n# Null Appender\\n# Trap security logger on the hadoop client side\\n#\\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\\n\\n#\\n# Event Counter Appender\\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\\n#\\nlog4j.appender.EventCounter=org.apache.hadoop.log.metrics.EventCounter\\n\\n# Removes \\\"deprecated\\\" messages\\nlog4j.logger.org.apache.hadoop.conf.Configuration.deprecation=WARN\\n\\n#\\n# HDFS block state change log from block manager\\n#\\n# Uncomment the following to suppress normal block state change\\n# messages from BlockManager in NameNode.\\n#log4j.logger.BlockStateChange=WARN\"\n            }\n        },\n        {\n            \"hdfs-site\": {\n                \"dfs.block.access.token.enable\": \"true\",\n                \"dfs.blockreport.initialDelay\": \"120\",\n                \"dfs.blocksize\": \"134217728\",\n                \"dfs.client.read.shortcircuit\": \"true\",\n                \"dfs.client.read.shortcircuit.streams.cache.size\": \"4096\",\n                \"dfs.cluster.administrators\": \" hdfs\",\n                \"dfs.datanode.address\": \"0.0.0.0:50010\",\n                \"dfs.datanode.balance.bandwidthPerSec\": \"6250000\",\n                \"dfs.datanode.data.dir\": \"/hadoop/hdfs/data\",\n                \"dfs.datanode.data.dir.perm\": \"750\",\n                \"dfs.datanode.du.reserved\": \"1073741824\",\n                \"dfs.datanode.failed.volumes.tolerated\": \"0\",\n                \"dfs.datanode.http.address\": \"0.0.0.0:50075\",\n                \"dfs.datanode.https.address\": \"0.0.0.0:50475\",\n                \"dfs.datanode.ipc.address\": \"0.0.0.0:8010\",\n                \"dfs.datanode.max.transfer.threads\": \"16384\",\n                \"dfs.domain.socket.path\": \"/var/lib/hadoop-hdfs/dn_socket\",\n                \"dfs.heartbeat.interval\": \"3\",\n                \"dfs.hosts.exclude\": \"/etc/hadoop/conf/dfs.exclude\",\n                \"dfs.http.policy\": \"HTTP_ONLY\",\n                \"dfs.https.port\": \"50470\",\n                \"dfs.journalnode.edits.dir\": \"/hadoop/hdfs/journalnode\",\n                \"dfs.journalnode.http-address\": \"0.0.0.0:8480\",\n                \"dfs.namenode.accesstime.precision\": \"0\",\n                \"dfs.namenode.avoid.read.stale.datanode\": \"true\",\n                \"dfs.namenode.avoid.write.stale.datanode\": \"true\",\n                \"dfs.namenode.checkpoint.dir\": \"/hadoop/hdfs/namesecondary\",\n                \"dfs.namenode.checkpoint.edits.dir\": \"${dfs.namenode.checkpoint.dir}\",\n                \"dfs.namenode.checkpoint.period\": \"21600\",\n                \"dfs.namenode.checkpoint.txns\": \"1000000\",\n                \"dfs.namenode.handler.count\": \"40\",\n                \"dfs.namenode.http-address\": \"%HOSTGROUP::host_group_1%:50070\",\n                \"dfs.namenode.https-address\": \"%HOSTGROUP::host_group_1%:50470\",\n                \"dfs.namenode.name.dir\": \"/hadoop/hdfs/namenode\",\n                \"dfs.namenode.name.dir.restore\": \"true\",\n                \"dfs.namenode.safemode.threshold-pct\": \"1.0f\",\n                \"dfs.namenode.secondary.http-address\": \"%HOSTGROUP::host_group_1%:50090\",\n                \"dfs.namenode.stale.datanode.interval\": \"30000\",\n                \"dfs.namenode.startup.delay.block.deletion.sec\": \"3600\",\n                \"dfs.namenode.write.stale.datanode.ratio\": \"1.0f\",\n                \"dfs.permissions.enabled\": \"true\",\n                \"dfs.permissions.superusergroup\": \"hdfs\",\n                \"dfs.replication\": \"3\",\n                \"dfs.replication.max\": \"50\",\n                \"dfs.support.append\": \"true\",\n                \"dfs.webhdfs.enabled\": \"true\",\n                \"fs.permissions.umask-mode\": \"022\"\n            }\n        },\n        {\n            \"hive-env\": {\n                \"content\": \"\\n if [ \\\"$SERVICE\\\" = \\\"cli\\\" ]; then\\n   if [ -z \\\"$DEBUG\\\" ]; then\\n     export HADOOP_OPTS=\\\"$HADOOP_OPTS -XX:NewRatio=12 -Xms10m -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:+UseParNewGC -XX:-UseGCOverheadLimit\\\"\\n   else\\n     export HADOOP_OPTS=\\\"$HADOOP_OPTS -XX:NewRatio=12 -Xms10m -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:-UseGCOverheadLimit\\\"\\n   fi\\n fi\\n\\n# The heap size of the jvm stared by hive shell script can be controlled via:\\n\\nexport HADOOP_HEAPSIZE=\\\"{{hive_heapsize}}\\\"\\nexport HADOOP_CLIENT_OPTS=\\\"-Xmx${HADOOP_HEAPSIZE}m $HADOOP_CLIENT_OPTS\\\"\\n\\n# Larger heap size may be required when running queries over large number of files or partitions.\\n# By default hive shell scripts use a heap size of 256 (MB).  Larger heap size would also be\\n# appropriate for hive server (hwi etc).\\n\\n\\n# Set HADOOP_HOME to point to a specific hadoop install directory\\nHADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\\n\\n# Hive Configuration Directory can be controlled by:\\nexport HIVE_CONF_DIR={{hive_config_dir}}\\n\\n# Folder containing extra libraries required for hive compilation/execution can be controlled by:\\nif [ \\\"${HIVE_AUX_JARS_PATH}\\\" != \\\"\\\" ]; then\\n  export HIVE_AUX_JARS_PATH=${HIVE_AUX_JARS_PATH}\\nelif [ -d \\\"/usr/hdp/current/hive-webhcat/share/hcatalog\\\" ]; then\\n  export HIVE_AUX_JARS_PATH=/usr/hdp/current/hive-webhcat/share/hcatalog\\nfi\\n\\nexport METASTORE_PORT={{hive_metastore_port}}\",\n                \"hcat_log_dir\": \"/var/log/webhcat\",\n                \"hcat_pid_dir\": \"/var/run/webhcat\",\n                \"hcat_user\": \"hcat\",\n                \"hive_ambari_database\": \"MySQL\",\n                \"hive_database\": \"New MySQL Database\",\n                \"hive_database_name\": \"hive\",\n                \"hive_database_type\": \"mysql\",\n                \"hive_hostname\": \"%HOSTGROUP::host_group_1%\",\n                \"hive_log_dir\": \"/var/log/hive\",\n                \"hive_metastore_port\": \"9083\",\n                \"hive_pid_dir\": \"/var/run/hive\",\n                \"hive_user\": \"hive\",\n                \"webhcat_user\": \"hcat\"\n            }\n        },\n        {\n            \"hive-exec-log4j\": {\n                \"content\": \"\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#     http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing, software\\n# distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n# See the License for the specific language governing permissions and\\n# limitations under the License.\\n\\n# Define some default values that can be overridden by system properties\\n\\nhive.log.threshold=ALL\\nhive.root.logger=INFO,FA\\nhive.log.dir=${java.io.tmpdir}/${user.name}\\nhive.query.id=hadoop\\nhive.log.file=${hive.query.id}.log\\n\\n# Define the root logger to the system property \\\"hadoop.root.logger\\\".\\nlog4j.rootLogger=${hive.root.logger}, EventCounter\\n\\n# Logging Threshold\\nlog4j.threshhold=${hive.log.threshold}\\n\\n#\\n# File Appender\\n#\\n\\nlog4j.appender.FA=org.apache.log4j.FileAppender\\nlog4j.appender.FA.File=${hive.log.dir}/${hive.log.file}\\nlog4j.appender.FA.layout=org.apache.log4j.PatternLayout\\n\\n# Pattern format: Date LogLevel LoggerName LogMessage\\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\\n# Debugging Pattern format\\nlog4j.appender.FA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\\n\\n\\n#\\n# console\\n# Add \\\"console\\\" to rootlogger above if you want to use this\\n#\\n\\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\\nlog4j.appender.console.target=System.err\\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\\n\\n#custom logging levels\\n#log4j.logger.xxx=DEBUG\\n\\n#\\n# Event Counter Appender\\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\\n#\\nlog4j.appender.EventCounter=org.apache.hadoop.hive.shims.HiveEventCounter\\n\\n\\nlog4j.category.DataNucleus=ERROR,FA\\nlog4j.category.Datastore=ERROR,FA\\nlog4j.category.Datastore.Schema=ERROR,FA\\nlog4j.category.JPOX.Datastore=ERROR,FA\\nlog4j.category.JPOX.Plugin=ERROR,FA\\nlog4j.category.JPOX.MetaData=ERROR,FA\\nlog4j.category.JPOX.Query=ERROR,FA\\nlog4j.category.JPOX.General=ERROR,FA\\nlog4j.category.JPOX.Enhancer=ERROR,FA\\n\\n\\n# Silence useless ZK logs\\nlog4j.logger.org.apache.zookeeper.server.NIOServerCnxn=WARN,FA\\nlog4j.logger.org.apache.zookeeper.ClientCnxnSocketNIO=WARN,FA\"\n            }\n        },\n        {\n            \"hive-log4j\": {\n                \"content\": \"\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#     http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing, software\\n# distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n# See the License for the specific language governing permissions and\\n# limitations under the License.\\n\\n# Define some default values that can be overridden by system properties\\nhive.log.threshold=ALL\\nhive.root.logger=INFO,DRFA\\nhive.log.dir=${java.io.tmpdir}/${user.name}\\nhive.log.file=hive.log\\n\\n# Define the root logger to the system property \\\"hadoop.root.logger\\\".\\nlog4j.rootLogger=${hive.root.logger}, EventCounter\\n\\n# Logging Threshold\\nlog4j.threshold=${hive.log.threshold}\\n\\n#\\n# Daily Rolling File Appender\\n#\\n# Use the PidDailyerRollingFileAppend class instead if you want to use separate log files\\n# for different CLI session.\\n#\\n# log4j.appender.DRFA=org.apache.hadoop.hive.ql.log.PidDailyRollingFileAppender\\n\\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\\n\\nlog4j.appender.DRFA.File=${hive.log.dir}/${hive.log.file}\\n\\n# Rollver at midnight\\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\\n\\n# 30-day backup\\n#log4j.appender.DRFA.MaxBackupIndex=30\\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\\n\\n# Pattern format: Date LogLevel LoggerName LogMessage\\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\\n# Debugging Pattern format\\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t]: %c{2} (%F:%M(%L)) - %m%n\\n\\n\\n#\\n# console\\n# Add \\\"console\\\" to rootlogger above if you want to use this\\n#\\n\\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\\nlog4j.appender.console.target=System.err\\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} [%t]: %p %c{2}: %m%n\\nlog4j.appender.console.encoding=UTF-8\\n\\n#custom logging levels\\n#log4j.logger.xxx=DEBUG\\n\\n#\\n# Event Counter Appender\\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\\n#\\nlog4j.appender.EventCounter=org.apache.hadoop.hive.shims.HiveEventCounter\\n\\n\\nlog4j.category.DataNucleus=ERROR,DRFA\\nlog4j.category.Datastore=ERROR,DRFA\\nlog4j.category.Datastore.Schema=ERROR,DRFA\\nlog4j.category.JPOX.Datastore=ERROR,DRFA\\nlog4j.category.JPOX.Plugin=ERROR,DRFA\\nlog4j.category.JPOX.MetaData=ERROR,DRFA\\nlog4j.category.JPOX.Query=ERROR,DRFA\\nlog4j.category.JPOX.General=ERROR,DRFA\\nlog4j.category.JPOX.Enhancer=ERROR,DRFA\\n\\n\\n# Silence useless ZK logs\\nlog4j.logger.org.apache.zookeeper.server.NIOServerCnxn=WARN,DRFA\\nlog4j.logger.org.apache.zookeeper.ClientCnxnSocketNIO=WARN,DRFA\"\n            }\n        },\n        {\n            \"kafka-broker\": {\n                \"auto.create.topics.enable\": \"true\",\n                \"controlled.shutdown.enable\": \"false\",\n                \"controlled.shutdown.max.retries\": \"3\",\n                \"controlled.shutdown.retry.backoff.ms\": \"5000\",\n                \"controller.message.queue.size\": \"10\",\n                \"controller.socket.timeout.ms\": \"30000\",\n                \"default.replication.factor\": \"1\",\n                \"fetch.purgatory.purge.interval.requests\": \"10000\",\n                \"kafka.ganglia.metrics.group\": \"kafka\",\n                \"kafka.ganglia.metrics.host\": \"%HOSTGROUP::host_group_1%\",\n                \"kafka.ganglia.metrics.port\": \"8671\",\n                \"kafka.ganglia.metrics.reporter.enabled\": \"true\",\n                \"kafka.metrics.reporters\": \"kafka.ganglia.KafkaGangliaMetricsReporter\",\n                \"log.cleanup.interval.mins\": \"10\",\n                \"log.dirs\": \"/kafka-logs\",\n                \"log.flush.interval.messages\": \"10000\",\n                \"log.flush.interval.ms\": \"3000\",\n                \"log.flush.scheduler.interval.ms\": \"3000\",\n                \"log.index.interval.bytes\": \"4096\",\n                \"log.index.size.max.bytes\": \"10485760\",\n                \"log.retention.bytes\": \"-1\",\n                \"log.retention.hours\": \"168\",\n                \"log.roll.hours\": \"168\",\n                \"log.segment.bytes\": \"1073741824\",\n                \"message.max.bytes\": \"1000000\",\n                \"num.io.threads\": \"8\",\n                \"num.network.threads\": \"3\",\n                \"num.partitions\": \"1\",\n                \"num.replica.fetchers\": \"1\",\n                \"port\": \"6667\",\n                \"producer.purgatory.purge.interval.requests\": \"10000\",\n                \"queued.max.requests\": \"500\",\n                \"replica.fetch.max.bytes\": \"1048576\",\n                \"replica.fetch.min.bytes\": \"1\",\n                \"replica.fetch.wait.max.ms\": \"500\",\n                \"replica.high.watermark.checkpoint.interval.ms\": \"5000\",\n                \"replica.lag.max.messages\": \"4000\",\n                \"replica.lag.time.max.ms\": \"10000\",\n                \"replica.socket.receive.buffer.bytes\": \"65536\",\n                \"replica.socket.timeout.ms\": \"30000\",\n                \"socket.receive.buffer.bytes\": \"102400\",\n                \"socket.request.max.bytes\": \"104857600\",\n                \"socket.send.buffer.bytes\": \"102400\",\n                \"zookeeper.connect\": \"%HOSTGROUP::host_group_1%:2181\",\n                \"zookeeper.connection.timeout.ms\": \"6000\",\n                \"zookeeper.session.timeout.ms\": \"6000\",\n                \"zookeeper.sync.time.ms\": \"2000\"\n            }\n        },\n        {\n            \"kafka-env\": {\n                \"content\": \"\\n#!/bin/bash\\n\\n# Set KAFKA specific environment variables here.\\n\\n# The java implementation to use.\\nexport JAVA_HOME={{java64_home}}\\nexport PATH=$PATH:$JAVA_HOME/bin\",\n                \"kafka_log_dir\": \"/var/log/kafka\",\n                \"kafka_pid_dir\": \"/var/run/kafka\",\n                \"kafka_user\": \"kafka\"\n            }\n        },\n        {\n            \"kafka-log4j\": {\n                \"content\": \"\\n#\\n#\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#   http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing,\\n# software distributed under the License is distributed on an\\n# \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n# KIND, either express or implied.  See the License for the\\n# specific language governing permissions and limitations\\n# under the License.\\n#\\n#\\n#\\nkafka.logs.dir=logs\\n\\nlog4j.rootLogger=INFO, stdout\\n\\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n\\n\\nlog4j.appender.kafkaAppender=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.kafkaAppender.DatePattern='.'yyyy-MM-dd-HH\\nlog4j.appender.kafkaAppender.File=${kafka.logs.dir}/server.log\\nlog4j.appender.kafkaAppender.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.kafkaAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\\n\\nlog4j.appender.stateChangeAppender=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.stateChangeAppender.DatePattern='.'yyyy-MM-dd-HH\\nlog4j.appender.stateChangeAppender.File=${kafka.logs.dir}/state-change.log\\nlog4j.appender.stateChangeAppender.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.stateChangeAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\\n\\nlog4j.appender.requestAppender=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.requestAppender.DatePattern='.'yyyy-MM-dd-HH\\nlog4j.appender.requestAppender.File=${kafka.logs.dir}/kafka-request.log\\nlog4j.appender.requestAppender.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.requestAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\\n\\nlog4j.appender.cleanerAppender=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.cleanerAppender.DatePattern='.'yyyy-MM-dd-HH\\nlog4j.appender.cleanerAppender.File=${kafka.logs.dir}/log-cleaner.log\\nlog4j.appender.cleanerAppender.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.cleanerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\\n\\nlog4j.appender.controllerAppender=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.controllerAppender.DatePattern='.'yyyy-MM-dd-HH\\nlog4j.appender.controllerAppender.File=${kafka.logs.dir}/controller.log\\nlog4j.appender.controllerAppender.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.controllerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\\n\\n# Turn on all our debugging info\\n#log4j.logger.kafka.producer.async.DefaultEventHandler=DEBUG, kafkaAppender\\n#log4j.logger.kafka.client.ClientUtils=DEBUG, kafkaAppender\\n#log4j.logger.kafka.perf=DEBUG, kafkaAppender\\n#log4j.logger.kafka.perf.ProducerPerformance$ProducerThread=DEBUG, kafkaAppender\\n#log4j.logger.org.I0Itec.zkclient.ZkClient=DEBUG\\nlog4j.logger.kafka=INFO, kafkaAppender\\nlog4j.logger.kafka.network.RequestChannel$=WARN, requestAppender\\nlog4j.additivity.kafka.network.RequestChannel$=false\\n\\n#log4j.logger.kafka.network.Processor=TRACE, requestAppender\\n#log4j.logger.kafka.server.KafkaApis=TRACE, requestAppender\\n#log4j.additivity.kafka.server.KafkaApis=false\\nlog4j.logger.kafka.request.logger=WARN, requestAppender\\nlog4j.additivity.kafka.request.logger=false\\n\\nlog4j.logger.kafka.controller=TRACE, controllerAppender\\nlog4j.additivity.kafka.controller=false\\n\\nlog4j.logger.kafka.log.LogCleaner=INFO, cleanerAppender\\nlog4j.additivity.kafka.log.LogCleaner=false\\n\\nlog4j.logger.state.change.logger=TRACE, stateChangeAppender\\nlog4j.additivity.state.change.logger=false\"\n            }\n        },\n        {\n            \"knox-env\": {\n                \"knox_group\": \"knox\",\n                \"knox_pid_dir\": \"/var/run/knox\",\n                \"knox_user\": \"knox\"\n            }\n        },\n        {\n            \"ldap-log4j\": {\n                \"content\": \"\\n        # Licensed to the Apache Software Foundation (ASF) under one\\n        # or more contributor license agreements.  See the NOTICE file\\n        # distributed with this work for additional information\\n        # regarding copyright ownership.  The ASF licenses this file\\n        # to you under the Apache License, Version 2.0 (the\\n        # \\\"License\\\"); you may not use this file except in compliance\\n        # with the License.  You may obtain a copy of the License at\\n        #\\n        #     http://www.apache.org/licenses/LICENSE-2.0\\n        #\\n        # Unless required by applicable law or agreed to in writing, software\\n        # distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n        # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n        # See the License for the specific language governing permissions and\\n        # limitations under the License.\\n\\n        app.log.dir=${launcher.dir}/../logs\\n        app.log.file=${launcher.name}.log\\n\\n        log4j.rootLogger=ERROR, drfa\\n        log4j.logger.org.apache.directory.server.ldap.LdapServer=INFO\\n        log4j.logger.org.apache.directory=WARN\\n\\n        log4j.appender.stdout=org.apache.log4j.ConsoleAppender\\n        log4j.appender.stdout.layout=org.apache.log4j.PatternLayout\\n        log4j.appender.stdout.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\\n\\n        log4j.appender.drfa=org.apache.log4j.DailyRollingFileAppender\\n        log4j.appender.drfa.File=${app.log.dir}/${app.log.file}\\n        log4j.appender.drfa.DatePattern=.yyyy-MM-dd\\n        log4j.appender.drfa.layout=org.apache.log4j.PatternLayout\\n        log4j.appender.drfa.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\"\n            }\n        },\n        {\n            \"mapred-env\": {\n                \"content\": \"\\n# export JAVA_HOME=/home/y/libexec/jdk1.6.0/\\n\\nexport HADOOP_JOB_HISTORYSERVER_HEAPSIZE={{jobhistory_heapsize}}\\n\\nexport HADOOP_MAPRED_ROOT_LOGGER=INFO,RFA\\n\\n#export HADOOP_JOB_HISTORYSERVER_OPTS=\\n#export HADOOP_MAPRED_LOG_DIR=\\\"\\\" # Where log files are stored.  $HADOOP_MAPRED_HOME/logs by default.\\n#export HADOOP_JHS_LOGGER=INFO,RFA # Hadoop JobSummary logger.\\n#export HADOOP_MAPRED_PID_DIR= # The pid files are stored. /tmp by default.\\n#export HADOOP_MAPRED_IDENT_STRING= #A string representing this instance of hadoop. $USER by default\\n#export HADOOP_MAPRED_NICENESS= #The scheduling priority for daemons. Defaults to 0.\\nexport HADOOP_OPTS=\\\"-Dhdp.version=$HDP_VERSION $HADOOP_OPTS\\\"\",\n                \"jobhistory_heapsize\": \"900\",\n                \"mapred_log_dir_prefix\": \"/var/log/hadoop-mapreduce\",\n                \"mapred_pid_dir_prefix\": \"/var/run/hadoop-mapreduce\",\n                \"mapred_user\": \"mapred\"\n            }\n        },\n        {\n            \"mapred-site\": {\n                \"mapreduce.admin.map.child.java.opts\": \"-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}\",\n                \"mapreduce.admin.reduce.child.java.opts\": \"-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}\",\n                \"mapreduce.admin.user.env\": \"LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-amd64-64\",\n                \"mapreduce.am.max-attempts\": \"2\",\n                \"mapreduce.application.classpath\": \"$PWD/mr-framework/hadoop/share/hadoop/mapreduce/*:$PWD/mr-framework/hadoop/share/hadoop/mapreduce/lib/*:$PWD/mr-framework/hadoop/share/hadoop/common/*:$PWD/mr-framework/hadoop/share/hadoop/common/lib/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/lib/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/lib/*:/usr/hdp/${hdp.version}/hadoop/lib/hadoop-lzo-0.6.0.${hdp.version}.jar:/etc/hadoop/conf/secure\",\n                \"mapreduce.application.framework.path\": \"/hdp/apps/${hdp.version}/mapreduce/mapreduce.tar.gz#mr-framework\",\n                \"mapreduce.cluster.administrators\": \" hadoop\",\n                \"mapreduce.framework.name\": \"yarn\",\n                \"mapreduce.job.emit-timeline-data\": \"false\",\n                \"mapreduce.job.reduce.slowstart.completedmaps\": \"0.05\",\n                \"mapreduce.jobhistory.address\": \"%HOSTGROUP::host_group_1%:10020\",\n                \"mapreduce.jobhistory.bind-host\": \"0.0.0.0\",\n                \"mapreduce.jobhistory.done-dir\": \"/mr-history/done\",\n                \"mapreduce.jobhistory.intermediate-done-dir\": \"/mr-history/tmp\",\n                \"mapreduce.jobhistory.webapp.address\": \"%HOSTGROUP::host_group_1%:19888\",\n                \"mapreduce.map.java.opts\": \"-Xmx819m\",\n                \"mapreduce.map.log.level\": \"INFO\",\n                \"mapreduce.map.memory.mb\": \"1024\",\n                \"mapreduce.map.output.compress\": \"false\",\n                \"mapreduce.map.sort.spill.percent\": \"0.7\",\n                \"mapreduce.map.speculative\": \"false\",\n                \"mapreduce.output.fileoutputformat.compress\": \"false\",\n                \"mapreduce.output.fileoutputformat.compress.type\": \"BLOCK\",\n                \"mapreduce.reduce.input.buffer.percent\": \"0.0\",\n                \"mapreduce.reduce.java.opts\": \"-Xmx819m\",\n                \"mapreduce.reduce.log.level\": \"INFO\",\n                \"mapreduce.reduce.memory.mb\": \"1024\",\n                \"mapreduce.reduce.shuffle.fetch.retry.enabled\": \"1\",\n                \"mapreduce.reduce.shuffle.fetch.retry.interval-ms\": \"1000\",\n                \"mapreduce.reduce.shuffle.fetch.retry.timeout-ms\": \"30000\",\n                \"mapreduce.reduce.shuffle.input.buffer.percent\": \"0.7\",\n                \"mapreduce.reduce.shuffle.merge.percent\": \"0.66\",\n                \"mapreduce.reduce.shuffle.parallelcopies\": \"30\",\n                \"mapreduce.reduce.speculative\": \"false\",\n                \"mapreduce.shuffle.port\": \"13562\",\n                \"mapreduce.task.io.sort.factor\": \"100\",\n                \"mapreduce.task.io.sort.mb\": \"410\",\n                \"mapreduce.task.timeout\": \"300000\",\n                \"yarn.app.mapreduce.am.admin-command-opts\": \"-Dhdp.version=${hdp.version}\",\n                \"yarn.app.mapreduce.am.command-opts\": \"-Xmx819m -Dhdp.version=${hdp.version}\",\n                \"yarn.app.mapreduce.am.log.level\": \"INFO\",\n                \"yarn.app.mapreduce.am.resource.mb\": \"1024\",\n                \"yarn.app.mapreduce.am.staging-dir\": \"/user\"\n            }\n        },\n        {\n            \"nagios-env\": {\n                \"nagios_group\": \"nagios\",\n                \"nagios_user\": \"nagios\",\n                \"nagios_web_login\": \"nagiosadmin\"\n            }\n        },\n        {\n            \"oozie-env\": {\n                \"content\": \"\\n#!/bin/bash\\n\\nif [ -d \\\"/usr/lib/bigtop-tomcat\\\" ]; then\\n  export OOZIE_CONFIG=${OOZIE_CONFIG:-/etc/oozie/conf}\\n  export CATALINA_BASE=${CATALINA_BASE:-{{oozie_server_dir}}}\\n  export CATALINA_TMPDIR=${CATALINA_TMPDIR:-/var/tmp/oozie}\\n  export OOZIE_CATALINA_HOME=/usr/lib/bigtop-tomcat\\nfi\\n\\n#Set JAVA HOME\\nexport JAVA_HOME={{java_home}}\\n\\nexport JRE_HOME=${JAVA_HOME}\\n\\n# Set Oozie specific environment variables here.\\n\\n# Settings for the Embedded Tomcat that runs Oozie\\n# Java System properties for Oozie should be specified in this variable\\n#\\n# export CATALINA_OPTS=\\n\\n# Oozie configuration file to load from Oozie configuration directory\\n#\\n# export OOZIE_CONFIG_FILE=oozie-site.xml\\n\\n# Oozie logs directory\\n#\\nexport OOZIE_LOG={{oozie_log_dir}}\\n\\n# Oozie pid directory\\n#\\nexport CATALINA_PID={{pid_file}}\\n\\n#Location of the data for oozie\\nexport OOZIE_DATA={{oozie_data_dir}}\\n\\n# Oozie Log4J configuration file to load from Oozie configuration directory\\n#\\n# export OOZIE_LOG4J_FILE=oozie-log4j.properties\\n\\n# Reload interval of the Log4J configuration file, in seconds\\n#\\n# export OOZIE_LOG4J_RELOAD=10\\n\\n# The port Oozie server runs\\n#\\nexport OOZIE_HTTP_PORT={{oozie_server_port}}\\n\\n# The admin port Oozie server runs\\n#\\nexport OOZIE_ADMIN_PORT={{oozie_server_admin_port}}\\n\\n# The host name Oozie server runs on\\n#\\n# export OOZIE_HTTP_HOSTNAME=`hostname -f`\\n\\n# The base URL for callback URLs to Oozie\\n#\\n# export OOZIE_BASE_URL=\\\"http://${OOZIE_HTTP_HOSTNAME}:${OOZIE_HTTP_PORT}/oozie\\\"\\nexport JAVA_LIBRARY_PATH={{hadoop_lib_home}}/native/Linux-amd64-64\\n\\n# At least 1 minute of retry time to account for server downtime during\\n# upgrade/downgrade\\nexport OOZIE_CLIENT_OPTS=\\\"${OOZIE_CLIENT_OPTS} -Doozie.connection.retry.count=5 \\\"\\n\\n# This is needed so that Oozie does not run into OOM or GC Overhead limit\\n# exceeded exceptions. If the oozie server is handling large number of\\n# workflows/coordinator jobs, the memory settings may need to be revised\\nexport CATALINA_OPTS=\\\"${CATALINA_OPTS} -Xmx2048m -XX:MaxPermSize=256m \\\"\",\n                \"oozie_admin_port\": \"11001\",\n                \"oozie_ambari_database\": \"MySQL\",\n                \"oozie_data_dir\": \"/hadoop/oozie/data\",\n                \"oozie_database\": \"New Derby Database\",\n                \"oozie_derby_database\": \"Derby\",\n                \"oozie_existing_mysql_database\": \"MySQL\",\n                \"oozie_existing_oracle_database\": \"Oracle\",\n                \"oozie_existing_oracle_host\": \"\",\n                \"oozie_existing_postgresql_database\": \"PostgreSQL\",\n                \"oozie_existing_postgresql_host\": \"\",\n                \"oozie_heapsize\": \"2048m\",\n                \"oozie_log_dir\": \"/var/log/oozie\",\n                \"oozie_permsize\": \"256m\",\n                \"oozie_pid_dir\": \"/var/run/oozie\",\n                \"oozie_user\": \"oozie\"\n            }\n        },\n        {\n            \"oozie-log4j\": {\n                \"content\": \"\\n#\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#    http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing, software\\n# distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n# See the License for the specific language governing permissions and\\n# limitations under the License. See accompanying LICENSE file.\\n#\\n\\n# If the Java System property 'oozie.log.dir' is not defined at Oozie start up time\\n# XLogService sets its value to '${oozie.home}/logs'\\n\\nlog4j.appender.oozie=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.oozie.DatePattern='.'yyyy-MM-dd-HH\\nlog4j.appender.oozie.File=${oozie.log.dir}/oozie.log\\nlog4j.appender.oozie.Append=true\\nlog4j.appender.oozie.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.oozie.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - SERVER[${oozie.instance.id}] %m%n\\n\\nlog4j.appender.oozieops=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.oozieops.DatePattern='.'yyyy-MM-dd\\nlog4j.appender.oozieops.File=${oozie.log.dir}/oozie-ops.log\\nlog4j.appender.oozieops.Append=true\\nlog4j.appender.oozieops.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.oozieops.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\\n\\nlog4j.appender.oozieinstrumentation=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.oozieinstrumentation.DatePattern='.'yyyy-MM-dd\\nlog4j.appender.oozieinstrumentation.File=${oozie.log.dir}/oozie-instrumentation.log\\nlog4j.appender.oozieinstrumentation.Append=true\\nlog4j.appender.oozieinstrumentation.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.oozieinstrumentation.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\\n\\nlog4j.appender.oozieaudit=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.oozieaudit.DatePattern='.'yyyy-MM-dd\\nlog4j.appender.oozieaudit.File=${oozie.log.dir}/oozie-audit.log\\nlog4j.appender.oozieaudit.Append=true\\nlog4j.appender.oozieaudit.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.oozieaudit.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\\n\\nlog4j.appender.openjpa=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.openjpa.DatePattern='.'yyyy-MM-dd\\nlog4j.appender.openjpa.File=${oozie.log.dir}/oozie-jpa.log\\nlog4j.appender.openjpa.Append=true\\nlog4j.appender.openjpa.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.openjpa.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\\n\\nlog4j.logger.openjpa=INFO, openjpa\\nlog4j.logger.oozieops=INFO, oozieops\\nlog4j.logger.oozieinstrumentation=ALL, oozieinstrumentation\\nlog4j.logger.oozieaudit=ALL, oozieaudit\\nlog4j.logger.org.apache.oozie=INFO, oozie\\nlog4j.logger.org.apache.hadoop=WARN, oozie\\nlog4j.logger.org.mortbay=WARN, oozie\\nlog4j.logger.org.hsqldb=WARN, oozie\\nlog4j.logger.org.apache.hadoop.security.authentication.server=INFO, oozie\"\n            }\n        },\n        {\n            \"pig-env\": {\n                \"content\": \"\\nJAVA_HOME={{java64_home}}\\nHADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\\n\\nif [ -d \\\"/usr/lib/tez\\\" ]; then\\n  PIG_OPTS=\\\"$PIG_OPTS -Dmapreduce.framework.name=yarn\\\"\\nfi\"\n            }\n        },\n        {\n            \"pig-log4j\": {\n                \"content\": \"\\n#\\n#\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#   http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing,\\n# software distributed under the License is distributed on an\\n# \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n# KIND, either express or implied.  See the License for the\\n# specific language governing permissions and limitations\\n# under the License.\\n#\\n#\\n#\\n\\n# ***** Set root logger level to DEBUG and its only appender to A.\\nlog4j.logger.org.apache.pig=info, A\\n\\n# ***** A is set to be a ConsoleAppender.\\nlog4j.appender.A=org.apache.log4j.ConsoleAppender\\n# ***** A uses PatternLayout.\\nlog4j.appender.A.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.A.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n\"\n            }\n        },\n        {\n            \"pig-properties\": {\n                \"content\": \"\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#   http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing,\\n# software distributed under the License is distributed on an\\n# \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n# KIND, either express or implied.  See the License for the\\n# specific language governing permissions and limitations\\n# under the License.\\n\\n# Pig default configuration file. All values can be overwritten by pig.properties and command line arguments.\\n# see bin/pig -help\\n\\n# brief logging (no timestamps)\\nbrief=false\\n\\n# debug level, INFO is default\\ndebug=INFO\\n\\n# verbose print all log messages to screen (default to print only INFO and above to screen)\\nverbose=false\\n\\n# exectype local|mapreduce, mapreduce is default\\nexectype=mapreduce\\n\\n# Enable insertion of information about script into hadoop job conf \\npig.script.info.enabled=true\\n\\n# Do not spill temp files smaller than this size (bytes)\\npig.spill.size.threshold=5000000\\n\\n# EXPERIMENT: Activate garbage collection when spilling a file bigger than this size (bytes)\\n# This should help reduce the number of files being spilled.\\npig.spill.gc.activation.size=40000000\\n\\n# the following two parameters are to help estimate the reducer number\\npig.exec.reducers.bytes.per.reducer=1000000000\\npig.exec.reducers.max=999\\n\\n# Temporary location to store the intermediate data.\\npig.temp.dir=/tmp/\\n\\n# Threshold for merging FRJoin fragment files\\npig.files.concatenation.threshold=100\\npig.optimistic.files.concatenation=false;\\n\\npig.disable.counter=false\\n\\n# Avoid pig failures when multiple jobs write to the same location\\npig.location.check.strict=false\\n\\nhcat.bin=/usr/bin/hcat\"\n            }\n        },\n        {\n            \"slider-env\": {\n                \"content\": \"\\n# Set Slider-specific environment variables here.\\n\\n# The only required environment variable is JAVA_HOME.  All others are\\n# optional.  When running a distributed configuration it is best to\\n# set JAVA_HOME in this file, so that it is correctly defined on\\n# remote nodes.\\n\\n# The java implementation to use.  Required.\\nexport JAVA_HOME={{java64_home}}\\n# The hadoop conf directory.  Optional as slider-client.xml can be edited to add properties.\\nexport HADOOP_CONF_DIR={{hadoop_conf_dir}}\"\n            }\n        },\n        {\n            \"slider-log4j\": {\n                \"content\": \"\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#     http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing, software\\n# distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n# See the License for the specific language governing permissions and\\n# limitations under the License.\\n\\n\\n# Define some default values that can be overridden by system properties\\nlog4j.rootLogger=INFO,stdout\\nlog4j.threshhold=ALL\\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\\n\\n# log layout skips stack-trace creation operations by avoiding line numbers and method\\nlog4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} [%t] %-5p %c{2} - %m%n\\n\\n# debug edition is much more expensive\\n#log4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} [%t] %-5p %c{2} (%F:%M(%L)) - %m%n\\n\\n\\nlog4j.appender.subprocess=org.apache.log4j.ConsoleAppender\\nlog4j.appender.subprocess.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.subprocess.layout.ConversionPattern=[%c{1}]: %m%n\\n#log4j.logger.org.apache.slider.yarn.appmaster.SliderAppMasterer.master=INFO,subprocess\\n\\n# for debugging Slider\\n#log4j.logger.org.apache.slider=DEBUG\\n#log4j.logger.org.apache.slider=DEBUG\\n\\n# uncomment to debug service lifecycle issues\\n#log4j.logger.org.apache.hadoop.yarn.service.launcher=DEBUG\\n#log4j.logger.org.apache.hadoop.yarn.service=DEBUG\\n\\n# uncomment for YARN operations\\n#log4j.logger.org.apache.hadoop.yarn.client=DEBUG\\n\\n# uncomment this to debug security problems\\n#log4j.logger.org.apache.hadoop.security=DEBUG\\n\\n#crank back on some noise\\nlog4j.logger.org.apache.hadoop.util.NativeCodeLoader=ERROR\\nlog4j.logger.org.apache.hadoop.hdfs=WARN\\n\\n\\nlog4j.logger.org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor=WARN\\nlog4j.logger.org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl=WARN\\nlog4j.logger.org.apache.zookeeper=WARN\"\n            }\n        },\n        {\n            \"sqoop-env\": {\n                \"content\": \"\\n# Set Hadoop-specific environment variables here.\\n\\n#Set path to where bin/hadoop is available\\n#Set path to where bin/hadoop is available\\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\\n\\n#set the path to where bin/hbase is available\\nexport HBASE_HOME=${HBASE_HOME:-{{hbase_home}}}\\n\\n#Set the path to where bin/hive is available\\nexport HIVE_HOME=${HIVE_HOME:-{{hive_home}}}\\n\\n#Set the path for where zookeper config dir is\\nexport ZOOCFGDIR=${ZOOCFGDIR:-/etc/zookeeper/conf}\\n\\n# add libthrift in hive to sqoop class path first so hive imports work\\nexport SQOOP_USER_CLASSPATH=\\\"`ls ${HIVE_HOME}/lib/libthrift-*.jar 2> /dev/null`:${SQOOP_USER_CLASSPATH}\\\"\",\n                \"sqoop_user\": \"sqoop\"\n            }\n        },\n        {\n            \"storm-env\": {\n                \"content\": \"\\n#!/bin/bash\\n\\n# Set Storm specific environment variables here.\\n\\n# The java implementation to use.\\nexport JAVA_HOME={{java64_home}}\\n\\n# export STORM_CONF_DIR=\\\"\\\"\\nSTORM_HOME=/usr/hdp/current/storm-client\",\n                \"storm_log_dir\": \"/var/log/storm\",\n                \"storm_pid_dir\": \"/var/run/storm\",\n                \"storm_user\": \"storm\"\n            }\n        },\n        {\n            \"storm-site\": {\n                \"_storm.min.ruid\": \"null\",\n                \"_storm.thrift.nonsecure.transport\": \"backtype.storm.security.auth.SimpleTransportPlugin\",\n                \"_storm.thrift.secure.transport\": \"backtype.storm.security.auth.kerberos.KerberosSaslTransportPlugin\",\n                \"dev.zookeeper.path\": \"/tmp/dev-storm-zookeeper\",\n                \"drpc.childopts\": \"-Xmx768m _JAAS_PLACEHOLDER\",\n                \"drpc.invocations.port\": \"3773\",\n                \"drpc.port\": \"3772\",\n                \"drpc.queue.size\": \"128\",\n                \"drpc.request.timeout.secs\": \"600\",\n                \"drpc.worker.threads\": \"64\",\n                \"java.library.path\": \"/usr/local/lib:/opt/local/lib:/usr/lib:/usr/hdp/current/storm-client/lib\",\n                \"logviewer.appender.name\": \"A1\",\n                \"logviewer.childopts\": \"-Xmx128m _JAAS_PLACEHOLDER\",\n                \"logviewer.port\": \"8000\",\n                \"nimbus.childopts\": \"-Xmx1024m _JAAS_PLACEHOLDER -javaagent:/usr/hdp/current/storm-nimbus/contrib/storm-jmxetric/lib/jmxetric-1.0.4.jar=host=%HOSTGROUP::host_group_1%,port=8649,wireformat31x=true,mode=multicast,config=/usr/hdp/current/storm-nimbus/contrib/storm-jmxetric/conf/jmxetric-conf.xml,process=Nimbus_JVM\",\n                \"nimbus.cleanup.inbox.freq.secs\": \"600\",\n                \"nimbus.file.copy.expiration.secs\": \"600\",\n                \"nimbus.host\": \"%HOSTGROUP::host_group_1%\",\n                \"nimbus.inbox.jar.expiration.secs\": \"3600\",\n                \"nimbus.monitor.freq.secs\": \"10\",\n                \"nimbus.reassign\": \"true\",\n                \"nimbus.supervisor.timeout.secs\": \"60\",\n                \"nimbus.task.launch.secs\": \"120\",\n                \"nimbus.task.timeout.secs\": \"30\",\n                \"nimbus.thrift.max_buffer_size\": \"1048576\",\n                \"nimbus.thrift.port\": \"6627\",\n                \"nimbus.topology.validator\": \"backtype.storm.nimbus.DefaultTopologyValidator\",\n                \"storm.cluster.mode\": \"distributed\",\n                \"storm.local.dir\": \"/hadoop/storm\",\n                \"storm.local.mode.zmq\": \"false\",\n                \"storm.messaging.netty.buffer_size\": \"5242880\",\n                \"storm.messaging.netty.client_worker_threads\": \"1\",\n                \"storm.messaging.netty.max_retries\": \"30\",\n                \"storm.messaging.netty.max_wait_ms\": \"1000\",\n                \"storm.messaging.netty.min_wait_ms\": \"100\",\n                \"storm.messaging.netty.server_worker_threads\": \"1\",\n                \"storm.messaging.transport\": \"backtype.storm.messaging.netty.Context\",\n                \"storm.zookeeper.connection.timeout\": \"15000\",\n                \"storm.zookeeper.port\": \"2181\",\n                \"storm.zookeeper.retry.interval\": \"1000\",\n                \"storm.zookeeper.retry.intervalceiling.millis\": \"30000\",\n                \"storm.zookeeper.retry.times\": \"5\",\n                \"storm.zookeeper.root\": \"/storm\",\n                \"storm.zookeeper.servers\": \"['%HOSTGROUP::host_group_1%']\",\n                \"storm.zookeeper.session.timeout\": \"20000\",\n                \"supervisor.childopts\": \"-Xmx256m _JAAS_PLACEHOLDER -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=56431 -javaagent:/usr/hdp/current/storm-supervisor/contrib/storm-jmxetric/lib/jmxetric-1.0.4.jar=host=%HOSTGROUP::host_group_1%,port=8650,wireformat31x=true,mode=multicast,config=/usr/hdp/current/storm-supervisor/contrib/storm-jmxetric/conf/jmxetric-conf.xml,process=Supervisor_JVM\",\n                \"supervisor.heartbeat.frequency.secs\": \"5\",\n                \"supervisor.monitor.frequency.secs\": \"3\",\n                \"supervisor.slots.ports\": \"[6700, 6701]\",\n                \"supervisor.worker.start.timeout.secs\": \"120\",\n                \"supervisor.worker.timeout.secs\": \"30\",\n                \"task.heartbeat.frequency.secs\": \"3\",\n                \"task.refresh.poll.secs\": \"10\",\n                \"topology.acker.executors\": \"null\",\n                \"topology.builtin.metrics.bucket.size.secs\": \"60\",\n                \"topology.debug\": \"false\",\n                \"topology.disruptor.wait.strategy\": \"com.lmax.disruptor.BlockingWaitStrategy\",\n                \"topology.enable.message.timeouts\": \"true\",\n                \"topology.error.throttle.interval.secs\": \"10\",\n                \"topology.executor.receive.buffer.size\": \"1024\",\n                \"topology.executor.send.buffer.size\": \"1024\",\n                \"topology.fall.back.on.java.serialization\": \"true\",\n                \"topology.kryo.factory\": \"backtype.storm.serialization.DefaultKryoFactory\",\n                \"topology.max.error.report.per.interval\": \"5\",\n                \"topology.max.spout.pending\": \"null\",\n                \"topology.max.task.parallelism\": \"null\",\n                \"topology.message.timeout.secs\": \"30\",\n                \"topology.optimize\": \"true\",\n                \"topology.receiver.buffer.size\": \"8\",\n                \"topology.skip.missing.kryo.registrations\": \"false\",\n                \"topology.sleep.spout.wait.strategy.time.ms\": \"1\",\n                \"topology.spout.wait.strategy\": \"backtype.storm.spout.SleepSpoutWaitStrategy\",\n                \"topology.state.synchronization.timeout.secs\": \"60\",\n                \"topology.stats.sample.rate\": \"0.05\",\n                \"topology.tick.tuple.freq.secs\": \"null\",\n                \"topology.transfer.buffer.size\": \"1024\",\n                \"topology.trident.batch.emit.interval.millis\": \"500\",\n                \"topology.tuple.serializer\": \"backtype.storm.serialization.types.ListDelegateSerializer\",\n                \"topology.worker.childopts\": \"null\",\n                \"topology.worker.shared.thread.pool.size\": \"4\",\n                \"topology.workers\": \"1\",\n                \"transactional.zookeeper.port\": \"null\",\n                \"transactional.zookeeper.root\": \"/transactional\",\n                \"transactional.zookeeper.servers\": \"null\",\n                \"ui.childopts\": \"-Xmx768m _JAAS_PLACEHOLDER\",\n                \"ui.port\": \"8744\",\n                \"worker.childopts\": \"-Xmx768m _JAAS_PLACEHOLDER -javaagent:/usr/hdp/current/storm-client/contrib/storm-jmxetric/lib/jmxetric-1.0.4.jar=host=%HOSTGROUP::host_group_1%,port=8650,wireformat31x=true,mode=multicast,config=/usr/hdp/current/storm-client/contrib/storm-jmxetric/conf/jmxetric-conf.xml,process=Worker_%ID%_JVM\",\n                \"worker.heartbeat.frequency.secs\": \"1\",\n                \"zmq.hwm\": \"0\",\n                \"zmq.linger.millis\": \"5000\",\n                \"zmq.threads\": \"1\"\n            }\n        },\n        {\n            \"tez-env\": {\n                \"content\": \"\\n# Tez specific configuration\\nexport TEZ_CONF_DIR={{config_dir}}\\n\\n# Set HADOOP_HOME to point to a specific hadoop install directory\\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\\n\\n# The java implementation to use.\\nexport JAVA_HOME={{java64_home}}\",\n                \"tez_user\": \"tez\"\n            }\n        },\n        {\n            \"tez-site\": {\n                \"tez.am.am-rm.heartbeat.interval-ms.max\": \"250\",\n                \"tez.am.container.idle.release-timeout-max.millis\": \"20000\",\n                \"tez.am.container.idle.release-timeout-min.millis\": \"10000\",\n                \"tez.am.container.reuse.enabled\": \"true\",\n                \"tez.am.container.reuse.locality.delay-allocation-millis\": \"250\",\n                \"tez.am.container.reuse.non-local-fallback.enabled\": \"false\",\n                \"tez.am.container.reuse.rack-fallback.enabled\": \"true\",\n                \"tez.am.launch.cluster-default.cmd-opts\": \"-server -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}\",\n                \"tez.am.launch.cmd-opts\": \"-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA -XX:+UseParallelGC\",\n                \"tez.am.launch.env\": \"LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-amd64-64\",\n                \"tez.am.log.level\": \"INFO\",\n                \"tez.am.max.app.attempts\": \"2\",\n                \"tez.am.maxtaskfailures.per.node\": \"10\",\n                \"tez.am.resource.memory.mb\": \"2048\",\n                \"tez.cluster.additional.classpath.prefix\": \"/usr/hdp/${hdp.version}/hadoop/lib/hadoop-lzo-0.6.0.${hdp.version}.jar:/etc/hadoop/conf/secure\",\n                \"tez.counters.max\": \"2000\",\n                \"tez.counters.max.groups\": \"1000\",\n                \"tez.generate.debug.artifacts\": \"false\",\n                \"tez.grouping.max-size\": \"1073741824\",\n                \"tez.grouping.min-size\": \"16777216\",\n                \"tez.grouping.split-waves\": \"1.7\",\n                \"tez.history.logging.service.class\": \"org.apache.tez.dag.history.logging.ats.ATSHistoryLoggingService\",\n                \"tez.lib.uris\": \"/hdp/apps/${hdp.version}/tez/tez.tar.gz\",\n                \"tez.runtime.compress\": \"true\",\n                \"tez.runtime.compress.codec\": \"org.apache.hadoop.io.compress.SnappyCodec\",\n                \"tez.runtime.io.sort.mb\": \"409\",\n                \"tez.runtime.unordered.output.buffer.size-mb\": \"76\",\n                \"tez.session.am.dag.submit.timeout.secs\": \"300\",\n                \"tez.session.client.timeout.secs\": \"-1\",\n                \"tez.shuffle-vertex-manager.max-src-fraction\": \"0.4\",\n                \"tez.shuffle-vertex-manager.min-src-fraction\": \"0.2\",\n                \"tez.staging-dir\": \"/tmp/${user.name}/staging\",\n                \"tez.task.am.heartbeat.counter.interval-ms.max\": \"4000\",\n                \"tez.task.get-task.sleep.interval-ms.max\": \"200\",\n                \"tez.task.launch.cluster-default.cmd-opts\": \"-server -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}\",\n                \"tez.task.launch.cmd-opts\": \"-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA -XX:+UseParallelGC\",\n                \"tez.task.launch.env\": \"LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-amd64-64\",\n                \"tez.task.max-events-per-heartbeat\": \"500\",\n                \"tez.task.resource.memory.mb\": \"1024\"\n            }\n        },\n        {\n            \"topology\": {\n                \"content\": \"\\n        <topology>\\n\\n            <gateway>\\n\\n                <provider>\\n                    <role>authentication</role>\\n                    <name>ShiroProvider</name>\\n                    <enabled>true</enabled>\\n                    <param>\\n                        <name>sessionTimeout</name>\\n                        <value>30</value>\\n                    </param>\\n                    <param>\\n                        <name>main.ldapRealm</name>\\n                        <value>org.apache.hadoop.gateway.shirorealm.KnoxLdapRealm</value>\\n                    </param>\\n                    <param>\\n                        <name>main.ldapRealm.userDnTemplate</name>\\n                        <value>uid={0},ou=people,dc=hadoop,dc=apache,dc=org</value>\\n                    </param>\\n                    <param>\\n                        <name>main.ldapRealm.contextFactory.url</name>\\n                        <value>ldap://{{knox_host_name}}:33389</value>\\n                    </param>\\n                    <param>\\n                        <name>main.ldapRealm.contextFactory.authenticationMechanism</name>\\n                        <value>simple</value>\\n                    </param>\\n                    <param>\\n                        <name>urls./**</name>\\n                        <value>authcBasic</value>\\n                    </param>\\n                </provider>\\n\\n                <provider>\\n                    <role>identity-assertion</role>\\n                    <name>Default</name>\\n                    <enabled>true</enabled>\\n                </provider>\\n\\n            </gateway>\\n\\n            <service>\\n                <role>NAMENODE</role>\\n                <url>hdfs://{{namenode_host}}:{{namenode_rpc_port}}</url>\\n            </service>\\n\\n            <service>\\n                <role>JOBTRACKER</role>\\n                <url>rpc://{{rm_host}}:{{jt_rpc_port}}</url>\\n            </service>\\n\\n            <service>\\n                <role>WEBHDFS</role>\\n                <url>http://{{namenode_host}}:{{namenode_http_port}}/webhdfs</url>\\n            </service>\\n\\n            <service>\\n                <role>WEBHCAT</role>\\n                <url>http://{{webhcat_server_host}}:{{templeton_port}}/templeton</url>\\n            </service>\\n\\n            <service>\\n                <role>OOZIE</role>\\n                <url>http://{{oozie_server_host}}:{{oozie_server_port}}/oozie</url>\\n            </service>\\n\\n            <service>\\n                <role>WEBHBASE</role>\\n                <url>http://{{hbase_master_host}}:{{hbase_master_port}}</url>\\n            </service>\\n\\n            <service>\\n                <role>HIVE</role>\\n                <url>http://{{hive_server_host}}:{{hive_http_port}}/{{hive_http_path}}</url>\\n            </service>\\n\\n            <service>\\n                <role>RESOURCEMANAGER</role>\\n                <url>http://{{rm_host}}:{{rm_port}}/ws</url>\\n            </service>\\n        </topology>\"\n            }\n        },\n        {\n            \"users-ldif\": {\n                \"content\": \"\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#     http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing, software\\n# distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n# See the License for the specific language governing permissions and\\n# limitations under the License.\\n\\nversion: 1\\n\\n# Please replace with site specific values\\ndn: dc=hadoop,dc=apache,dc=org\\nobjectclass: organization\\nobjectclass: dcObject\\no: Hadoop\\ndc: hadoop\\n\\n# Entry for a sample people container\\n# Please replace with site specific values\\ndn: ou=people,dc=hadoop,dc=apache,dc=org\\nobjectclass:top\\nobjectclass:organizationalUnit\\nou: people\\n\\n# Entry for a sample end user\\n# Please replace with site specific values\\ndn: uid=guest,ou=people,dc=hadoop,dc=apache,dc=org\\nobjectclass:top\\nobjectclass:person\\nobjectclass:organizationalPerson\\nobjectclass:inetOrgPerson\\ncn: Guest\\nsn: User\\nuid: guest\\nuserPassword:guest-password\\n\\n# entry for sample user admin\\ndn: uid=admin,ou=people,dc=hadoop,dc=apache,dc=org\\nobjectclass:top\\nobjectclass:person\\nobjectclass:organizationalPerson\\nobjectclass:inetOrgPerson\\ncn: Admin\\nsn: Admin\\nuid: admin\\nuserPassword:admin-password\\n\\n# entry for sample user sam\\ndn: uid=sam,ou=people,dc=hadoop,dc=apache,dc=org\\nobjectclass:top\\nobjectclass:person\\nobjectclass:organizationalPerson\\nobjectclass:inetOrgPerson\\ncn: sam\\nsn: sam\\nuid: sam\\nuserPassword:sam-password\\n\\n# entry for sample user tom\\ndn: uid=tom,ou=people,dc=hadoop,dc=apache,dc=org\\nobjectclass:top\\nobjectclass:person\\nobjectclass:organizationalPerson\\nobjectclass:inetOrgPerson\\ncn: tom\\nsn: tom\\nuid: tom\\nuserPassword:tom-password\\n\\n# create FIRST Level groups branch\\ndn: ou=groups,dc=hadoop,dc=apache,dc=org\\nobjectclass:top\\nobjectclass:organizationalUnit\\nou: groups\\ndescription: generic groups branch\\n\\n# create the analyst group under groups\\ndn: cn=analyst,ou=groups,dc=hadoop,dc=apache,dc=org\\nobjectclass:top\\nobjectclass: groupofnames\\ncn: analyst\\ndescription:analyst  group\\nmember: uid=sam,ou=people,dc=hadoop,dc=apache,dc=org\\nmember: uid=tom,ou=people,dc=hadoop,dc=apache,dc=org\\n\\n\\n# create the scientist group under groups\\ndn: cn=scientist,ou=groups,dc=hadoop,dc=apache,dc=org\\nobjectclass:top\\nobjectclass: groupofnames\\ncn: scientist\\ndescription: scientist group\\nmember: uid=sam,ou=people,dc=hadoop,dc=apache,dc=org\"\n            }\n        },\n        {\n            \"webhcat-env\": {\n                \"content\": \"\\n# The file containing the running pid\\nPID_FILE={{webhcat_pid_file}}\\n\\nTEMPLETON_LOG_DIR={{templeton_log_dir}}/\\n\\n\\nWEBHCAT_LOG_DIR={{templeton_log_dir}}/\\n\\n# The console error log\\nERROR_LOG={{templeton_log_dir}}/webhcat-console-error.log\\n\\n# The console log\\nCONSOLE_LOG={{templeton_log_dir}}/webhcat-console.log\\n\\n#TEMPLETON_JAR=templeton_jar_name\\n\\n#HADOOP_PREFIX=hadoop_prefix\\n\\n#HCAT_PREFIX=hive_prefix\\n\\n# Set HADOOP_HOME to point to a specific hadoop install directory\\nexport HADOOP_HOME={{hadoop_home}}\"\n            }\n        },\n        {\n            \"yarn-env\": {\n                \"apptimelineserver_heapsize\": \"1024\",\n                \"content\": \"\\nexport HADOOP_YARN_HOME={{hadoop_yarn_home}}\\nexport YARN_LOG_DIR={{yarn_log_dir_prefix}}/$USER\\nexport YARN_PID_DIR={{yarn_pid_dir_prefix}}/$USER\\nexport HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\\nexport JAVA_HOME={{java64_home}}\\n\\n# User for YARN daemons\\nexport HADOOP_YARN_USER=${HADOOP_YARN_USER:-yarn}\\n\\n# resolve links - $0 may be a softlink\\nexport YARN_CONF_DIR=\\\"${YARN_CONF_DIR:-$HADOOP_YARN_HOME/conf}\\\"\\n\\n# some Java parameters\\n# export JAVA_HOME=/home/y/libexec/jdk1.6.0/\\nif [ \\\"$JAVA_HOME\\\" != \\\"\\\" ]; then\\n  #echo \\\"run java in $JAVA_HOME\\\"\\n  JAVA_HOME=$JAVA_HOME\\nfi\\n\\nif [ \\\"$JAVA_HOME\\\" = \\\"\\\" ]; then\\n  echo \\\"Error: JAVA_HOME is not set.\\\"\\n  exit 1\\nfi\\n\\nJAVA=$JAVA_HOME/bin/java\\nJAVA_HEAP_MAX=-Xmx1000m\\n\\n# For setting YARN specific HEAP sizes please use this\\n# Parameter and set appropriately\\nYARN_HEAPSIZE={{yarn_heapsize}}\\n\\n# check envvars which might override default args\\nif [ \\\"$YARN_HEAPSIZE\\\" != \\\"\\\" ]; then\\n  JAVA_HEAP_MAX=\\\"-Xmx\\\"\\\"$YARN_HEAPSIZE\\\"\\\"m\\\"\\nfi\\n\\n# Resource Manager specific parameters\\n\\n# Specify the max Heapsize for the ResourceManager using a numerical value\\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\\n# the value to 1000.\\n# This value will be overridden by an Xmx setting specified in either YARN_OPTS\\n# and/or YARN_RESOURCEMANAGER_OPTS.\\n# If not specified, the default value will be picked from either YARN_HEAPMAX\\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\\nexport YARN_RESOURCEMANAGER_HEAPSIZE={{resourcemanager_heapsize}}\\n\\n# Specify the JVM options to be used when starting the ResourceManager.\\n# These options will be appended to the options specified as YARN_OPTS\\n# and therefore may override any similar flags set in YARN_OPTS\\n#export YARN_RESOURCEMANAGER_OPTS=\\n\\n# Node Manager specific parameters\\n\\n# Specify the max Heapsize for the NodeManager using a numerical value\\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\\n# the value to 1000.\\n# This value will be overridden by an Xmx setting specified in either YARN_OPTS\\n# and/or YARN_NODEMANAGER_OPTS.\\n# If not specified, the default value will be picked from either YARN_HEAPMAX\\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\\nexport YARN_NODEMANAGER_HEAPSIZE={{nodemanager_heapsize}}\\n\\n# Specify the max Heapsize for the HistoryManager using a numerical value\\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\\n# the value to 1024.\\n# This value will be overridden by an Xmx setting specified in either YARN_OPTS\\n# and/or YARN_HISTORYSERVER_OPTS.\\n# If not specified, the default value will be picked from either YARN_HEAPMAX\\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\\nexport YARN_HISTORYSERVER_HEAPSIZE={{apptimelineserver_heapsize}}\\n\\n# Specify the JVM options to be used when starting the NodeManager.\\n# These options will be appended to the options specified as YARN_OPTS\\n# and therefore may override any similar flags set in YARN_OPTS\\n#export YARN_NODEMANAGER_OPTS=\\n\\n# so that filenames w/ spaces are handled correctly in loops below\\nIFS=\\n\\n\\n# default log directory and file\\nif [ \\\"$YARN_LOG_DIR\\\" = \\\"\\\" ]; then\\n  YARN_LOG_DIR=\\\"$HADOOP_YARN_HOME/logs\\\"\\nfi\\nif [ \\\"$YARN_LOGFILE\\\" = \\\"\\\" ]; then\\n  YARN_LOGFILE='yarn.log'\\nfi\\n\\n# default policy file for service-level authorization\\nif [ \\\"$YARN_POLICYFILE\\\" = \\\"\\\" ]; then\\n  YARN_POLICYFILE=\\\"hadoop-policy.xml\\\"\\nfi\\n\\n# restore ordinary behaviour\\nunset IFS\\n\\n\\nYARN_OPTS=\\\"$YARN_OPTS -Dhadoop.log.dir=$YARN_LOG_DIR\\\"\\nYARN_OPTS=\\\"$YARN_OPTS -Dyarn.log.dir=$YARN_LOG_DIR\\\"\\nYARN_OPTS=\\\"$YARN_OPTS -Dhadoop.log.file=$YARN_LOGFILE\\\"\\nYARN_OPTS=\\\"$YARN_OPTS -Dyarn.log.file=$YARN_LOGFILE\\\"\\nYARN_OPTS=\\\"$YARN_OPTS -Dyarn.home.dir=$YARN_COMMON_HOME\\\"\\nYARN_OPTS=\\\"$YARN_OPTS -Dyarn.id.str=$YARN_IDENT_STRING\\\"\\nYARN_OPTS=\\\"$YARN_OPTS -Dhadoop.root.logger=${YARN_ROOT_LOGGER:-INFO,console}\\\"\\nYARN_OPTS=\\\"$YARN_OPTS -Dyarn.root.logger=${YARN_ROOT_LOGGER:-INFO,console}\\\"\\nif [ \\\"x$JAVA_LIBRARY_PATH\\\" != \\\"x\\\" ]; then\\n  YARN_OPTS=\\\"$YARN_OPTS -Djava.library.path=$JAVA_LIBRARY_PATH\\\"\\nfi\\nYARN_OPTS=\\\"$YARN_OPTS -Dyarn.policy.file=$YARN_POLICYFILE\\\"\",\n                \"min_user_id\": \"1000\",\n                \"nodemanager_heapsize\": \"1024\",\n                \"resourcemanager_heapsize\": \"1024\",\n                \"yarn_heapsize\": \"1024\",\n                \"yarn_log_dir_prefix\": \"/var/log/hadoop-yarn\",\n                \"yarn_pid_dir_prefix\": \"/var/run/hadoop-yarn\",\n                \"yarn_user\": \"yarn\"\n            }\n        },\n        {\n            \"yarn-log4j\": {\n                \"content\": \"\\n#Relative to Yarn Log Dir Prefix\\nyarn.log.dir=.\\n#\\n# Job Summary Appender\\n#\\n# Use following logger to send summary to separate file defined by\\n# hadoop.mapreduce.jobsummary.log.file rolled daily:\\n# hadoop.mapreduce.jobsummary.logger=INFO,JSA\\n#\\nhadoop.mapreduce.jobsummary.logger=${hadoop.root.logger}\\nhadoop.mapreduce.jobsummary.log.file=hadoop-mapreduce.jobsummary.log\\nlog4j.appender.JSA=org.apache.log4j.DailyRollingFileAppender\\n# Set the ResourceManager summary log filename\\nyarn.server.resourcemanager.appsummary.log.file=hadoop-mapreduce.jobsummary.log\\n# Set the ResourceManager summary log level and appender\\nyarn.server.resourcemanager.appsummary.logger=${hadoop.root.logger}\\n#yarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\\n\\n# To enable AppSummaryLogging for the RM,\\n# set yarn.server.resourcemanager.appsummary.logger to\\n# LEVEL,RMSUMMARY in hadoop-env.sh\\n\\n# Appender for ResourceManager Application Summary Log\\n# Requires the following properties to be set\\n#    - hadoop.log.dir (Hadoop Log directory)\\n#    - yarn.server.resourcemanager.appsummary.log.file (resource manager app summary log filename)\\n#    - yarn.server.resourcemanager.appsummary.logger (resource manager app summary log level and appender)\\nlog4j.appender.RMSUMMARY=org.apache.log4j.RollingFileAppender\\nlog4j.appender.RMSUMMARY.File=${yarn.log.dir}/${yarn.server.resourcemanager.appsummary.log.file}\\nlog4j.appender.RMSUMMARY.MaxFileSize=256MB\\nlog4j.appender.RMSUMMARY.MaxBackupIndex=20\\nlog4j.appender.RMSUMMARY.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.RMSUMMARY.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.JSA.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\\nlog4j.appender.JSA.DatePattern=.yyyy-MM-dd\\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\\nlog4j.logger.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=${yarn.server.resourcemanager.appsummary.logger}\\nlog4j.additivity.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=false\"\n            }\n        },\n        {\n            \"yarn-site\": {\n                \"hadoop.registry.rm.enabled\": \"true\",\n                \"hadoop.registry.zk.quorum\": \"%HOSTGROUP::host_group_1%:2181\",\n                \"yarn.acl.enable\": \"false\",\n                \"yarn.admin.acl\": \"\",\n                \"yarn.application.classpath\": \"$HADOOP_CONF_DIR,/usr/hdp/current/hadoop-client/*,/usr/hdp/current/hadoop-client/lib/*,/usr/hdp/current/hadoop-hdfs-client/*,/usr/hdp/current/hadoop-hdfs-client/lib/*,/usr/hdp/current/hadoop-yarn-client/*,/usr/hdp/current/hadoop-yarn-client/lib/*\",\n                \"yarn.client.nodemanager-connect.max-wait-ms\": \"900000\",\n                \"yarn.client.nodemanager-connect.retry-interval-ms\": \"10000\",\n                \"yarn.log-aggregation-enable\": \"true\",\n                \"yarn.log-aggregation.retain-seconds\": \"2592000\",\n                \"yarn.log.server.url\": \"http://%HOSTGROUP::host_group_1%:19888/jobhistory/logs\",\n                \"yarn.node-labels.fs-store.retry-policy-spec\": \"2000, 500\",\n                \"yarn.node-labels.fs-store.root-dir\": \"/system/yarn/node-labels\",\n                \"yarn.node-labels.manager-class\": \"org.apache.hadoop.yarn.server.resourcemanager.nodelabels.MemoryRMNodeLabelsManager\",\n                \"yarn.nodemanager.address\": \"0.0.0.0:45454\",\n                \"yarn.nodemanager.admin-env\": \"MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX\",\n                \"yarn.nodemanager.aux-services\": \"mapreduce_shuffle\",\n                \"yarn.nodemanager.aux-services.mapreduce_shuffle.class\": \"org.apache.hadoop.mapred.ShuffleHandler\",\n                \"yarn.nodemanager.bind-host\": \"0.0.0.0\",\n                \"yarn.nodemanager.container-executor.class\": \"org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor\",\n                \"yarn.nodemanager.container-monitor.interval-ms\": \"3000\",\n                \"yarn.nodemanager.delete.debug-delay-sec\": \"0\",\n                \"yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage\": \"90\",\n                \"yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb\": \"1000\",\n                \"yarn.nodemanager.disk-health-checker.min-healthy-disks\": \"0.25\",\n                \"yarn.nodemanager.health-checker.interval-ms\": \"135000\",\n                \"yarn.nodemanager.health-checker.script.timeout-ms\": \"60000\",\n                \"yarn.nodemanager.linux-container-executor.cgroups.hierarchy\": \"hadoop-yarn\",\n                \"yarn.nodemanager.linux-container-executor.cgroups.mount\": \"false\",\n                \"yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage\": \"false\",\n                \"yarn.nodemanager.linux-container-executor.group\": \"hadoop\",\n                \"yarn.nodemanager.linux-container-executor.resources-handler.class\": \"org.apache.hadoop.yarn.server.nodemanager.util.DefaultLCEResourcesHandler\",\n                \"yarn.nodemanager.local-dirs\": \"/hadoop/yarn/local\",\n                \"yarn.nodemanager.log-aggregation.compression-type\": \"gz\",\n                \"yarn.nodemanager.log-aggregation.debug-enabled\": \"false\",\n                \"yarn.nodemanager.log-aggregation.num-log-files-per-app\": \"30\",\n                \"yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds\": \"-1\",\n                \"yarn.nodemanager.log-dirs\": \"/hadoop/yarn/log\",\n                \"yarn.nodemanager.log.retain-second\": \"604800\",\n                \"yarn.nodemanager.recovery.dir\": \"/var/log/hadoop-yarn/nodemanager/recovery-state\",\n                \"yarn.nodemanager.recovery.enabled\": \"false\",\n                \"yarn.nodemanager.remote-app-log-dir\": \"/app-logs\",\n                \"yarn.nodemanager.remote-app-log-dir-suffix\": \"logs\",\n                \"yarn.nodemanager.resource.cpu-vcores\": \"4\",\n                \"yarn.nodemanager.resource.memory-mb\": \"6144\",\n                \"yarn.nodemanager.resource.percentage-physical-cpu-limit\": \"100\",\n                \"yarn.nodemanager.vmem-check-enabled\": \"false\",\n                \"yarn.nodemanager.vmem-pmem-ratio\": \"2.1\",\n                \"yarn.resourcemanager.address\": \"%HOSTGROUP::host_group_1%:8050\",\n                \"yarn.resourcemanager.admin.address\": \"%HOSTGROUP::host_group_1%:8141\",\n                \"yarn.resourcemanager.am.max-attempts\": \"2\",\n                \"yarn.resourcemanager.bind-host\": \"0.0.0.0\",\n                \"yarn.resourcemanager.connect.max-wait.ms\": \"900000\",\n                \"yarn.resourcemanager.connect.retry-interval.ms\": \"30000\",\n                \"yarn.resourcemanager.fs.state-store.retry-policy-spec\": \"2000, 500\",\n                \"yarn.resourcemanager.fs.state-store.uri\": \" \",\n                \"yarn.resourcemanager.ha.enabled\": \"false\",\n                \"yarn.resourcemanager.hostname\": \"%HOSTGROUP::host_group_1%\",\n                \"yarn.resourcemanager.nodes.exclude-path\": \"/etc/hadoop/conf/yarn.exclude\",\n                \"yarn.resourcemanager.recovery.enabled\": \"false\",\n                \"yarn.resourcemanager.resource-tracker.address\": \"%HOSTGROUP::host_group_1%:8025\",\n                \"yarn.resourcemanager.scheduler.address\": \"%HOSTGROUP::host_group_1%:8030\",\n                \"yarn.resourcemanager.scheduler.class\": \"org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler\",\n                \"yarn.resourcemanager.state-store.max-completed-applications\": \"${yarn.resourcemanager.max-completed-applications}\",\n                \"yarn.resourcemanager.store.class\": \"org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore\",\n                \"yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size\": \"10\",\n                \"yarn.resourcemanager.system-metrics-publisher.enabled\": \"true\",\n                \"yarn.resourcemanager.webapp.address\": \"%HOSTGROUP::host_group_1%:8088\",\n                \"yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled\": \"false\",\n                \"yarn.resourcemanager.work-preserving-recovery.enabled\": \"false\",\n                \"yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms\": \"10000\",\n                \"yarn.resourcemanager.zk-acl\": \"world:anyone:rwcda\",\n                \"yarn.resourcemanager.zk-address\": \"localhost:2181\",\n                \"yarn.resourcemanager.zk-num-retries\": \"1000\",\n                \"yarn.resourcemanager.zk-retry-interval-ms\": \"1000\",\n                \"yarn.resourcemanager.zk-state-store.parent-path\": \"/rmstore\",\n                \"yarn.resourcemanager.zk-timeout-ms\": \"10000\",\n                \"yarn.scheduler.maximum-allocation-mb\": \"6144\",\n                \"yarn.scheduler.minimum-allocation-mb\": \"1024\",\n                \"yarn.timeline-service.address\": \"%HOSTGROUP::host_group_1%:10200\",\n                \"yarn.timeline-service.bind-host\": \"0.0.0.0\",\n                \"yarn.timeline-service.client.max-retries\": \"30\",\n                \"yarn.timeline-service.client.retry-interval-ms\": \"1000\",\n                \"yarn.timeline-service.enabled\": \"true\",\n                \"yarn.timeline-service.generic-application-history.store-class\": \"org.apache.hadoop.yarn.server.applicationhistoryservice.NullApplicationHistoryStore\",\n                \"yarn.timeline-service.http-authentication.simple.anonymous.allowed\": \"true\",\n                \"yarn.timeline-service.http-authentication.type\": \"simple\",\n                \"yarn.timeline-service.leveldb-timeline-store.path\": \"/hadoop/yarn/timeline\",\n                \"yarn.timeline-service.leveldb-timeline-store.read-cache-size\": \"104857600\",\n                \"yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size\": \"10000\",\n                \"yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size\": \"10000\",\n                \"yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms\": \"300000\",\n                \"yarn.timeline-service.store-class\": \"org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore\",\n                \"yarn.timeline-service.ttl-enable\": \"true\",\n                \"yarn.timeline-service.ttl-ms\": \"2678400000\",\n                \"yarn.timeline-service.webapp.address\": \"%HOSTGROUP::host_group_1%:8188\",\n                \"yarn.timeline-service.webapp.https.address\": \"%HOSTGROUP::host_group_1%:8190\"\n            }\n        },\n        {\n            \"zoo.cfg\": {\n                \"clientPort\": \"2181\",\n                \"dataDir\": \"/hadoop/zookeeper\",\n                \"initLimit\": \"10\",\n                \"syncLimit\": \"5\",\n                \"tickTime\": \"2000\"\n            }\n        },\n        {\n            \"zookeeper-env\": {\n                \"content\": \"\\nexport JAVA_HOME={{java64_home}}\\nexport ZOOKEEPER_HOME={{zk_home}}\\nexport ZOO_LOG_DIR={{zk_log_dir}}\\nexport ZOOPIDFILE={{zk_pid_file}}\\nexport SERVER_JVMFLAGS={{zk_server_heapsize}}\\nexport JAVA=$JAVA_HOME/bin/java\\nexport CLASSPATH=$CLASSPATH:/usr/share/zookeeper/*\\n\\n{% if security_enabled %}\\nexport SERVER_JVMFLAGS=\\\"$SERVER_JVMFLAGS -Djava.security.auth.login.config={{zk_server_jaas_file}}\\\"\\nexport CLIENT_JVMFLAGS=\\\"$CLIENT_JVMFLAGS -Djava.security.auth.login.config={{zk_client_jaas_file}}\\\"\\n{% endif %}\",\n                \"zk_log_dir\": \"/var/log/zookeeper\",\n                \"zk_pid_dir\": \"/var/run/zookeeper\",\n                \"zk_user\": \"zookeeper\"\n            }\n        },\n        {\n            \"zookeeper-log4j\": {\n                \"content\": \"\\n#\\n#\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#   http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing,\\n# software distributed under the License is distributed on an\\n# \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n# KIND, either express or implied.  See the License for the\\n# specific language governing permissions and limitations\\n# under the License.\\n#\\n#\\n#\\n\\n#\\n# ZooKeeper Logging Configuration\\n#\\n\\n# DEFAULT: console appender only\\nlog4j.rootLogger=INFO, CONSOLE\\n\\n# Example with rolling log file\\n#log4j.rootLogger=DEBUG, CONSOLE, ROLLINGFILE\\n\\n# Example with rolling log file and tracing\\n#log4j.rootLogger=TRACE, CONSOLE, ROLLINGFILE, TRACEFILE\\n\\n#\\n# Log INFO level and above messages to the console\\n#\\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender\\nlog4j.appender.CONSOLE.Threshold=INFO\\nlog4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\\n\\n#\\n# Add ROLLINGFILE to rootLogger to get log file output\\n#    Log DEBUG level and above messages to a log file\\nlog4j.appender.ROLLINGFILE=org.apache.log4j.RollingFileAppender\\nlog4j.appender.ROLLINGFILE.Threshold=DEBUG\\nlog4j.appender.ROLLINGFILE.File=zookeeper.log\\n\\n# Max log file size of 10MB\\nlog4j.appender.ROLLINGFILE.MaxFileSize=10MB\\n# uncomment the next line to limit number of backup files\\n#log4j.appender.ROLLINGFILE.MaxBackupIndex=10\\n\\nlog4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\\n\\n\\n#\\n# Add TRACEFILE to rootLogger to get log file output\\n#    Log DEBUG level and above messages to a log file\\nlog4j.appender.TRACEFILE=org.apache.log4j.FileAppender\\nlog4j.appender.TRACEFILE.Threshold=TRACE\\nlog4j.appender.TRACEFILE.File=zookeeper_trace.log\\n\\nlog4j.appender.TRACEFILE.layout=org.apache.log4j.PatternLayout\\n### Notice we are including log4j's NDC here (%x)\\nlog4j.appender.TRACEFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L][%x] - %m%n\"\n            }\n        },\n        {\n            \"core-site\": {\n                \"fs.defaultFS\": \"hdfs://%HOSTGROUP::host_group_1%:8020\",\n                \"fs.trash.interval\": \"360\",\n                \"hadoop.http.authentication.simple.anonymous.allowed\": \"true\",\n                \"hadoop.proxyuser.falcon.groups\": \"*\",\n                \"hadoop.proxyuser.falcon.hosts\": \"*\",\n                \"hadoop.proxyuser.hcat.groups\": \"*\",\n                \"hadoop.proxyuser.hcat.hosts\": \"*\",\n                \"hadoop.proxyuser.hive.groups\": \"*\",\n                \"hadoop.proxyuser.hive.hosts\": \"*\",\n                \"hadoop.proxyuser.hue.groups\": \"*\",\n                \"hadoop.proxyuser.hue.hosts\": \"*\",\n                \"hadoop.proxyuser.oozie.groups\": \"*\",\n                \"hadoop.proxyuser.oozie.hosts\": \"*\",\n                \"hadoop.security.auth_to_local\": \"\\n        RULE:[2:$1@$0]([rn]m@.*)s/.*/yarn/\\n        RULE:[2:$1@$0](jhs@.*)s/.*/mapred/\\n        RULE:[2:$1@$0]([nd]n@.*)s/.*/hdfs/\\n        RULE:[2:$1@$0](hm@.*)s/.*/hbase/\\n        RULE:[2:$1@$0](rs@.*)s/.*/hbase/\\n        DEFAULT\",\n                \"hadoop.security.authentication\": \"simple\",\n                \"hadoop.security.authorization\": \"false\",\n                \"io.compression.codecs\": \"org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.DefaultCodec,org.apache.hadoop.io.compress.SnappyCodec\",\n                \"io.file.buffer.size\": \"131072\",\n                \"io.serializations\": \"org.apache.hadoop.io.serializer.WritableSerialization\",\n                \"ipc.client.connect.max.retries\": \"50\",\n                \"ipc.client.connection.maxidletime\": \"30000\",\n                \"ipc.client.idlethreshold\": \"8000\",\n                \"ipc.server.tcpnodelay\": \"true\",\n                \"mapreduce.jobtracker.webinterface.trusted\": \"false\",\n                \"proxyuser_group\": \"users\"\n            }\n        },\n        {\n            \"webhcat-site\": {\n                \"templeton.exec.timeout\": \"60000\",\n                \"templeton.hadoop\": \"/usr/hdp/current/hadoop-client/bin/hadoop\",\n                \"templeton.hadoop.conf.dir\": \"/etc/hadoop/conf\",\n                \"templeton.hcat\": \"/usr/hdp/current/hive-client/bin/hcat\",\n                \"templeton.hcat.home\": \"hive.tar.gz/hive/hcatalog\",\n                \"templeton.hive.archive\": \"hdfs:///hdp/apps/${hdp.version}/hive/hive.tar.gz\",\n                \"templeton.hive.home\": \"hive.tar.gz/hive\",\n                \"templeton.hive.path\": \"hive.tar.gz/hive/bin/hive\",\n                \"templeton.hive.properties\": \"hive.metastore.local=false, hive.metastore.uris=thrift://%HOSTGROUP::host_group_1%:9933, hive.metastore.sasl.enabled=false, hive.metastore.execute.setugi=true\",\n                \"templeton.jar\": \"/usr/hdp/current/hive-webhcat/share/webhcat/svr/lib/hive-webhcat-*.jar\",\n                \"templeton.libjars\": \"/usr/hdp/current/zookeeper-client/zookeeper.jar\",\n                \"templeton.override.enabled\": \"false\",\n                \"templeton.pig.archive\": \"hdfs:///hdp/apps/${hdp.version}/pig/pig.tar.gz\",\n                \"templeton.pig.path\": \"pig.tar.gz/pig/bin/pig\",\n                \"templeton.port\": \"50111\",\n                \"templeton.sqoop.archive\": \"hdfs:///hdp/apps/${hdp.version}/sqoop/sqoop.tar.gz\",\n                \"templeton.sqoop.home\": \"sqoop.tar.gz/sqoop\",\n                \"templeton.sqoop.path\": \"sqoop.tar.gz/sqoop/bin/sqoop\",\n                \"templeton.storage.class\": \"org.apache.hive.hcatalog.templeton.tool.ZooKeeperStorage\",\n                \"templeton.streaming.jar\": \"hdfs:///hdp/apps/${hdp.version}/mapreduce/hadoop-streaming.jar\",\n                \"templeton.zookeeper.hosts\": \"%HOSTGROUP::host_group_1%:2181\",\n                \"webhcat.proxyuser.hue.groups\": \"*\",\n                \"webhcat.proxyuser.hue.hosts\": \"*\"\n            }\n        },\n        {\n            \"hive-site\": {\n                \"ambari.hive.db.schema.name\": \"hive\",\n                \"datanucleus.cache.level2.type\": \"none\",\n                \"hive.auto.convert.join\": \"true\",\n                \"hive.auto.convert.join.noconditionaltask\": \"true\",\n                \"hive.auto.convert.join.noconditionaltask.size\": \"357564416\",\n                \"hive.auto.convert.sortmerge.join\": \"true\",\n                \"hive.auto.convert.sortmerge.join.noconditionaltask\": \"true\",\n                \"hive.auto.convert.sortmerge.join.to.mapjoin\": \"false\",\n                \"hive.cbo.enable\": \"true\",\n                \"hive.cli.print.header\": \"false\",\n                \"hive.cluster.delegation.token.store.class\": \"org.apache.hadoop.hive.thrift.ZooKeeperTokenStore\",\n                \"hive.cluster.delegation.token.store.zookeeper.connectString\": \"%HOSTGROUP::host_group_1%:2181\",\n                \"hive.cluster.delegation.token.store.zookeeper.znode\": \"/hive/cluster/delegation\",\n                \"hive.compactor.abortedtxn.threshold\": \"1000\",\n                \"hive.compactor.check.interval\": \"300L\",\n                \"hive.compactor.delta.num.threshold\": \"10\",\n                \"hive.compactor.delta.pct.threshold\": \"0.1f\",\n                \"hive.compactor.initiator.on\": \"false\",\n                \"hive.compactor.worker.threads\": \"0\",\n                \"hive.compactor.worker.timeout\": \"86400L\",\n                \"hive.compute.query.using.stats\": \"true\",\n                \"hive.conf.restricted.list\": \"hive.security.authenticator.manager,hive.security.authorization.manager,hive.users.in.admin.role\",\n                \"hive.convert.join.bucket.mapjoin.tez\": \"false\",\n                \"hive.enforce.bucketing\": \"true\",\n                \"hive.enforce.sorting\": \"true\",\n                \"hive.enforce.sortmergebucketmapjoin\": \"true\",\n                \"hive.exec.compress.intermediate\": \"false\",\n                \"hive.exec.compress.output\": \"false\",\n                \"hive.exec.dynamic.partition\": \"true\",\n                \"hive.exec.dynamic.partition.mode\": \"nonstrict\",\n                \"hive.exec.failure.hooks\": \"org.apache.hadoop.hive.ql.hooks.ATSHook\",\n                \"hive.exec.max.created.files\": \"100000\",\n                \"hive.exec.max.dynamic.partitions\": \"5000\",\n                \"hive.exec.max.dynamic.partitions.pernode\": \"2000\",\n                \"hive.exec.orc.compression.strategy\": \"SPEED\",\n                \"hive.exec.orc.default.compress\": \"ZLIB\",\n                \"hive.exec.orc.default.stripe.size\": \"67108864\",\n                \"hive.exec.parallel\": \"false\",\n                \"hive.exec.parallel.thread.number\": \"8\",\n                \"hive.exec.post.hooks\": \"org.apache.hadoop.hive.ql.hooks.ATSHook\",\n                \"hive.exec.pre.hooks\": \"org.apache.hadoop.hive.ql.hooks.ATSHook\",\n                \"hive.exec.reducers.bytes.per.reducer\": \"67108864\",\n                \"hive.exec.reducers.max\": \"1009\",\n                \"hive.exec.scratchdir\": \"/tmp/hive\",\n                \"hive.exec.submit.local.task.via.child\": \"true\",\n                \"hive.exec.submitviachild\": \"false\",\n                \"hive.execution.engine\": \"mr\",\n                \"hive.fetch.task.aggr\": \"false\",\n                \"hive.fetch.task.conversion\": \"more\",\n                \"hive.fetch.task.conversion.threshold\": \"1073741824\",\n                \"hive.heapsize\": \"1024\",\n                \"hive.limit.optimize.enable\": \"true\",\n                \"hive.limit.pushdown.memory.usage\": \"0.04\",\n                \"hive.map.aggr\": \"true\",\n                \"hive.map.aggr.hash.force.flush.memory.threshold\": \"0.9\",\n                \"hive.map.aggr.hash.min.reduction\": \"0.5\",\n                \"hive.map.aggr.hash.percentmemory\": \"0.5\",\n                \"hive.mapjoin.bucket.cache.size\": \"10000\",\n                \"hive.mapjoin.optimized.hashtable\": \"true\",\n                \"hive.mapred.reduce.tasks.speculative.execution\": \"false\",\n                \"hive.merge.mapfiles\": \"true\",\n                \"hive.merge.mapredfiles\": \"false\",\n                \"hive.merge.orcfile.stripe.level\": \"true\",\n                \"hive.merge.rcfile.block.level\": \"true\",\n                \"hive.merge.size.per.task\": \"256000000\",\n                \"hive.merge.smallfiles.avgsize\": \"16000000\",\n                \"hive.merge.tezfiles\": \"false\",\n                \"hive.metastore.authorization.storage.checks\": \"false\",\n                \"hive.metastore.cache.pinobjtypes\": \"Table,Database,Type,FieldSchema,Order\",\n                \"hive.metastore.client.connect.retry.delay\": \"5s\",\n                \"hive.metastore.client.socket.timeout\": \"1800s\",\n                \"hive.metastore.connect.retries\": \"24\",\n                \"hive.metastore.execute.setugi\": \"true\",\n                \"hive.metastore.failure.retries\": \"24\",\n                \"hive.metastore.kerberos.keytab.file\": \"/etc/security/keytabs/hive.service.keytab\",\n                \"hive.metastore.kerberos.principal\": \"hive/_HOST@EXAMPLE.COM\",\n                \"hive.metastore.pre.event.listeners\": \"org.apache.hadoop.hive.ql.security.authorization.AuthorizationPreEventListener\",\n                \"hive.metastore.sasl.enabled\": \"false\",\n                \"hive.metastore.server.max.threads\": \"100000\",\n                \"hive.metastore.uris\": \"thrift://%HOSTGROUP::host_group_1%:9083\",\n                \"hive.metastore.warehouse.dir\": \"/apps/hive/warehouse\",\n                \"hive.optimize.bucketmapjoin\": \"true\",\n                \"hive.optimize.bucketmapjoin.sortedmerge\": \"false\",\n                \"hive.optimize.constant.propagation\": \"true\",\n                \"hive.optimize.index.filter\": \"true\",\n                \"hive.optimize.mapjoin.mapreduce\": \"true\",\n                \"hive.optimize.metadataonly\": \"true\",\n                \"hive.optimize.null.scan\": \"true\",\n                \"hive.optimize.reducededuplication\": \"true\",\n                \"hive.optimize.reducededuplication.min.reducer\": \"4\",\n                \"hive.optimize.sort.dynamic.partition\": \"false\",\n                \"hive.orc.compute.splits.num.threads\": \"10\",\n                \"hive.orc.splits.include.file.footer\": \"false\",\n                \"hive.prewarm.enabled\": \"false\",\n                \"hive.prewarm.numcontainers\": \"10\",\n                \"hive.security.authenticator.manager\": \"org.apache.hadoop.hive.ql.security.ProxyUserAuthenticator\",\n                \"hive.security.authorization.enabled\": \"false\",\n                \"hive.security.authorization.manager\": \"org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdConfOnlyAuthorizerFactory\",\n                \"hive.security.metastore.authenticator.manager\": \"org.apache.hadoop.hive.ql.security.HadoopDefaultMetastoreAuthenticator\",\n                \"hive.security.metastore.authorization.auth.reads\": \"true\",\n                \"hive.security.metastore.authorization.manager\": \"org.apache.hadoop.hive.ql.security.authorization.StorageBasedAuthorizationProvider,org.apache.hadoop.hive.ql.security.authorization.MetaStoreAuthzAPIAuthorizerEmbedOnly\",\n                \"hive.server2.allow.user.substitution\": \"true\",\n                \"hive.server2.authentication\": \"NOSASL\",\n                \"hive.server2.authentication.spnego.keytab\": \"HTTP/_HOST@EXAMPLE.COM\",\n                \"hive.server2.authentication.spnego.principal\": \"/etc/security/keytabs/spnego.service.keytab\",\n                \"hive.server2.enable.doAs\": \"true\",\n                \"hive.server2.enable.impersonation\": \"true\",\n                \"hive.server2.logging.operation.enabled\": \"true\",\n                \"hive.server2.logging.operation.log.location\": \"${system:java.io.tmpdir}/${system:user.name}/operation_logs\",\n                \"hive.server2.support.dynamic.service.discovery\": \"true\",\n                \"hive.server2.table.type.mapping\": \"CLASSIC\",\n                \"hive.server2.tez.default.queues\": \"default\",\n                \"hive.server2.tez.initialize.default.sessions\": \"false\",\n                \"hive.server2.tez.sessions.per.default.queue\": \"1\",\n                \"hive.server2.thrift.http.path\": \"cliservice\",\n                \"hive.server2.thrift.http.port\": \"10001\",\n                \"hive.server2.thrift.max.worker.threads\": \"500\",\n                \"hive.server2.thrift.port\": \"10000\",\n                \"hive.server2.thrift.sasl.qop\": \"auth\",\n                \"hive.server2.transport.mode\": \"binary\",\n                \"hive.server2.use.SSL\": \"false\",\n                \"hive.server2.zookeeper.namespace\": \"hiveserver2\",\n                \"hive.smbjoin.cache.rows\": \"10000\",\n                \"hive.stats.autogather\": \"true\",\n                \"hive.stats.dbclass\": \"fs\",\n                \"hive.stats.fetch.column.stats\": \"false\",\n                \"hive.stats.fetch.partition.stats\": \"true\",\n                \"hive.support.concurrency\": \"false\",\n                \"hive.support.quoted.identifiers\": \"NONE\",\n                \"hive.tez.auto.reducer.parallelism\": \"false\",\n                \"hive.tez.container.size\": \"1024\",\n                \"hive.tez.cpu.vcores\": \"-1\",\n                \"hive.tez.dynamic.partition.pruning\": \"true\",\n                \"hive.tez.dynamic.partition.pruning.max.data.size\": \"104857600\",\n                \"hive.tez.dynamic.partition.pruning.max.event.size\": \"1048576\",\n                \"hive.tez.input.format\": \"org.apache.hadoop.hive.ql.io.HiveInputFormat\",\n                \"hive.tez.java.opts\": \"-server -Xmx820m -Djava.net.preferIPv4Stack=true -XX:NewRatio=8 -XX:+UseNUMA -XX:+UseParallelGC -XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps\",\n                \"hive.tez.log.level\": \"INFO\",\n                \"hive.tez.max.partition.factor\": \"2.0\",\n                \"hive.tez.min.partition.factor\": \"0.25\",\n                \"hive.tez.smb.number.waves\": \"0.5\",\n                \"hive.txn.manager\": \"org.apache.hadoop.hive.ql.lockmgr.DummyTxnManager\",\n                \"hive.txn.max.open.batch\": \"1000\",\n                \"hive.txn.timeout\": \"300\",\n                \"hive.user.install.directory\": \"/user/\",\n                \"hive.vectorized.execution.enabled\": \"true\",\n                \"hive.vectorized.execution.reduce.enabled\": \"false\",\n                \"hive.vectorized.groupby.checkinterval\": \"4096\",\n                \"hive.vectorized.groupby.flush.percent\": \"0.1\",\n                \"hive.vectorized.groupby.maxentries\": \"100000\",\n                \"hive.zookeeper.client.port\": \"2181\",\n                \"hive.zookeeper.namespace\": \"hive_zookeeper_namespace\",\n                \"hive.zookeeper.quorum\": \"%HOSTGROUP::host_group_1%:2181\",\n                \"javax.jdo.option.ConnectionDriverName\": \"com.mysql.jdbc.Driver\",\n                \"javax.jdo.option.ConnectionPassword\": \"verint1!\",\n                \"javax.jdo.option.ConnectionURL\": \"jdbc:mysql://%HOSTGROUP::host_group_1%/hive?createDatabaseIfNotExist=true\",\n                \"javax.jdo.option.ConnectionUserName\": \"hive\"\n            }\n        },\n        {\n            \"oozie-site\": {\n                \"oozie.action.max.output.data\": \"1048576\",\n                \"oozie.authentication.kerberos.name.rules\": \"\\n      RULE:[2:$1@$0]([jt]t@.*TODO-KERBEROS-DOMAIN)s/.*/TODO-MAPREDUSER/\\n      RULE:[2:$1@$0]([nd]n@.*TODO-KERBEROS-DOMAIN)s/.*/TODO-HDFSUSER/\\n      RULE:[2:$1@$0](hm@.*TODO-KERBEROS-DOMAIN)s/.*/TODO-HBASE-USER/\\n      RULE:[2:$1@$0](rs@.*TODO-KERBEROS-DOMAIN)s/.*/TODO-HBASE-USER/\\n      DEFAULT\",\n                \"oozie.authentication.simple.anonymous.allowed\": \"true\",\n                \"oozie.authentication.type\": \"simple\",\n                \"oozie.base.url\": \"http://%HOSTGROUP::host_group_1%:11000/oozie\",\n                \"oozie.credentials.credentialclasses\": \"hcat=org.apache.oozie.action.hadoop.HCatCredentials\",\n                \"oozie.db.schema.name\": \"oozie\",\n                \"oozie.service.ActionService.executor.ext.classes\": \"\\n      org.apache.oozie.action.email.EmailActionExecutor,\\n      org.apache.oozie.action.hadoop.HiveActionExecutor,\\n      org.apache.oozie.action.hadoop.ShellActionExecutor,\\n      org.apache.oozie.action.hadoop.SqoopActionExecutor,\\n      org.apache.oozie.action.hadoop.DistcpActionExecutor\",\n                \"oozie.service.AuthorizationService.security.enabled\": \"false\",\n                \"oozie.service.CallableQueueService.callable.concurrency\": \"3\",\n                \"oozie.service.CallableQueueService.queue.size\": \"1000\",\n                \"oozie.service.CallableQueueService.threads\": \"10\",\n                \"oozie.service.ELService.ext.functions.coord-action-create\": \"\\n      now=org.apache.oozie.extensions.OozieELExtensions#ph2_now,\\n      today=org.apache.oozie.extensions.OozieELExtensions#ph2_today,\\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph2_yesterday,\\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_currentMonth,\\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_lastMonth,\\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph2_currentYear,\\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph2_lastYear,\\n      latest=org.apache.oozie.coord.CoordELFunctions#ph2_coord_latest_echo,\\n      future=org.apache.oozie.coord.CoordELFunctions#ph2_coord_future_echo,\\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph2_coord_formatTime,\\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user\",\n                \"oozie.service.ELService.ext.functions.coord-action-create-inst\": \"\\n      now=org.apache.oozie.extensions.OozieELExtensions#ph2_now_inst,\\n      today=org.apache.oozie.extensions.OozieELExtensions#ph2_today_inst,\\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph2_yesterday_inst,\\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_currentMonth_inst,\\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_lastMonth_inst,\\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph2_currentYear_inst,\\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph2_lastYear_inst,\\n      latest=org.apache.oozie.coord.CoordELFunctions#ph2_coord_latest_echo,\\n      future=org.apache.oozie.coord.CoordELFunctions#ph2_coord_future_echo,\\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph2_coord_formatTime,\\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user\",\n                \"oozie.service.ELService.ext.functions.coord-action-start\": \"\\n      now=org.apache.oozie.extensions.OozieELExtensions#ph2_now,\\n      today=org.apache.oozie.extensions.OozieELExtensions#ph2_today,\\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph2_yesterday,\\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_currentMonth,\\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_lastMonth,\\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph2_currentYear,\\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph2_lastYear,\\n      latest=org.apache.oozie.coord.CoordELFunctions#ph3_coord_latest,\\n      future=org.apache.oozie.coord.CoordELFunctions#ph3_coord_future,\\n      dataIn=org.apache.oozie.extensions.OozieELExtensions#ph3_dataIn,\\n      instanceTime=org.apache.oozie.coord.CoordELFunctions#ph3_coord_nominalTime,\\n      dateOffset=org.apache.oozie.coord.CoordELFunctions#ph3_coord_dateOffset,\\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph3_coord_formatTime,\\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user\",\n                \"oozie.service.ELService.ext.functions.coord-job-submit-data\": \"\\n      now=org.apache.oozie.extensions.OozieELExtensions#ph1_now_echo,\\n      today=org.apache.oozie.extensions.OozieELExtensions#ph1_today_echo,\\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph1_yesterday_echo,\\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_currentMonth_echo,\\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_lastMonth_echo,\\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph1_currentYear_echo,\\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph1_lastYear_echo,\\n      dataIn=org.apache.oozie.extensions.OozieELExtensions#ph1_dataIn_echo,\\n      instanceTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_nominalTime_echo_wrap,\\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_formatTime_echo,\\n      dateOffset=org.apache.oozie.coord.CoordELFunctions#ph1_coord_dateOffset_echo,\\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user\",\n                \"oozie.service.ELService.ext.functions.coord-job-submit-instances\": \"\\n      now=org.apache.oozie.extensions.OozieELExtensions#ph1_now_echo,\\n      today=org.apache.oozie.extensions.OozieELExtensions#ph1_today_echo,\\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph1_yesterday_echo,\\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_currentMonth_echo,\\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_lastMonth_echo,\\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph1_currentYear_echo,\\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph1_lastYear_echo,\\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_formatTime_echo,\\n      latest=org.apache.oozie.coord.CoordELFunctions#ph2_coord_latest_echo,\\n      future=org.apache.oozie.coord.CoordELFunctions#ph2_coord_future_echo\",\n                \"oozie.service.ELService.ext.functions.coord-sla-create\": \"\\n      instanceTime=org.apache.oozie.coord.CoordELFunctions#ph2_coord_nominalTime,\\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user\",\n                \"oozie.service.ELService.ext.functions.coord-sla-submit\": \"\\n      instanceTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_nominalTime_echo_fixed,\\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user\",\n                \"oozie.service.HadoopAccessorService.hadoop.configurations\": \"*=/etc/hadoop/conf\",\n                \"oozie.service.HadoopAccessorService.kerberos.enabled\": \"false\",\n                \"oozie.service.HadoopAccessorService.supported.filesystems\": \"*\",\n                \"oozie.service.JPAService.create.db.schema\": \"false\",\n                \"oozie.service.JPAService.jdbc.driver\": \"org.apache.derby.jdbc.EmbeddedDriver\",\n                \"oozie.service.JPAService.jdbc.username\": \"oozie\",\n                \"oozie.service.JPAService.pool.max.active.conn\": \"10\",\n                \"oozie.service.ProxyUserService.proxyuser.falcon.groups\": \"*\",\n                \"oozie.service.ProxyUserService.proxyuser.falcon.hosts\": \"*\",\n                \"oozie.service.ProxyUserService.proxyuser.hue.groups\": \"*\",\n                \"oozie.service.ProxyUserService.proxyuser.hue.hosts\": \"*\",\n                \"oozie.service.PurgeService.older.than\": \"30\",\n                \"oozie.service.PurgeService.purge.interval\": \"3600\",\n                \"oozie.service.SchemaService.wf.ext.schemas\": \"shell-action-0.1.xsd,shell-action-0.2.xsd,shell-action-0.3.xsd,email-action-0.1.xsd,email-action-0.2.xsd,hive-action-0.2.xsd,hive-action-0.3.xsd,hive-action-0.4.xsd,hive-action-0.5.xsd,sqoop-action-0.2.xsd,sqoop-action-0.3.xsd,sqoop-action-0.4.xsd,ssh-action-0.1.xsd,ssh-action-0.2.xsd,distcp-action-0.1.xsd,distcp-action-0.2.xsd,oozie-sla-0.1.xsd,oozie-sla-0.2.xsd\",\n                \"oozie.service.URIHandlerService.uri.handlers\": \"org.apache.oozie.dependency.FSURIHandler,org.apache.oozie.dependency.HCatURIHandler\",\n                \"oozie.service.WorkflowAppService.system.libpath\": \"/user/${user.name}/share/lib\",\n                \"oozie.service.coord.check.maximum.frequency\": \"false\",\n                \"oozie.service.coord.normal.default.timeout\": \"120\",\n                \"oozie.service.coord.push.check.requeue.interval\": \"30000\",\n                \"oozie.services\": \"\\n      org.apache.oozie.service.SchedulerService,\\n      org.apache.oozie.service.InstrumentationService,\\n      org.apache.oozie.service.MemoryLocksService,\\n      org.apache.oozie.service.UUIDService,\\n      org.apache.oozie.service.ELService,\\n      org.apache.oozie.service.AuthorizationService,\\n      org.apache.oozie.service.UserGroupInformationService,\\n      org.apache.oozie.service.HadoopAccessorService,\\n      org.apache.oozie.service.JobsConcurrencyService,\\n      org.apache.oozie.service.URIHandlerService,\\n      org.apache.oozie.service.DagXLogInfoService,\\n      org.apache.oozie.service.SchemaService,\\n      org.apache.oozie.service.LiteWorkflowAppService,\\n      org.apache.oozie.service.JPAService,\\n      org.apache.oozie.service.StoreService,\\n      org.apache.oozie.service.CoordinatorStoreService,\\n      org.apache.oozie.service.SLAStoreService,\\n      org.apache.oozie.service.DBLiteWorkflowStoreService,\\n      org.apache.oozie.service.CallbackService,\\n      org.apache.oozie.service.ShareLibService,\\n      org.apache.oozie.service.CallableQueueService,\\n      org.apache.oozie.service.ActionService,\\n      org.apache.oozie.service.ActionCheckerService,\\n      org.apache.oozie.service.RecoveryService,\\n      org.apache.oozie.service.PurgeService,\\n      org.apache.oozie.service.CoordinatorEngineService,\\n      org.apache.oozie.service.BundleEngineService,\\n      org.apache.oozie.service.DagEngineService,\\n      org.apache.oozie.service.CoordMaterializeTriggerService,\\n      org.apache.oozie.service.StatusTransitService,\\n      org.apache.oozie.service.PauseTransitService,\\n      org.apache.oozie.service.GroupsService,\\n      org.apache.oozie.service.ProxyUserService,\\n      org.apache.oozie.service.XLogStreamingService,\\n      org.apache.oozie.service.JvmPauseMonitorService\",\n                \"oozie.services.ext\": \"org.apache.oozie.service.JMSAccessorService,org.apache.oozie.service.PartitionDependencyManagerService,org.apache.oozie.service.HCatAccessorService\",\n                \"oozie.system.id\": \"oozie-${user.name}\",\n                \"oozie.systemmode\": \"NORMAL\",\n                \"use.system.libpath.for.mapreduce.and.pig.jobs\": \"false\"\n            }\n        }\n    ],\n    \"host_groups\": [\n        {\n            \"name\": \"host_group_1\",\n            \"configurations\": [\n                {\n                    \"nagios-env\" : {\n                        \"nagios_contact\": \"me@my-awesome-domain.example\"\n                    }\n                },\n                {\n                    \"yarn-site\": {\n                        \"yarn.nodemanager.pmem-check-enabled\": \"false\",\n                        \"yarn.nodemanager.resource.memory-mb\": \"9216\",\n                        \"yarn.nodemanager.vmem-pmem-ratio\": \"10\",\n                        \"yarn.scheduler.minimum-allocation-mb\": \"512\"\n                    }\n                },\n                {\n                    \"mapred-site\": {\n                        \"mapreduce.map.java.opts\": \"-Xmx384m\",\n                        \"mapreduce.map.memory.mb\": \"512\",\n                        \"mapreduce.reduce.java.opts\": \"-Xmx768m\",\n                        \"mapreduce.task.io.sort.mb\": \"128\",\n                        \"yarn.app.mapreduce.am.command-opts\": \"-Xmx384m -Dhdp.version=${hdp.version}\",\n                        \"yarn.app.mapreduce.am.resource.mb\": \"512\"\n                    }\n                },\n                {\n                    \"hive-site\": {\n                        \"hive.auto.convert.join.noconditionaltask.size\": \"134217000\",\n                        \"hive.tez.container.size\": \"512\",\n                        \"hive.tez.java.opts\": \"-server -Xmx384m -Djava.net.preferIPv4Stack=true -XX:NewRatio=8 -XX:+UseNUMA -XX:+UseParallelGC -XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps\"\n                    }\n                },\n                {\n                    \"tez-site\": {\n                        \"tez.am.java.opts\": \"-server -Xmx768m -Djava.net.preferIPv4Stack=true -XX:+UseNUMA -XX:+UseParallelGC\",\n                        \"tez.am.resource.memory.mb\": \"1024\",\n                        \"tez.dag.am.resource.memory.mb\": \"1024\",\n                        \"yarn.app.mapreduce.am.command-opts\": \"-Xmx768m\"\n                    }\n                }\n            ],\n            \"components\": [\n                {\n                    \"name\": \"PIG\"\n                },\n                {\n                    \"name\": \"HISTORYSERVER\"\n                },\n                {\n                    \"name\": \"KAFKA_BROKER\"\n                },\n                {\n                    \"name\": \"OOZIE_CLIENT\"\n                },\n                {\n                    \"name\": \"HBASE_REGIONSERVER\"\n                },\n                {\n                    \"name\": \"HBASE_CLIENT\"\n                },\n                {\n                    \"name\": \"NAMENODE\"\n                },\n                {\n                    \"name\": \"SUPERVISOR\"\n                },\n                {\n                    \"name\": \"FALCON_SERVER\"\n                },\n                {\n                    \"name\": \"HCAT\"\n                },\n                {\n                    \"name\": \"KNOX_GATEWAY\"\n                },\n                {\n                    \"name\": \"SLIDER\"\n                },\n                {\n                    \"name\": \"AMBARI_SERVER\"\n                },\n                {\n                    \"name\": \"APP_TIMELINE_SERVER\"\n                },\n                {\n                    \"name\": \"NODEMANAGER\"\n                },\n                {\n                    \"name\": \"HDFS_CLIENT\"\n                },\n                {\n                    \"name\": \"HIVE_CLIENT\"\n                },\n                {\n                    \"name\": \"FLUME_HANDLER\"\n                },\n                {\n                    \"name\": \"DATANODE\"\n                },\n                {\n                    \"name\": \"WEBHCAT_SERVER\"\n                },\n                {\n                    \"name\": \"RESOURCEMANAGER\"\n                },\n                {\n                    \"name\": \"ZOOKEEPER_SERVER\"\n                },\n                {\n                    \"name\": \"ZOOKEEPER_CLIENT\"\n                },\n                {\n                    \"name\": \"STORM_UI_SERVER\"\n                },\n                {\n                    \"name\": \"HBASE_MASTER\"\n                },\n                {\n                    \"name\": \"HIVE_SERVER\"\n                },\n                {\n                    \"name\": \"OOZIE_SERVER\"\n                },\n                {\n                    \"name\": \"FALCON_CLIENT\"\n                },\n                {\n                    \"name\": \"NAGIOS_SERVER\"\n                },\n                {\n                    \"name\": \"SECONDARY_NAMENODE\"\n                },\n                {\n                    \"name\": \"TEZ_CLIENT\"\n                },\n                {\n                    \"name\": \"HIVE_METASTORE\"\n                },\n                {\n                    \"name\": \"GANGLIA_SERVER\"\n                },\n                {\n                    \"name\": \"SQOOP\"\n                },\n                {\n                    \"name\": \"YARN_CLIENT\"\n                },\n                {\n                    \"name\": \"MAPREDUCE2_CLIENT\"\n                },\n                {\n                    \"name\": \"MYSQL_SERVER\"\n                },\n                {\n                    \"name\": \"GANGLIA_MONITOR\"\n                },\n                {\n                    \"name\": \"DRPC_SERVER\"\n                },\n                {\n                    \"name\": \"NIMBUS\"\n                }\n            ],\n            \"cardinality\": \"1\"\n        }\n    ],\n    \"Blueprints\": {\n        \"stack_name\": \"HDP\",\n        \"stack_version\": \"2.2\"\n    }\n}\n"
		},
		{
			"collectionId": "adbaaa7a-9eaa-73f2-38ef-fbe375e29edd",
			"id": "56951531-98e0-f614-5ea6-5307b10c71ff",
			"name": "get-cluster",
			"description": "",
			"url": "http://{{ambari-server-host}}:8080/api/v1/clusters/IN-CLS",
			"method": "GET",
			"headers": "Authorization: Basic YWRtaW46YWRtaW4=\nX-Requested-By: ambari\n",
			"data": [],
			"dataMode": "raw",
			"timestamp": 0,
			"responses": [],
			"version": 2,
			"preRequestScript": "",
			"tests": "",
			"rawModeData": "{\n  \"blueprint\" : \"blueprint-CLS\",\n  \"default_password\" : \"verint1!\",\n  \"configurations\" : [],    \n  \"host_groups\" :[\n    {\n      \"name\" : \"host_group_1\", \n      \"configurations\" : [],    \n      \"hosts\" : [         \n        {\n          \"fqdn\" : \"ea-demo.verint.com\"\n        }\n      ]\n    }\n  ]\n}"
		},
		{
			"collectionId": "adbaaa7a-9eaa-73f2-38ef-fbe375e29edd",
			"id": "5bcb19a1-7699-661e-246f-b388c8b00cbe",
			"name": "Export Cluster to Blueprint",
			"description": "saves a blueprint in json format from a pre made cluster",
			"url": "http://{{ambari-server-host}}:8080/api/v1/clusters/CLS?format=blueprint",
			"method": "GET",
			"headers": "Authorization: Basic YWRtaW46YWRtaW4=\nX-Requested-By: ambari\n",
			"data": [],
			"dataMode": "raw",
			"timestamp": 0,
			"version": 2,
			"time": 1417444347577,
			"preRequestScript": "",
			"tests": "",
			"rawModeData": "{\n  \"blueprint\" : \"blueprint-CLS\",\n  \"default_password\" : \"verint1!\",\n  \"configurations\" : [],    \n  \"host_groups\" :[\n    {\n      \"name\" : \"host_group_1\", \n      \"configurations\" : [],    \n      \"hosts\" : [         \n        {\n          \"fqdn\" : \"devdan.node\"\n        }\n      ]\n    }\n  ]\n}"
		},
		{
			"collectionId": "adbaaa7a-9eaa-73f2-38ef-fbe375e29edd",
			"id": "5ca8e6a0-dc75-3ba2-c3da-bc3a9e959df0",
			"name": "Delete Blueprint",
			"description": "",
			"url": "http://{{ambari-server-host}}:8080/api/v1/blueprints/blueprint-CLS",
			"method": "DELETE",
			"headers": "Authorization: Basic YWRtaW46YWRtaW4=\nX-Requested-By: ambari\n",
			"data": [],
			"dataMode": "params",
			"timestamp": 0,
			"responses": [],
			"version": 2,
			"preRequestScript": "",
			"tests": ""
		},
		{
			"collectionId": "adbaaa7a-9eaa-73f2-38ef-fbe375e29edd",
			"id": "798a1f3d-3ba6-0dec-93d1-ada2104651d9",
			"name": "get-blueprint",
			"description": "",
			"url": "http://{{ambari-server-host}}:8080/api/v1/blueprints/blueprint-CLS",
			"method": "GET",
			"headers": "Authorization: Basic YWRtaW46YWRtaW4=\nX-Requested-By: ambari\n",
			"data": [],
			"dataMode": "raw",
			"timestamp": 0,
			"responses": [],
			"version": 2,
			"preRequestScript": "",
			"tests": "",
			"rawModeData": "{\n  \"blueprint\" : \"blueprint-CLS\",\n  \"default_password\" : \"verint1!\",\n  \"configurations\" : [],    \n  \"host_groups\" :[\n    {\n      \"name\" : \"host_group_1\", \n      \"configurations\" : [],    \n      \"hosts\" : [         \n        {\n          \"fqdn\" : \"ea-demo.verint.com\"\n        }\n      ]\n    }\n  ]\n}"
		},
		{
			"collectionId": "adbaaa7a-9eaa-73f2-38ef-fbe375e29edd",
			"id": "7e7b2e9e-9f22-c6e1-ee9f-bab25dfa25c8",
			"name": "Create Cluster From Blueprint",
			"description": "",
			"url": "http://{{ambari-server-host}}:8080/api/v1/clusters/IN-CLS",
			"method": "POST",
			"headers": "Authorization: Basic YWRtaW46YWRtaW4=\nX-Requested-By: ambari\n",
			"data": [],
			"dataMode": "raw",
			"timestamp": 0,
			"version": 2,
			"time": 1433331566678,
			"preRequestScript": "",
			"tests": "",
			"rawModeData": "{\n  \"blueprint\" : \"blueprint-CLS\",\n  \"default_password\" : \"verint1!\",\n  \"configurations\" : [],    \n  \"host_groups\" :[\n    {\n      \"name\" : \"host_group_1\", \n      \"configurations\" : [],    \n      \"hosts\" : [         \n        {\n          \"fqdn\" : \"ci-base.verint.com\"\n        }\n      ]\n    }\n  ]\n}"
		},
		{
			"collectionId": "adbaaa7a-9eaa-73f2-38ef-fbe375e29edd",
			"id": "a7600eb0-8f5b-9293-76ab-8ca94c1f97f7",
			"name": "Get Status Creation For Cluster",
			"description": "",
			"url": "http://{{ambari-server-host}}:8080/api/v1/clusters/CLS2/requests/2",
			"method": "GET",
			"headers": "Authorization: Basic YWRtaW46YWRtaW4=\nX-Requested-By: ambari\n",
			"data": [],
			"dataMode": "raw",
			"timestamp": 0,
			"version": 2,
			"time": 1417447397437,
			"preRequestScript": "",
			"tests": "",
			"rawModeData": "{\n  \"blueprint\" : \"blueprint-CLS\",\n  \"default_password\" : \"verint1!\",\n  \"configurations\" : [],    \n  \"host_groups\" :[\n    {\n      \"name\" : \"host_group_1\", \n      \"configurations\" : [],    \n      \"hosts\" : [         \n        {\n          \"fqdn\" : \"devdan.node\"\n        }\n      ]\n    }\n  ]\n}"
		},
		{
			"collectionId": "adbaaa7a-9eaa-73f2-38ef-fbe375e29edd",
			"id": "da68b39b-47a0-b5b4-d92c-b0559fc287ac",
			"name": "Delete Cluster",
			"description": "",
			"url": "http://{{ambari-server-host}}:8080/api/v1/clusters/IN-CLS",
			"method": "DELETE",
			"headers": "Authorization: Basic YWRtaW46YWRtaW4=\nX-Requested-By: ambari\n",
			"data": [],
			"dataMode": "params",
			"timestamp": 0,
			"responses": [],
			"version": 2,
			"preRequestScript": "",
			"tests": ""
		},
		{
			"collectionId": "adbaaa7a-9eaa-73f2-38ef-fbe375e29edd",
			"id": "efe18aae-10d0-357b-654b-3d54a5129aeb",
			"name": "List all defined clusters",
			"description": "",
			"url": "http://{{ambari-server-host}}:8080/api/v1/clusters",
			"method": "GET",
			"headers": "Authorization: Basic YWRtaW46YWRtaW4=\nX-Requested-By: ambari\n",
			"data": [],
			"dataMode": "raw",
			"timestamp": 0,
			"responses": [],
			"version": 2,
			"preRequestScript": "",
			"tests": "",
			"rawModeData": "{\n    \"configurations\": [\n        {\n            \"capacity-scheduler\": {\n                \"yarn.scheduler.capacity.default.minimum-user-limit-percent\": \"100\",\n                \"yarn.scheduler.capacity.maximum-am-resource-percent\": \"0.2\",\n                \"yarn.scheduler.capacity.maximum-applications\": \"10000\",\n                \"yarn.scheduler.capacity.node-locality-delay\": \"40\",\n                \"yarn.scheduler.capacity.resource-calculator\": \"org.apache.hadoop.yarn.util.resource.DefaultResourceCalculator\",\n                \"yarn.scheduler.capacity.root.accessible-node-labels\": \"*\",\n                \"yarn.scheduler.capacity.root.accessible-node-labels.default.capacity\": \"-1\",\n                \"yarn.scheduler.capacity.root.accessible-node-labels.default.maximum-capacity\": \"-1\",\n                \"yarn.scheduler.capacity.root.acl_administer_queue\": \"*\",\n                \"yarn.scheduler.capacity.root.capacity\": \"100\",\n                \"yarn.scheduler.capacity.root.default-node-label-expression\": \" \",\n                \"yarn.scheduler.capacity.root.default.acl_administer_jobs\": \"*\",\n                \"yarn.scheduler.capacity.root.default.acl_submit_applications\": \"*\",\n                \"yarn.scheduler.capacity.root.default.capacity\": \"100\",\n                \"yarn.scheduler.capacity.root.default.maximum-capacity\": \"100\",\n                \"yarn.scheduler.capacity.root.default.state\": \"RUNNING\",\n                \"yarn.scheduler.capacity.root.default.user-limit-factor\": \"1\",\n                \"yarn.scheduler.capacity.root.queues\": \"default\"\n            }\n        },\n        {\n            \"cluster-env\": {\n                \"hadoop-streaming_tar_destination_folder\": \"hdfs:///hdp/apps/{{ hdp_stack_version }}/mapreduce/\",\n                \"hadoop-streaming_tar_source\": \"/usr/hdp/current/hadoop-mapreduce-client/hadoop-streaming.jar\",\n                \"hive_tar_destination_folder\": \"hdfs:///hdp/apps/{{ hdp_stack_version }}/hive/\",\n                \"hive_tar_source\": \"/usr/hdp/current/hive-client/hive.tar.gz\",\n                \"ignore_groupsusers_create\": \"false\",\n                \"kerberos_domain\": \"EXAMPLE.COM\",\n                \"mapreduce_tar_destination_folder\": \"hdfs:///hdp/apps/{{ hdp_stack_version }}/mapreduce/\",\n                \"mapreduce_tar_source\": \"/usr/hdp/current/hadoop-client/mapreduce.tar.gz\",\n                \"pig_tar_destination_folder\": \"hdfs:///hdp/apps/{{ hdp_stack_version }}/pig/\",\n                \"pig_tar_source\": \"/usr/hdp/current/pig-client/pig.tar.gz\",\n                \"security_enabled\": \"false\",\n                \"smokeuser\": \"ambari-qa\",\n                \"sqoop_tar_destination_folder\": \"hdfs:///hdp/apps/{{ hdp_stack_version }}/sqoop/\",\n                \"sqoop_tar_source\": \"/usr/hdp/current/sqoop-client/sqoop.tar.gz\",\n                \"tez_tar_destination_folder\": \"hdfs:///hdp/apps/{{ hdp_stack_version }}/tez/\",\n                \"tez_tar_source\": \"/usr/hdp/current/tez-client/lib/tez.tar.gz\",\n                \"user_group\": \"hadoop\"\n            }\n        },\n        {\n            \"falcon-env\": {\n                \"content\": \"\\n# The java implementation to use. If JAVA_HOME is not found we expect java and jar to be in path\\nexport JAVA_HOME={{java_home}}\\n\\n# any additional java opts you want to set. This will apply to both client and server operations\\n#export FALCON_OPTS=\\n\\n# any additional java opts that you want to set for client only\\n#export FALCON_CLIENT_OPTS=\\n\\n# java heap size we want to set for the client. Default is 1024MB\\n#export FALCON_CLIENT_HEAP=\\n\\n# any additional opts you want to set for prisim service.\\n#export FALCON_PRISM_OPTS=\\n\\n# java heap size we want to set for the prisim service. Default is 1024MB\\n#export FALCON_PRISM_HEAP=\\n\\n# any additional opts you want to set for falcon service.\\nexport FALCON_SERVER_OPTS=\\\"-Dfalcon.embeddedmq={{falcon_embeddedmq_enabled}} -Dfalcon.emeddedmq.port={{falcon_emeddedmq_port}}\\\"\\n\\n# java heap size we want to set for the falcon server. Default is 1024MB\\n#export FALCON_SERVER_HEAP=\\n\\n# What is is considered as falcon home dir. Default is the base location of the installed software\\n#export FALCON_HOME_DIR=\\n\\n# Where log files are stored. Defatult is logs directory under the base install location\\nexport FALCON_LOG_DIR={{falcon_log_dir}}\\n\\n# Where pid files are stored. Defatult is logs directory under the base install location\\nexport FALCON_PID_DIR={{falcon_pid_dir}}\\n\\n# where the falcon active mq data is stored. Defatult is logs/data directory under the base install location\\nexport FALCON_DATA_DIR={{falcon_embeddedmq_data}}\\n\\n# Where do you want to expand the war file. By Default it is in /server/webapp dir under the base install dir.\\n#export FALCON_EXPANDED_WEBAPP_DIR=\",\n                \"falcon.embeddedmq\": \"true\",\n                \"falcon.embeddedmq.data\": \"/hadoop/falcon/embeddedmq/data\",\n                \"falcon.emeddedmq.port\": \"61616\",\n                \"falcon_local_dir\": \"/hadoop/falcon\",\n                \"falcon_log_dir\": \"/var/log/falcon\",\n                \"falcon_pid_dir\": \"/var/run/falcon\",\n                \"falcon_port\": \"15000\",\n                \"falcon_store_uri\": \"file:///hadoop/falcon/store\",\n                \"falcon_user\": \"falcon\"\n            }\n        },\n        {\n            \"falcon-runtime.properties\": {\n                \"*.domain\": \"${falcon.app.type}\",\n                \"*.log.cleanup.frequency.days.retention\": \"days(7)\",\n                \"*.log.cleanup.frequency.hours.retention\": \"minutes(1)\",\n                \"*.log.cleanup.frequency.minutes.retention\": \"hours(6)\",\n                \"*.log.cleanup.frequency.months.retention\": \"months(3)\"\n            }\n        },\n        {\n            \"falcon-startup.properties\": {\n                \"*.ConfigSyncService.impl\": \"org.apache.falcon.resource.ConfigSyncService\",\n                \"*.ProcessInstanceManager.impl\": \"org.apache.falcon.resource.InstanceManager\",\n                \"*.SchedulableEntityManager.impl\": \"org.apache.falcon.resource.SchedulableEntityManager\",\n                \"*.application.services\": \"org.apache.falcon.security.AuthenticationInitializationService,\\\\\\n      org.apache.falcon.workflow.WorkflowJobEndNotificationService, \\\\\\n      org.apache.falcon.service.ProcessSubscriberService,\\\\\\n      org.apache.falcon.entity.store.ConfigurationStore,\\\\\\n      org.apache.falcon.rerun.service.RetryService,\\\\\\n      org.apache.falcon.rerun.service.LateRunService,\\\\\\n      org.apache.falcon.service.LogCleanupService,\\\\\\n      org.apache.falcon.metadata.MetadataMappingService\",\n                \"*.broker.impl.class\": \"org.apache.activemq.ActiveMQConnectionFactory\",\n                \"*.broker.ttlInMins\": \"4320\",\n                \"*.broker.url\": \"tcp://%HOSTGROUP::host_group_1%:61616\",\n                \"*.catalog.service.impl\": \"org.apache.falcon.catalog.HiveCatalogService\",\n                \"*.config.store.uri\": \"file:///hadoop/falcon/store\",\n                \"*.configstore.listeners\": \"org.apache.falcon.entity.v0.EntityGraph,\\\\\\n      org.apache.falcon.entity.ColoClusterRelation,\\\\\\n      org.apache.falcon.group.FeedGroupMap,\\\\\\n      org.apache.falcon.service.SharedLibraryHostingService\",\n                \"*.dfs.namenode.kerberos.principal\": \"nn/_HOST@EXAMPLE.COM\",\n                \"*.domain\": \"${falcon.app.type}\",\n                \"*.entity.topic\": \"FALCON.ENTITY.TOPIC\",\n                \"*.falcon.authentication.type\": \"simple\",\n                \"*.falcon.cleanup.service.frequency\": \"days(1)\",\n                \"*.falcon.enableTLS\": \"false\",\n                \"*.falcon.graph.blueprints.graph\": \"com.thinkaurelius.titan.core.TitanFactory\",\n                \"*.falcon.graph.preserve.history\": \"false\",\n                \"*.falcon.graph.serialize.path\": \"/hadoop/falcon/data/lineage\",\n                \"*.falcon.graph.storage.backend\": \"berkeleyje\",\n                \"*.falcon.graph.storage.directory\": \"/hadoop/falcon/data/lineage/graphdb\",\n                \"*.falcon.http.authentication.blacklisted.users\": \"\",\n                \"*.falcon.http.authentication.cookie.domain\": \"EXAMPLE.COM\",\n                \"*.falcon.http.authentication.kerberos.keytab\": \"/etc/security/keytabs/spnego.service.keytab\",\n                \"*.falcon.http.authentication.kerberos.name.rules\": \"DEFAULT\",\n                \"*.falcon.http.authentication.signature.secret\": \"falcon\",\n                \"*.falcon.http.authentication.simple.anonymous.allowed\": \"true\",\n                \"*.falcon.http.authentication.token.validity\": \"36000\",\n                \"*.falcon.http.authentication.type\": \"simple\",\n                \"*.falcon.security.authorization.admin.groups\": \"falcon\",\n                \"*.falcon.security.authorization.admin.users\": \"falcon,ambari-qa\",\n                \"*.falcon.security.authorization.enabled\": \"false\",\n                \"*.falcon.security.authorization.provider\": \"org.apache.falcon.security.DefaultAuthorizationProvider\",\n                \"*.falcon.security.authorization.superusergroup\": \"falcon\",\n                \"*.falcon.service.authentication.kerberos.keytab\": \"/etc/security/keytabs/falcon.service.keytab\",\n                \"*.internal.queue.size\": \"1000\",\n                \"*.journal.impl\": \"org.apache.falcon.transaction.SharedFileSystemJournal\",\n                \"*.max.retry.failure.count\": \"1\",\n                \"*.oozie.feed.workflow.builder\": \"org.apache.falcon.workflow.OozieFeedWorkflowBuilder\",\n                \"*.oozie.process.workflow.builder\": \"org.apache.falcon.workflow.OozieProcessWorkflowBuilder\",\n                \"*.retry.recorder.path\": \"${falcon.log.dir}/retry\",\n                \"*.shared.libs\": \"activemq-core,ant,geronimo-j2ee-management,hadoop-distcp,jms,json-simple,oozie-client,spring-jms\",\n                \"*.system.lib.location\": \"${falcon.home}/server/webapp/${falcon.app.type}/WEB-INF/lib\",\n                \"*.workflow.engine.impl\": \"org.apache.falcon.workflow.engine.OozieWorkflowEngine\",\n                \"prism.application.services\": \"org.apache.falcon.entity.store.ConfigurationStore\",\n                \"prism.configstore.listeners\": \"org.apache.falcon.entity.v0.EntityGraph,\\\\\\n      org.apache.falcon.entity.ColoClusterRelation,\\\\\\n      org.apache.falcon.group.FeedGroupMap\"\n            }\n        },\n        {\n            \"flume-conf\": {\n                \"content\": \"\\n# Flume agent config\"\n            }\n        },\n        {\n            \"flume-env\": {\n                \"content\": \"\\n# Licensed to the Apache Software Foundation (ASF) under one or more\\n# contributor license agreements.  See the NOTICE file distributed with\\n# this work for additional information regarding copyright ownership.\\n# The ASF licenses this file to You under the Apache License, Version 2.0\\n# (the \\\"License\\\"); you may not use this file except in compliance with\\n# the License.  You may obtain a copy of the License at\\n#\\n#     http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing, software\\n# distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n# See the License for the specific language governing permissions and\\n# limitations under the License.\\n\\n# If this file is placed at FLUME_CONF_DIR/flume-env.sh, it will be sourced\\n# during Flume startup.\\n\\n# Enviroment variables can be set here.\\n\\nexport JAVA_HOME={{java_home}}\\n\\n# Give Flume more memory and pre-allocate, enable remote monitoring via JMX\\n# export JAVA_OPTS=\\\"-Xms100m -Xmx2000m -Dcom.sun.management.jmxremote\\\"\\n\\n# Note that the Flume conf directory is always included in the classpath.\\n#FLUME_CLASSPATH=\\\"\\\"\\n\\nexport HIVE_HOME={{flume_hive_home}}\\nexport HCAT_HOME={{flume_hcat_home}}\",\n                \"flume_conf_dir\": \"/etc/flume/conf\",\n                \"flume_log_dir\": \"/var/log/flume\",\n                \"flume_user\": \"flume\"\n            }\n        },\n        {\n            \"ganglia-env\": {\n                \"additional_clusters\": \" \",\n                \"ganglia_runtime_dir\": \"/var/run/ganglia/hdp\",\n                \"gmetad_user\": \"nobody\",\n                \"gmond_user\": \"nobody\",\n                \"rrdcached_base_dir\": \"/var/lib/ganglia/rrds\",\n                \"rrdcached_delay\": \"1800\",\n                \"rrdcached_flush_timeout\": \"7200\",\n                \"rrdcached_timeout\": \"3600\",\n                \"rrdcached_write_threads\": \"4\"\n            }\n        },\n        {\n            \"gateway-log4j\": {\n                \"content\": \"\\n\\n      # Licensed to the Apache Software Foundation (ASF) under one\\n      # or more contributor license agreements. See the NOTICE file\\n      # distributed with this work for additional information\\n      # regarding copyright ownership. The ASF licenses this file\\n      # to you under the Apache License, Version 2.0 (the\\n      # \\\"License\\\"); you may not use this file except in compliance\\n      # with the License. You may obtain a copy of the License at\\n      #\\n      # http://www.apache.org/licenses/LICENSE-2.0\\n      #\\n      # Unless required by applicable law or agreed to in writing, software\\n      # distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n      # See the License for the specific language governing permissions and\\n      # limitations under the License.\\n\\n      app.log.dir=${launcher.dir}/../logs\\n      app.log.file=${launcher.name}.log\\n      app.audit.file=${launcher.name}-audit.log\\n\\n      log4j.rootLogger=ERROR, drfa\\n\\n      log4j.logger.org.apache.hadoop.gateway=INFO\\n      #log4j.logger.org.apache.hadoop.gateway=DEBUG\\n\\n      #log4j.logger.org.eclipse.jetty=DEBUG\\n      #log4j.logger.org.apache.shiro=DEBUG\\n      #log4j.logger.org.apache.http=DEBUG\\n      #log4j.logger.org.apache.http.client=DEBUG\\n      #log4j.logger.org.apache.http.headers=DEBUG\\n      #log4j.logger.org.apache.http.wire=DEBUG\\n\\n      log4j.appender.stdout=org.apache.log4j.ConsoleAppender\\n      log4j.appender.stdout.layout=org.apache.log4j.PatternLayout\\n      log4j.appender.stdout.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\\n\\n      log4j.appender.drfa=org.apache.log4j.DailyRollingFileAppender\\n      log4j.appender.drfa.File=${app.log.dir}/${app.log.file}\\n      log4j.appender.drfa.DatePattern=.yyyy-MM-dd\\n      log4j.appender.drfa.layout=org.apache.log4j.PatternLayout\\n      log4j.appender.drfa.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\\n\\n      log4j.logger.audit=INFO, auditfile\\n      log4j.appender.auditfile=org.apache.log4j.DailyRollingFileAppender\\n      log4j.appender.auditfile.File=${app.log.dir}/${app.audit.file}\\n      log4j.appender.auditfile.Append = true\\n      log4j.appender.auditfile.DatePattern = '.'yyyy-MM-dd\\n      log4j.appender.auditfile.layout = org.apache.hadoop.gateway.audit.log4j.layout.AuditLayout\"\n            }\n        },\n        {\n            \"gateway-site\": {\n                \"gateway.gateway.conf.dir\": \"deployments\",\n                \"gateway.hadoop.kerberos.secured\": \"false\",\n                \"gateway.path\": \"gateway\",\n                \"gateway.port\": \"8443\",\n                \"java.security.auth.login.config\": \"/etc/knox/conf/krb5JAASLogin.conf\",\n                \"java.security.krb5.conf\": \"/etc/knox/conf/krb5.conf\",\n                \"sun.security.krb5.debug\": \"true\"\n            }\n        },\n        {\n            \"hadoop-env\": {\n                \"content\": \"\\n# Set Hadoop-specific environment variables here.\\n\\n# The only required environment variable is JAVA_HOME.  All others are\\n# optional.  When running a distributed configuration it is best to\\n# set JAVA_HOME in this file, so that it is correctly defined on\\n# remote nodes.\\n\\n# The java implementation to use.  Required.\\nexport JAVA_HOME={{java_home}}\\nexport HADOOP_HOME_WARN_SUPPRESS=1\\n\\n# Hadoop home directory\\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\\n\\n# Hadoop Configuration Directory\\n\\n{# this is different for HDP1 #}\\n# Path to jsvc required by secure HDP 2.0 datanode\\nexport JSVC_HOME={{jsvc_path}}\\n\\n\\n# The maximum amount of heap to use, in MB. Default is 1000.\\nexport HADOOP_HEAPSIZE=\\\"{{hadoop_heapsize}}\\\"\\n\\nexport HADOOP_NAMENODE_INIT_HEAPSIZE=\\\"-Xms{{namenode_heapsize}}\\\"\\n\\n# Extra Java runtime options.  Empty by default.\\nexport HADOOP_OPTS=\\\"-Djava.net.preferIPv4Stack=true ${HADOOP_OPTS}\\\"\\n\\n# Command specific options appended to HADOOP_OPTS when specified\\nexport HADOOP_NAMENODE_OPTS=\\\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -XX:PermSize={{namenode_opt_permsize}} -XX:MaxPermSize={{namenode_opt_maxpermsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{namenode_heapsize}} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_NAMENODE_OPTS}\\\"\\nHADOOP_JOBTRACKER_OPTS=\\\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{jtnode_opt_newsize}} -XX:MaxNewSize={{jtnode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xmx{{jtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dmapred.audit.logger=INFO,MRAUDIT -Dhadoop.mapreduce.jobsummary.logger=INFO,JSA ${HADOOP_JOBTRACKER_OPTS}\\\"\\n\\nHADOOP_TASKTRACKER_OPTS=\\\"-server -Xmx{{ttnode_heapsize}} -Dhadoop.security.logger=ERROR,console -Dmapred.audit.logger=ERROR,console ${HADOOP_TASKTRACKER_OPTS}\\\"\\nexport HADOOP_DATANODE_OPTS=\\\"-server -XX:ParallelGCThreads=4 -XX:+UseConcMarkSweepGC -XX:ErrorFile=/var/log/hadoop/$USER/hs_err_pid%p.log -XX:NewSize=200m -XX:MaxNewSize=200m -XX:PermSize=128m -XX:MaxPermSize=256m -Xloggc:/var/log/hadoop/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{dtnode_heapsize}} -Xmx{{dtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_DATANODE_OPTS}\\\"\\nHADOOP_BALANCER_OPTS=\\\"-server -Xmx{{hadoop_heapsize}}m ${HADOOP_BALANCER_OPTS}\\\"\\n\\nexport HADOOP_SECONDARYNAMENODE_OPTS=$HADOOP_NAMENODE_OPTS\\n\\n# The following applies to multiple commands (fs, dfs, fsck, distcp etc)\\nexport HADOOP_CLIENT_OPTS=\\\"-Xmx${HADOOP_HEAPSIZE}m -XX:MaxPermSize=512m $HADOOP_CLIENT_OPTS\\\"\\n\\n# On secure datanodes, user to run the datanode as after dropping privileges\\nexport HADOOP_SECURE_DN_USER=${HADOOP_SECURE_DN_USER:-{{hadoop_secure_dn_user}}}\\n\\n# Extra ssh options.  Empty by default.\\nexport HADOOP_SSH_OPTS=\\\"-o ConnectTimeout=5 -o SendEnv=HADOOP_CONF_DIR\\\"\\n\\n# Where log files are stored.  $HADOOP_HOME/logs by default.\\nexport HADOOP_LOG_DIR={{hdfs_log_dir_prefix}}/$USER\\n\\n# History server logs\\nexport HADOOP_MAPRED_LOG_DIR={{mapred_log_dir_prefix}}/$USER\\n\\n# Where log files are stored in the secure data environment.\\nexport HADOOP_SECURE_DN_LOG_DIR={{hdfs_log_dir_prefix}}/$HADOOP_SECURE_DN_USER\\n\\n# File naming remote slave hosts.  $HADOOP_HOME/conf/slaves by default.\\n# export HADOOP_SLAVES=${HADOOP_HOME}/conf/slaves\\n\\n# host:path where hadoop code should be rsync'd from.  Unset by default.\\n# export HADOOP_MASTER=master:/home/$USER/src/hadoop\\n\\n# Seconds to sleep between slave commands.  Unset by default.  This\\n# can be useful in large clusters, where, e.g., slave rsyncs can\\n# otherwise arrive faster than the master can service them.\\n# export HADOOP_SLAVE_SLEEP=0.1\\n\\n# The directory where pid files are stored. /tmp by default.\\nexport HADOOP_PID_DIR={{hadoop_pid_dir_prefix}}/$USER\\nexport HADOOP_SECURE_DN_PID_DIR={{hadoop_pid_dir_prefix}}/$HADOOP_SECURE_DN_USER\\n\\n# History server pid\\nexport HADOOP_MAPRED_PID_DIR={{mapred_pid_dir_prefix}}/$USER\\n\\nYARN_RESOURCEMANAGER_OPTS=\\\"-Dyarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\\\"\\n\\n# A string representing this instance of hadoop. $USER by default.\\nexport HADOOP_IDENT_STRING=$USER\\n\\n# The scheduling priority for daemon processes.  See 'man nice'.\\n\\n# export HADOOP_NICENESS=10\\n\\n# Use libraries from standard classpath\\nJAVA_JDBC_LIBS=\\\"\\\"\\n#Add libraries required by mysql connector\\nfor jarFile in `ls /usr/share/java/*mysql* 2>/dev/null`\\ndo\\n  JAVA_JDBC_LIBS=${JAVA_JDBC_LIBS}:$jarFile\\ndone\\n# Add libraries required by oracle connector\\nfor jarFile in `ls /usr/share/java/*ojdbc* 2>/dev/null`\\ndo\\n  JAVA_JDBC_LIBS=${JAVA_JDBC_LIBS}:$jarFile\\ndone\\n# Add libraries required by nodemanager\\nMAPREDUCE_LIBS={{mapreduce_libs_path}}\\nexport HADOOP_CLASSPATH=${HADOOP_CLASSPATH}${JAVA_JDBC_LIBS}:${MAPREDUCE_LIBS}\\n\\n# added to the HADOOP_CLASSPATH\\nif [ -d \\\"/usr/hdp/current/tez-client\\\" ]; then\\n  if [ -d \\\"/etc/tez/conf/\\\" ]; then\\n    # When using versioned RPMs, the tez-client will be a symlink to the current folder of tez in HDP.\\n    export HADOOP_CLASSPATH=${HADOOP_CLASSPATH}:/usr/hdp/current/tez-client/*:/usr/hdp/current/tez-client/lib/*:/etc/tez/conf/\\n  fi\\nfi\\n\\n# Setting path to hdfs command line\\nexport HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\\n\\n# Mostly required for hadoop 2.0\\nexport JAVA_LIBRARY_PATH=${JAVA_LIBRARY_PATH}\\n\\nexport HADOOP_OPTS=\\\"-Dhdp.version=$HDP_VERSION $HADOOP_OPTS\\\"\",\n                \"dfs.datanode.data.dir.mount.file\": \"/etc/hadoop/conf/dfs_data_dir_mount.hist\",\n                \"dtnode_heapsize\": \"1024m\",\n                \"hadoop_heapsize\": \"1024\",\n                \"hadoop_pid_dir_prefix\": \"/var/run/hadoop\",\n                \"hadoop_root_logger\": \"INFO,RFA\",\n                \"hdfs_log_dir_prefix\": \"/var/log/hadoop\",\n                \"hdfs_user\": \"hdfs\",\n                \"namenode_heapsize\": \"1024m\",\n                \"namenode_opt_maxnewsize\": \"200m\",\n                \"namenode_opt_maxpermsize\": \"256m\",\n                \"namenode_opt_newsize\": \"200m\",\n                \"namenode_opt_permsize\": \"128m\",\n                \"proxyuser_group\": \"users\"\n            }\n        },\n        {\n            \"hadoop-policy\": {\n                \"security.admin.operations.protocol.acl\": \"hadoop\",\n                \"security.client.datanode.protocol.acl\": \"*\",\n                \"security.client.protocol.acl\": \"*\",\n                \"security.datanode.protocol.acl\": \"*\",\n                \"security.inter.datanode.protocol.acl\": \"*\",\n                \"security.inter.tracker.protocol.acl\": \"*\",\n                \"security.job.client.protocol.acl\": \"*\",\n                \"security.job.task.protocol.acl\": \"*\",\n                \"security.namenode.protocol.acl\": \"*\",\n                \"security.refresh.policy.protocol.acl\": \"hadoop\",\n                \"security.refresh.usertogroups.mappings.protocol.acl\": \"hadoop\"\n            }\n        },\n        {\n            \"hbase-env\": {\n                \"content\": \"\\n# Set environment variables here.\\n\\n# The java implementation to use. Java 1.6 required.\\nexport JAVA_HOME={{java64_home}}\\n\\n# HBase Configuration directory\\nexport HBASE_CONF_DIR=${HBASE_CONF_DIR:-{{hbase_conf_dir}}}\\n\\n# Extra Java CLASSPATH elements. Optional.\\nexport HBASE_CLASSPATH=${HBASE_CLASSPATH}\\n\\n# The maximum amount of heap to use, in MB. Default is 1000.\\n# export HBASE_HEAPSIZE=1000\\n\\n# Extra Java runtime options.\\n# Below are what we set by default. May only work with SUN JVM.\\n# For more on why as well as other possible settings,\\n# see http://wiki.apache.org/hadoop/PerformanceTuning\\nexport SERVER_GC_OPTS=\\\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{log_dir}}/gc.log-`date +'%Y%m%d%H%M'`\\\"\\n# Uncomment below to enable java garbage collection logging.\\n# export HBASE_OPTS=\\\"$HBASE_OPTS -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:$HBASE_HOME/logs/gc-hbase.log\\\"\\n\\n# Uncomment and adjust to enable JMX exporting\\n# See jmxremote.password and jmxremote.access in $JRE_HOME/lib/management to configure remote password access.\\n# More details at: http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html\\n#\\n# export HBASE_JMX_BASE=\\\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\\\"\\n# If you want to configure BucketCache, specify '-XX: MaxDirectMemorySize=' with proper direct memory size\\n# export HBASE_THRIFT_OPTS=\\\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10103\\\"\\n# export HBASE_ZOOKEEPER_OPTS=\\\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10104\\\"\\n\\n# File naming hosts on which HRegionServers will run. $HBASE_HOME/conf/regionservers by default.\\nexport HBASE_REGIONSERVERS=${HBASE_CONF_DIR}/regionservers\\n\\n# Extra ssh options. Empty by default.\\n# export HBASE_SSH_OPTS=\\\"-o ConnectTimeout=1 -o SendEnv=HBASE_CONF_DIR\\\"\\n\\n# Where log files are stored. $HBASE_HOME/logs by default.\\nexport HBASE_LOG_DIR={{log_dir}}\\n\\n# A string representing this instance of hbase. $USER by default.\\n# export HBASE_IDENT_STRING=$USER\\n\\n# The scheduling priority for daemon processes. See 'man nice'.\\n# export HBASE_NICENESS=10\\n\\n# The directory where pid files are stored. /tmp by default.\\nexport HBASE_PID_DIR={{pid_dir}}\\n\\n# Seconds to sleep between slave commands. Unset by default. This\\n# can be useful in large clusters, where, e.g., slave rsyncs can\\n# otherwise arrive faster than the master can service them.\\n# export HBASE_SLAVE_SLEEP=0.1\\n\\n# Tell HBase whether it should manage it's own instance of Zookeeper or not.\\nexport HBASE_MANAGES_ZK=false\\n\\n{% if security_enabled %}\\nexport HBASE_OPTS=\\\"$HBASE_OPTS -XX:+UseConcMarkSweepGC -XX:ErrorFile={{log_dir}}/hs_err_pid%p.log -Djava.security.auth.login.config={{client_jaas_config_file}}\\\"\\nexport HBASE_MASTER_OPTS=\\\"$HBASE_MASTER_OPTS -Xmx{{master_heapsize}} -Djava.security.auth.login.config={{master_jaas_config_file}}\\\"\\nexport HBASE_REGIONSERVER_OPTS=\\\"$HBASE_REGIONSERVER_OPTS -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70  -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}} -Djava.security.auth.login.config={{regionserver_jaas_config_file}}\\\"\\n{% else %}\\nexport HBASE_OPTS=\\\"$HBASE_OPTS -XX:+UseConcMarkSweepGC -XX:ErrorFile={{log_dir}}/hs_err_pid%p.log\\\"\\nexport HBASE_MASTER_OPTS=\\\"$HBASE_MASTER_OPTS -Xmx{{master_heapsize}}\\\"\\nexport HBASE_REGIONSERVER_OPTS=\\\"$HBASE_REGIONSERVER_OPTS -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70  -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}}\\\"\\n{% endif %}\",\n                \"hbase_log_dir\": \"/var/log/hbase\",\n                \"hbase_master_heapsize\": \"1024m\",\n                \"hbase_pid_dir\": \"/var/run/hbase\",\n                \"hbase_regionserver_heapsize\": \"1024m\",\n                \"hbase_regionserver_xmn_max\": \"512\",\n                \"hbase_regionserver_xmn_ratio\": \"0.2\",\n                \"hbase_user\": \"hbase\"\n            }\n        },\n        {\n            \"hbase-log4j\": {\n                \"content\": \"\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#     http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing, software\\n# distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n# See the License for the specific language governing permissions and\\n# limitations under the License.\\n\\n\\n# Define some default values that can be overridden by system properties\\nhbase.root.logger=INFO,console\\nhbase.security.logger=INFO,console\\nhbase.log.dir=.\\nhbase.log.file=hbase.log\\n\\n# Define the root logger to the system property \\\"hbase.root.logger\\\".\\nlog4j.rootLogger=${hbase.root.logger}\\n\\n# Logging Threshold\\nlog4j.threshold=ALL\\n\\n#\\n# Daily Rolling File Appender\\n#\\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.DRFA.File=${hbase.log.dir}/${hbase.log.file}\\n\\n# Rollver at midnight\\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\\n\\n# 30-day backup\\n#log4j.appender.DRFA.MaxBackupIndex=30\\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\\n\\n# Pattern format: Date LogLevel LoggerName LogMessage\\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\\n\\n# Rolling File Appender properties\\nhbase.log.maxfilesize=256MB\\nhbase.log.maxbackupindex=20\\n\\n# Rolling File Appender\\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\\nlog4j.appender.RFA.File=${hbase.log.dir}/${hbase.log.file}\\n\\nlog4j.appender.RFA.MaxFileSize=${hbase.log.maxfilesize}\\nlog4j.appender.RFA.MaxBackupIndex=${hbase.log.maxbackupindex}\\n\\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\\n\\n#\\n# Security audit appender\\n#\\nhbase.security.log.file=SecurityAuth.audit\\nhbase.security.log.maxfilesize=256MB\\nhbase.security.log.maxbackupindex=20\\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\\nlog4j.appender.RFAS.File=${hbase.log.dir}/${hbase.security.log.file}\\nlog4j.appender.RFAS.MaxFileSize=${hbase.security.log.maxfilesize}\\nlog4j.appender.RFAS.MaxBackupIndex=${hbase.security.log.maxbackupindex}\\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\\nlog4j.category.SecurityLogger=${hbase.security.logger}\\nlog4j.additivity.SecurityLogger=false\\n#log4j.logger.SecurityLogger.org.apache.hadoop.hbase.security.access.AccessController=TRACE\\n\\n#\\n# Null Appender\\n#\\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\\n\\n#\\n# console\\n# Add \\\"console\\\" to rootlogger above if you want to use this\\n#\\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\\nlog4j.appender.console.target=System.err\\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\\n\\n# Custom Logging levels\\n\\nlog4j.logger.org.apache.zookeeper=INFO\\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\\nlog4j.logger.org.apache.hadoop.hbase=DEBUG\\n# Make these two classes INFO-level. Make them DEBUG to see more zk debug.\\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZKUtil=INFO\\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher=INFO\\n#log4j.logger.org.apache.hadoop.dfs=DEBUG\\n# Set this class to log INFO only otherwise its OTT\\n# Enable this to get detailed connection error/retry logging.\\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=TRACE\\n\\n\\n# Uncomment this line to enable tracing on _every_ RPC call (this can be a lot of output)\\n#log4j.logger.org.apache.hadoop.ipc.HBaseServer.trace=DEBUG\\n\\n# Uncomment the below if you want to remove logging of client region caching'\\n# and scan of .META. messages\\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=INFO\\n# log4j.logger.org.apache.hadoop.hbase.client.MetaScanner=INFO\"\n            }\n        },\n        {\n            \"hbase-policy\": {\n                \"security.admin.protocol.acl\": \"*\",\n                \"security.client.protocol.acl\": \"*\",\n                \"security.masterregion.protocol.acl\": \"*\"\n            }\n        },\n        {\n            \"hbase-site\": {\n                \"dfs.domain.socket.path\": \"/var/lib/hadoop-hdfs/dn_socket\",\n                \"hbase.client.keyvalue.maxsize\": \"10485760\",\n                \"hbase.client.scanner.caching\": \"100\",\n                \"hbase.cluster.distributed\": \"true\",\n                \"hbase.coprocessor.master.classes\": \"\",\n                \"hbase.coprocessor.region.classes\": \"\",\n                \"hbase.defaults.for.version.skip\": \"true\",\n                \"hbase.hregion.majorcompaction\": \"604800000\",\n                \"hbase.hregion.majorcompaction.jitter\": \"0.50\",\n                \"hbase.hregion.max.filesize\": \"10737418240\",\n                \"hbase.hregion.memstore.block.multiplier\": \"4\",\n                \"hbase.hregion.memstore.flush.size\": \"134217728\",\n                \"hbase.hregion.memstore.mslab.enabled\": \"true\",\n                \"hbase.hstore.blockingStoreFiles\": \"10\",\n                \"hbase.hstore.compactionThreshold\": \"3\",\n                \"hbase.local.dir\": \"${hbase.tmp.dir}/local\",\n                \"hbase.master.info.bindAddress\": \"0.0.0.0\",\n                \"hbase.master.info.port\": \"60010\",\n                \"hbase.master.port\": \"60000\",\n                \"hbase.regionserver.global.memstore.lowerLimit\": \"0.38\",\n                \"hbase.regionserver.global.memstore.upperLimit\": \"0.4\",\n                \"hbase.regionserver.handler.count\": \"60\",\n                \"hbase.regionserver.info.port\": \"60030\",\n                \"hbase.rootdir\": \"hdfs://%HOSTGROUP::host_group_1%:8020/apps/hbase/data\",\n                \"hbase.security.authentication\": \"simple\",\n                \"hbase.security.authorization\": \"false\",\n                \"hbase.superuser\": \"hbase\",\n                \"hbase.tmp.dir\": \"/hadoop/hbase\",\n                \"hbase.zookeeper.property.clientPort\": \"2181\",\n                \"hbase.zookeeper.quorum\": \"%HOSTGROUP::host_group_1%\",\n                \"hbase.zookeeper.useMulti\": \"true\",\n                \"hfile.block.cache.size\": \"0.40\",\n                \"zookeeper.session.timeout\": \"30000\",\n                \"zookeeper.znode.parent\": \"/hbase-unsecure\"\n            }\n        },\n        {\n            \"hcat-env\": {\n                \"content\": \"\\n      # Licensed to the Apache Software Foundation (ASF) under one\\n      # or more contributor license agreements. See the NOTICE file\\n      # distributed with this work for additional information\\n      # regarding copyright ownership. The ASF licenses this file\\n      # to you under the Apache License, Version 2.0 (the\\n      # \\\"License\\\"); you may not use this file except in compliance\\n      # with the License. You may obtain a copy of the License at\\n      #\\n      # http://www.apache.org/licenses/LICENSE-2.0\\n      #\\n      # Unless required by applicable law or agreed to in writing, software\\n      # distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n      # See the License for the specific language governing permissions and\\n      # limitations under the License.\\n\\n      JAVA_HOME={{java64_home}}\\n      HCAT_PID_DIR={{hcat_pid_dir}}/\\n      HCAT_LOG_DIR={{hcat_log_dir}}/\\n      HCAT_CONF_DIR={{hcat_conf_dir}}\\n      HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\\n      #DBROOT is the path where the connector jars are downloaded\\n      DBROOT={{hcat_dbroot}}\\n      USER={{hcat_user}}\\n      METASTORE_PORT={{hive_metastore_port}}\"\n            }\n        },\n        {\n            \"hdfs-log4j\": {\n                \"content\": \"\\n#\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#  http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing,\\n# software distributed under the License is distributed on an\\n# \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n# KIND, either express or implied.  See the License for the\\n# specific language governing permissions and limitations\\n# under the License.\\n#\\n\\n\\n# Define some default values that can be overridden by system properties\\n# To change daemon root logger use hadoop_root_logger in hadoop-env\\nhadoop.root.logger=INFO,console\\nhadoop.log.dir=.\\nhadoop.log.file=hadoop.log\\n\\n\\n# Define the root logger to the system property \\\"hadoop.root.logger\\\".\\nlog4j.rootLogger=${hadoop.root.logger}, EventCounter\\n\\n# Logging Threshold\\nlog4j.threshhold=ALL\\n\\n#\\n# Daily Rolling File Appender\\n#\\n\\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.DRFA.File=${hadoop.log.dir}/${hadoop.log.file}\\n\\n# Rollver at midnight\\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\\n\\n# 30-day backup\\n#log4j.appender.DRFA.MaxBackupIndex=30\\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\\n\\n# Pattern format: Date LogLevel LoggerName LogMessage\\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\\n# Debugging Pattern format\\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\\n\\n\\n#\\n# console\\n# Add \\\"console\\\" to rootlogger above if you want to use this\\n#\\n\\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\\nlog4j.appender.console.target=System.err\\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\\n\\n#\\n# TaskLog Appender\\n#\\n\\n#Default values\\nhadoop.tasklog.taskid=null\\nhadoop.tasklog.iscleanup=false\\nhadoop.tasklog.noKeepSplits=4\\nhadoop.tasklog.totalLogFileSize=100\\nhadoop.tasklog.purgeLogSplits=true\\nhadoop.tasklog.logsRetainHours=12\\n\\nlog4j.appender.TLA=org.apache.hadoop.mapred.TaskLogAppender\\nlog4j.appender.TLA.taskId=${hadoop.tasklog.taskid}\\nlog4j.appender.TLA.isCleanup=${hadoop.tasklog.iscleanup}\\nlog4j.appender.TLA.totalLogFileSize=${hadoop.tasklog.totalLogFileSize}\\n\\nlog4j.appender.TLA.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.TLA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\\n\\n#\\n#Security audit appender\\n#\\nhadoop.security.logger=INFO,console\\nhadoop.security.log.maxfilesize=256MB\\nhadoop.security.log.maxbackupindex=20\\nlog4j.category.SecurityLogger=${hadoop.security.logger}\\nhadoop.security.log.file=SecurityAuth.audit\\nlog4j.appender.DRFAS=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.DRFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\\nlog4j.appender.DRFAS.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.DRFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\\nlog4j.appender.DRFAS.DatePattern=.yyyy-MM-dd\\n\\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\\nlog4j.appender.RFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\\nlog4j.appender.RFAS.MaxFileSize=${hadoop.security.log.maxfilesize}\\nlog4j.appender.RFAS.MaxBackupIndex=${hadoop.security.log.maxbackupindex}\\n\\n#\\n# hdfs audit logging\\n#\\nhdfs.audit.logger=INFO,console\\nlog4j.logger.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=${hdfs.audit.logger}\\nlog4j.additivity.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=false\\nlog4j.appender.DRFAAUDIT=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.DRFAAUDIT.File=${hadoop.log.dir}/hdfs-audit.log\\nlog4j.appender.DRFAAUDIT.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.DRFAAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\\nlog4j.appender.DRFAAUDIT.DatePattern=.yyyy-MM-dd\\n\\n#\\n# mapred audit logging\\n#\\nmapred.audit.logger=INFO,console\\nlog4j.logger.org.apache.hadoop.mapred.AuditLogger=${mapred.audit.logger}\\nlog4j.additivity.org.apache.hadoop.mapred.AuditLogger=false\\nlog4j.appender.MRAUDIT=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.MRAUDIT.File=${hadoop.log.dir}/mapred-audit.log\\nlog4j.appender.MRAUDIT.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.MRAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\\nlog4j.appender.MRAUDIT.DatePattern=.yyyy-MM-dd\\n\\n#\\n# Rolling File Appender\\n#\\n\\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\\nlog4j.appender.RFA.File=${hadoop.log.dir}/${hadoop.log.file}\\n\\n# Logfile size and and 30-day backups\\nlog4j.appender.RFA.MaxFileSize=256MB\\nlog4j.appender.RFA.MaxBackupIndex=10\\n\\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} - %m%n\\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\\n\\n\\n# Custom Logging levels\\n\\nhadoop.metrics.log.level=INFO\\n#log4j.logger.org.apache.hadoop.mapred.JobTracker=DEBUG\\n#log4j.logger.org.apache.hadoop.mapred.TaskTracker=DEBUG\\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\\nlog4j.logger.org.apache.hadoop.metrics2=${hadoop.metrics.log.level}\\n\\n# Jets3t library\\nlog4j.logger.org.jets3t.service.impl.rest.httpclient.RestS3Service=ERROR\\n\\n#\\n# Null Appender\\n# Trap security logger on the hadoop client side\\n#\\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\\n\\n#\\n# Event Counter Appender\\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\\n#\\nlog4j.appender.EventCounter=org.apache.hadoop.log.metrics.EventCounter\\n\\n# Removes \\\"deprecated\\\" messages\\nlog4j.logger.org.apache.hadoop.conf.Configuration.deprecation=WARN\\n\\n#\\n# HDFS block state change log from block manager\\n#\\n# Uncomment the following to suppress normal block state change\\n# messages from BlockManager in NameNode.\\n#log4j.logger.BlockStateChange=WARN\"\n            }\n        },\n        {\n            \"hdfs-site\": {\n                \"dfs.block.access.token.enable\": \"true\",\n                \"dfs.blockreport.initialDelay\": \"120\",\n                \"dfs.blocksize\": \"134217728\",\n                \"dfs.client.read.shortcircuit\": \"true\",\n                \"dfs.client.read.shortcircuit.streams.cache.size\": \"4096\",\n                \"dfs.cluster.administrators\": \" hdfs\",\n                \"dfs.datanode.address\": \"0.0.0.0:50010\",\n                \"dfs.datanode.balance.bandwidthPerSec\": \"6250000\",\n                \"dfs.datanode.data.dir\": \"/hadoop/hdfs/data\",\n                \"dfs.datanode.data.dir.perm\": \"750\",\n                \"dfs.datanode.du.reserved\": \"1073741824\",\n                \"dfs.datanode.failed.volumes.tolerated\": \"0\",\n                \"dfs.datanode.http.address\": \"0.0.0.0:50075\",\n                \"dfs.datanode.https.address\": \"0.0.0.0:50475\",\n                \"dfs.datanode.ipc.address\": \"0.0.0.0:8010\",\n                \"dfs.datanode.max.transfer.threads\": \"16384\",\n                \"dfs.domain.socket.path\": \"/var/lib/hadoop-hdfs/dn_socket\",\n                \"dfs.heartbeat.interval\": \"3\",\n                \"dfs.hosts.exclude\": \"/etc/hadoop/conf/dfs.exclude\",\n                \"dfs.http.policy\": \"HTTP_ONLY\",\n                \"dfs.https.port\": \"50470\",\n                \"dfs.journalnode.edits.dir\": \"/hadoop/hdfs/journalnode\",\n                \"dfs.journalnode.http-address\": \"0.0.0.0:8480\",\n                \"dfs.namenode.accesstime.precision\": \"0\",\n                \"dfs.namenode.avoid.read.stale.datanode\": \"true\",\n                \"dfs.namenode.avoid.write.stale.datanode\": \"true\",\n                \"dfs.namenode.checkpoint.dir\": \"/hadoop/hdfs/namesecondary\",\n                \"dfs.namenode.checkpoint.edits.dir\": \"${dfs.namenode.checkpoint.dir}\",\n                \"dfs.namenode.checkpoint.period\": \"21600\",\n                \"dfs.namenode.checkpoint.txns\": \"1000000\",\n                \"dfs.namenode.handler.count\": \"40\",\n                \"dfs.namenode.http-address\": \"%HOSTGROUP::host_group_1%:50070\",\n                \"dfs.namenode.https-address\": \"%HOSTGROUP::host_group_1%:50470\",\n                \"dfs.namenode.name.dir\": \"/hadoop/hdfs/namenode\",\n                \"dfs.namenode.name.dir.restore\": \"true\",\n                \"dfs.namenode.safemode.threshold-pct\": \"1.0f\",\n                \"dfs.namenode.secondary.http-address\": \"%HOSTGROUP::host_group_1%:50090\",\n                \"dfs.namenode.stale.datanode.interval\": \"30000\",\n                \"dfs.namenode.startup.delay.block.deletion.sec\": \"3600\",\n                \"dfs.namenode.write.stale.datanode.ratio\": \"1.0f\",\n                \"dfs.permissions.enabled\": \"true\",\n                \"dfs.permissions.superusergroup\": \"hdfs\",\n                \"dfs.replication\": \"3\",\n                \"dfs.replication.max\": \"50\",\n                \"dfs.support.append\": \"true\",\n                \"dfs.webhdfs.enabled\": \"true\",\n                \"fs.permissions.umask-mode\": \"022\"\n            }\n        },\n        {\n            \"hive-env\": {\n                \"content\": \"\\n if [ \\\"$SERVICE\\\" = \\\"cli\\\" ]; then\\n   if [ -z \\\"$DEBUG\\\" ]; then\\n     export HADOOP_OPTS=\\\"$HADOOP_OPTS -XX:NewRatio=12 -Xms10m -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:+UseParNewGC -XX:-UseGCOverheadLimit\\\"\\n   else\\n     export HADOOP_OPTS=\\\"$HADOOP_OPTS -XX:NewRatio=12 -Xms10m -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:-UseGCOverheadLimit\\\"\\n   fi\\n fi\\n\\n# The heap size of the jvm stared by hive shell script can be controlled via:\\n\\nexport HADOOP_HEAPSIZE=\\\"{{hive_heapsize}}\\\"\\nexport HADOOP_CLIENT_OPTS=\\\"-Xmx${HADOOP_HEAPSIZE}m $HADOOP_CLIENT_OPTS\\\"\\n\\n# Larger heap size may be required when running queries over large number of files or partitions.\\n# By default hive shell scripts use a heap size of 256 (MB).  Larger heap size would also be\\n# appropriate for hive server (hwi etc).\\n\\n\\n# Set HADOOP_HOME to point to a specific hadoop install directory\\nHADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\\n\\n# Hive Configuration Directory can be controlled by:\\nexport HIVE_CONF_DIR={{hive_config_dir}}\\n\\n# Folder containing extra libraries required for hive compilation/execution can be controlled by:\\nif [ \\\"${HIVE_AUX_JARS_PATH}\\\" != \\\"\\\" ]; then\\n  export HIVE_AUX_JARS_PATH=${HIVE_AUX_JARS_PATH}\\nelif [ -d \\\"/usr/hdp/current/hive-webhcat/share/hcatalog\\\" ]; then\\n  export HIVE_AUX_JARS_PATH=/usr/hdp/current/hive-webhcat/share/hcatalog\\nfi\\n\\nexport METASTORE_PORT={{hive_metastore_port}}\",\n                \"hcat_log_dir\": \"/var/log/webhcat\",\n                \"hcat_pid_dir\": \"/var/run/webhcat\",\n                \"hcat_user\": \"hcat\",\n                \"hive_ambari_database\": \"MySQL\",\n                \"hive_database\": \"New MySQL Database\",\n                \"hive_database_name\": \"hive\",\n                \"hive_database_type\": \"mysql\",\n                \"hive_hostname\": \"%HOSTGROUP::host_group_1%\",\n                \"hive_log_dir\": \"/var/log/hive\",\n                \"hive_metastore_port\": \"9083\",\n                \"hive_pid_dir\": \"/var/run/hive\",\n                \"hive_user\": \"hive\",\n                \"webhcat_user\": \"hcat\"\n            }\n        },\n        {\n            \"hive-exec-log4j\": {\n                \"content\": \"\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#     http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing, software\\n# distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n# See the License for the specific language governing permissions and\\n# limitations under the License.\\n\\n# Define some default values that can be overridden by system properties\\n\\nhive.log.threshold=ALL\\nhive.root.logger=INFO,FA\\nhive.log.dir=${java.io.tmpdir}/${user.name}\\nhive.query.id=hadoop\\nhive.log.file=${hive.query.id}.log\\n\\n# Define the root logger to the system property \\\"hadoop.root.logger\\\".\\nlog4j.rootLogger=${hive.root.logger}, EventCounter\\n\\n# Logging Threshold\\nlog4j.threshhold=${hive.log.threshold}\\n\\n#\\n# File Appender\\n#\\n\\nlog4j.appender.FA=org.apache.log4j.FileAppender\\nlog4j.appender.FA.File=${hive.log.dir}/${hive.log.file}\\nlog4j.appender.FA.layout=org.apache.log4j.PatternLayout\\n\\n# Pattern format: Date LogLevel LoggerName LogMessage\\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\\n# Debugging Pattern format\\nlog4j.appender.FA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\\n\\n\\n#\\n# console\\n# Add \\\"console\\\" to rootlogger above if you want to use this\\n#\\n\\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\\nlog4j.appender.console.target=System.err\\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\\n\\n#custom logging levels\\n#log4j.logger.xxx=DEBUG\\n\\n#\\n# Event Counter Appender\\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\\n#\\nlog4j.appender.EventCounter=org.apache.hadoop.hive.shims.HiveEventCounter\\n\\n\\nlog4j.category.DataNucleus=ERROR,FA\\nlog4j.category.Datastore=ERROR,FA\\nlog4j.category.Datastore.Schema=ERROR,FA\\nlog4j.category.JPOX.Datastore=ERROR,FA\\nlog4j.category.JPOX.Plugin=ERROR,FA\\nlog4j.category.JPOX.MetaData=ERROR,FA\\nlog4j.category.JPOX.Query=ERROR,FA\\nlog4j.category.JPOX.General=ERROR,FA\\nlog4j.category.JPOX.Enhancer=ERROR,FA\\n\\n\\n# Silence useless ZK logs\\nlog4j.logger.org.apache.zookeeper.server.NIOServerCnxn=WARN,FA\\nlog4j.logger.org.apache.zookeeper.ClientCnxnSocketNIO=WARN,FA\"\n            }\n        },\n        {\n            \"hive-log4j\": {\n                \"content\": \"\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#     http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing, software\\n# distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n# See the License for the specific language governing permissions and\\n# limitations under the License.\\n\\n# Define some default values that can be overridden by system properties\\nhive.log.threshold=ALL\\nhive.root.logger=INFO,DRFA\\nhive.log.dir=${java.io.tmpdir}/${user.name}\\nhive.log.file=hive.log\\n\\n# Define the root logger to the system property \\\"hadoop.root.logger\\\".\\nlog4j.rootLogger=${hive.root.logger}, EventCounter\\n\\n# Logging Threshold\\nlog4j.threshold=${hive.log.threshold}\\n\\n#\\n# Daily Rolling File Appender\\n#\\n# Use the PidDailyerRollingFileAppend class instead if you want to use separate log files\\n# for different CLI session.\\n#\\n# log4j.appender.DRFA=org.apache.hadoop.hive.ql.log.PidDailyRollingFileAppender\\n\\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\\n\\nlog4j.appender.DRFA.File=${hive.log.dir}/${hive.log.file}\\n\\n# Rollver at midnight\\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\\n\\n# 30-day backup\\n#log4j.appender.DRFA.MaxBackupIndex=30\\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\\n\\n# Pattern format: Date LogLevel LoggerName LogMessage\\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\\n# Debugging Pattern format\\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t]: %c{2} (%F:%M(%L)) - %m%n\\n\\n\\n#\\n# console\\n# Add \\\"console\\\" to rootlogger above if you want to use this\\n#\\n\\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\\nlog4j.appender.console.target=System.err\\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} [%t]: %p %c{2}: %m%n\\nlog4j.appender.console.encoding=UTF-8\\n\\n#custom logging levels\\n#log4j.logger.xxx=DEBUG\\n\\n#\\n# Event Counter Appender\\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\\n#\\nlog4j.appender.EventCounter=org.apache.hadoop.hive.shims.HiveEventCounter\\n\\n\\nlog4j.category.DataNucleus=ERROR,DRFA\\nlog4j.category.Datastore=ERROR,DRFA\\nlog4j.category.Datastore.Schema=ERROR,DRFA\\nlog4j.category.JPOX.Datastore=ERROR,DRFA\\nlog4j.category.JPOX.Plugin=ERROR,DRFA\\nlog4j.category.JPOX.MetaData=ERROR,DRFA\\nlog4j.category.JPOX.Query=ERROR,DRFA\\nlog4j.category.JPOX.General=ERROR,DRFA\\nlog4j.category.JPOX.Enhancer=ERROR,DRFA\\n\\n\\n# Silence useless ZK logs\\nlog4j.logger.org.apache.zookeeper.server.NIOServerCnxn=WARN,DRFA\\nlog4j.logger.org.apache.zookeeper.ClientCnxnSocketNIO=WARN,DRFA\"\n            }\n        },\n        {\n            \"kafka-broker\": {\n                \"auto.create.topics.enable\": \"true\",\n                \"controlled.shutdown.enable\": \"false\",\n                \"controlled.shutdown.max.retries\": \"3\",\n                \"controlled.shutdown.retry.backoff.ms\": \"5000\",\n                \"controller.message.queue.size\": \"10\",\n                \"controller.socket.timeout.ms\": \"30000\",\n                \"default.replication.factor\": \"1\",\n                \"fetch.purgatory.purge.interval.requests\": \"10000\",\n                \"kafka.ganglia.metrics.group\": \"kafka\",\n                \"kafka.ganglia.metrics.host\": \"%HOSTGROUP::host_group_1%\",\n                \"kafka.ganglia.metrics.port\": \"8671\",\n                \"kafka.ganglia.metrics.reporter.enabled\": \"true\",\n                \"kafka.metrics.reporters\": \"kafka.ganglia.KafkaGangliaMetricsReporter\",\n                \"log.cleanup.interval.mins\": \"10\",\n                \"log.dirs\": \"/kafka-logs\",\n                \"log.flush.interval.messages\": \"10000\",\n                \"log.flush.interval.ms\": \"3000\",\n                \"log.flush.scheduler.interval.ms\": \"3000\",\n                \"log.index.interval.bytes\": \"4096\",\n                \"log.index.size.max.bytes\": \"10485760\",\n                \"log.retention.bytes\": \"-1\",\n                \"log.retention.hours\": \"168\",\n                \"log.roll.hours\": \"168\",\n                \"log.segment.bytes\": \"1073741824\",\n                \"message.max.bytes\": \"1000000\",\n                \"num.io.threads\": \"8\",\n                \"num.network.threads\": \"3\",\n                \"num.partitions\": \"1\",\n                \"num.replica.fetchers\": \"1\",\n                \"port\": \"6667\",\n                \"producer.purgatory.purge.interval.requests\": \"10000\",\n                \"queued.max.requests\": \"500\",\n                \"replica.fetch.max.bytes\": \"1048576\",\n                \"replica.fetch.min.bytes\": \"1\",\n                \"replica.fetch.wait.max.ms\": \"500\",\n                \"replica.high.watermark.checkpoint.interval.ms\": \"5000\",\n                \"replica.lag.max.messages\": \"4000\",\n                \"replica.lag.time.max.ms\": \"10000\",\n                \"replica.socket.receive.buffer.bytes\": \"65536\",\n                \"replica.socket.timeout.ms\": \"30000\",\n                \"socket.receive.buffer.bytes\": \"102400\",\n                \"socket.request.max.bytes\": \"104857600\",\n                \"socket.send.buffer.bytes\": \"102400\",\n                \"zookeeper.connect\": \"%HOSTGROUP::host_group_1%:2181\",\n                \"zookeeper.connection.timeout.ms\": \"6000\",\n                \"zookeeper.session.timeout.ms\": \"6000\",\n                \"zookeeper.sync.time.ms\": \"2000\"\n            }\n        },\n        {\n            \"kafka-env\": {\n                \"content\": \"\\n#!/bin/bash\\n\\n# Set KAFKA specific environment variables here.\\n\\n# The java implementation to use.\\nexport JAVA_HOME={{java64_home}}\\nexport PATH=$PATH:$JAVA_HOME/bin\",\n                \"kafka_log_dir\": \"/var/log/kafka\",\n                \"kafka_pid_dir\": \"/var/run/kafka\",\n                \"kafka_user\": \"kafka\"\n            }\n        },\n        {\n            \"kafka-log4j\": {\n                \"content\": \"\\n#\\n#\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#   http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing,\\n# software distributed under the License is distributed on an\\n# \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n# KIND, either express or implied.  See the License for the\\n# specific language governing permissions and limitations\\n# under the License.\\n#\\n#\\n#\\nkafka.logs.dir=logs\\n\\nlog4j.rootLogger=INFO, stdout\\n\\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n\\n\\nlog4j.appender.kafkaAppender=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.kafkaAppender.DatePattern='.'yyyy-MM-dd-HH\\nlog4j.appender.kafkaAppender.File=${kafka.logs.dir}/server.log\\nlog4j.appender.kafkaAppender.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.kafkaAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\\n\\nlog4j.appender.stateChangeAppender=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.stateChangeAppender.DatePattern='.'yyyy-MM-dd-HH\\nlog4j.appender.stateChangeAppender.File=${kafka.logs.dir}/state-change.log\\nlog4j.appender.stateChangeAppender.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.stateChangeAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\\n\\nlog4j.appender.requestAppender=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.requestAppender.DatePattern='.'yyyy-MM-dd-HH\\nlog4j.appender.requestAppender.File=${kafka.logs.dir}/kafka-request.log\\nlog4j.appender.requestAppender.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.requestAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\\n\\nlog4j.appender.cleanerAppender=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.cleanerAppender.DatePattern='.'yyyy-MM-dd-HH\\nlog4j.appender.cleanerAppender.File=${kafka.logs.dir}/log-cleaner.log\\nlog4j.appender.cleanerAppender.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.cleanerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\\n\\nlog4j.appender.controllerAppender=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.controllerAppender.DatePattern='.'yyyy-MM-dd-HH\\nlog4j.appender.controllerAppender.File=${kafka.logs.dir}/controller.log\\nlog4j.appender.controllerAppender.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.controllerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\\n\\n# Turn on all our debugging info\\n#log4j.logger.kafka.producer.async.DefaultEventHandler=DEBUG, kafkaAppender\\n#log4j.logger.kafka.client.ClientUtils=DEBUG, kafkaAppender\\n#log4j.logger.kafka.perf=DEBUG, kafkaAppender\\n#log4j.logger.kafka.perf.ProducerPerformance$ProducerThread=DEBUG, kafkaAppender\\n#log4j.logger.org.I0Itec.zkclient.ZkClient=DEBUG\\nlog4j.logger.kafka=INFO, kafkaAppender\\nlog4j.logger.kafka.network.RequestChannel$=WARN, requestAppender\\nlog4j.additivity.kafka.network.RequestChannel$=false\\n\\n#log4j.logger.kafka.network.Processor=TRACE, requestAppender\\n#log4j.logger.kafka.server.KafkaApis=TRACE, requestAppender\\n#log4j.additivity.kafka.server.KafkaApis=false\\nlog4j.logger.kafka.request.logger=WARN, requestAppender\\nlog4j.additivity.kafka.request.logger=false\\n\\nlog4j.logger.kafka.controller=TRACE, controllerAppender\\nlog4j.additivity.kafka.controller=false\\n\\nlog4j.logger.kafka.log.LogCleaner=INFO, cleanerAppender\\nlog4j.additivity.kafka.log.LogCleaner=false\\n\\nlog4j.logger.state.change.logger=TRACE, stateChangeAppender\\nlog4j.additivity.state.change.logger=false\"\n            }\n        },\n        {\n            \"knox-env\": {\n                \"knox_group\": \"knox\",\n                \"knox_pid_dir\": \"/var/run/knox\",\n                \"knox_user\": \"knox\"\n            }\n        },\n        {\n            \"ldap-log4j\": {\n                \"content\": \"\\n        # Licensed to the Apache Software Foundation (ASF) under one\\n        # or more contributor license agreements.  See the NOTICE file\\n        # distributed with this work for additional information\\n        # regarding copyright ownership.  The ASF licenses this file\\n        # to you under the Apache License, Version 2.0 (the\\n        # \\\"License\\\"); you may not use this file except in compliance\\n        # with the License.  You may obtain a copy of the License at\\n        #\\n        #     http://www.apache.org/licenses/LICENSE-2.0\\n        #\\n        # Unless required by applicable law or agreed to in writing, software\\n        # distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n        # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n        # See the License for the specific language governing permissions and\\n        # limitations under the License.\\n\\n        app.log.dir=${launcher.dir}/../logs\\n        app.log.file=${launcher.name}.log\\n\\n        log4j.rootLogger=ERROR, drfa\\n        log4j.logger.org.apache.directory.server.ldap.LdapServer=INFO\\n        log4j.logger.org.apache.directory=WARN\\n\\n        log4j.appender.stdout=org.apache.log4j.ConsoleAppender\\n        log4j.appender.stdout.layout=org.apache.log4j.PatternLayout\\n        log4j.appender.stdout.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\\n\\n        log4j.appender.drfa=org.apache.log4j.DailyRollingFileAppender\\n        log4j.appender.drfa.File=${app.log.dir}/${app.log.file}\\n        log4j.appender.drfa.DatePattern=.yyyy-MM-dd\\n        log4j.appender.drfa.layout=org.apache.log4j.PatternLayout\\n        log4j.appender.drfa.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\"\n            }\n        },\n        {\n            \"mapred-env\": {\n                \"content\": \"\\n# export JAVA_HOME=/home/y/libexec/jdk1.6.0/\\n\\nexport HADOOP_JOB_HISTORYSERVER_HEAPSIZE={{jobhistory_heapsize}}\\n\\nexport HADOOP_MAPRED_ROOT_LOGGER=INFO,RFA\\n\\n#export HADOOP_JOB_HISTORYSERVER_OPTS=\\n#export HADOOP_MAPRED_LOG_DIR=\\\"\\\" # Where log files are stored.  $HADOOP_MAPRED_HOME/logs by default.\\n#export HADOOP_JHS_LOGGER=INFO,RFA # Hadoop JobSummary logger.\\n#export HADOOP_MAPRED_PID_DIR= # The pid files are stored. /tmp by default.\\n#export HADOOP_MAPRED_IDENT_STRING= #A string representing this instance of hadoop. $USER by default\\n#export HADOOP_MAPRED_NICENESS= #The scheduling priority for daemons. Defaults to 0.\\nexport HADOOP_OPTS=\\\"-Dhdp.version=$HDP_VERSION $HADOOP_OPTS\\\"\",\n                \"jobhistory_heapsize\": \"900\",\n                \"mapred_log_dir_prefix\": \"/var/log/hadoop-mapreduce\",\n                \"mapred_pid_dir_prefix\": \"/var/run/hadoop-mapreduce\",\n                \"mapred_user\": \"mapred\"\n            }\n        },\n        {\n            \"mapred-site\": {\n                \"mapreduce.admin.map.child.java.opts\": \"-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}\",\n                \"mapreduce.admin.reduce.child.java.opts\": \"-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}\",\n                \"mapreduce.admin.user.env\": \"LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-amd64-64\",\n                \"mapreduce.am.max-attempts\": \"2\",\n                \"mapreduce.application.classpath\": \"$PWD/mr-framework/hadoop/share/hadoop/mapreduce/*:$PWD/mr-framework/hadoop/share/hadoop/mapreduce/lib/*:$PWD/mr-framework/hadoop/share/hadoop/common/*:$PWD/mr-framework/hadoop/share/hadoop/common/lib/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/lib/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/lib/*:/usr/hdp/${hdp.version}/hadoop/lib/hadoop-lzo-0.6.0.${hdp.version}.jar:/etc/hadoop/conf/secure\",\n                \"mapreduce.application.framework.path\": \"/hdp/apps/${hdp.version}/mapreduce/mapreduce.tar.gz#mr-framework\",\n                \"mapreduce.cluster.administrators\": \" hadoop\",\n                \"mapreduce.framework.name\": \"yarn\",\n                \"mapreduce.job.emit-timeline-data\": \"false\",\n                \"mapreduce.job.reduce.slowstart.completedmaps\": \"0.05\",\n                \"mapreduce.jobhistory.address\": \"%HOSTGROUP::host_group_1%:10020\",\n                \"mapreduce.jobhistory.bind-host\": \"0.0.0.0\",\n                \"mapreduce.jobhistory.done-dir\": \"/mr-history/done\",\n                \"mapreduce.jobhistory.intermediate-done-dir\": \"/mr-history/tmp\",\n                \"mapreduce.jobhistory.webapp.address\": \"%HOSTGROUP::host_group_1%:19888\",\n                \"mapreduce.map.java.opts\": \"-Xmx819m\",\n                \"mapreduce.map.log.level\": \"INFO\",\n                \"mapreduce.map.memory.mb\": \"1024\",\n                \"mapreduce.map.output.compress\": \"false\",\n                \"mapreduce.map.sort.spill.percent\": \"0.7\",\n                \"mapreduce.map.speculative\": \"false\",\n                \"mapreduce.output.fileoutputformat.compress\": \"false\",\n                \"mapreduce.output.fileoutputformat.compress.type\": \"BLOCK\",\n                \"mapreduce.reduce.input.buffer.percent\": \"0.0\",\n                \"mapreduce.reduce.java.opts\": \"-Xmx819m\",\n                \"mapreduce.reduce.log.level\": \"INFO\",\n                \"mapreduce.reduce.memory.mb\": \"1024\",\n                \"mapreduce.reduce.shuffle.fetch.retry.enabled\": \"1\",\n                \"mapreduce.reduce.shuffle.fetch.retry.interval-ms\": \"1000\",\n                \"mapreduce.reduce.shuffle.fetch.retry.timeout-ms\": \"30000\",\n                \"mapreduce.reduce.shuffle.input.buffer.percent\": \"0.7\",\n                \"mapreduce.reduce.shuffle.merge.percent\": \"0.66\",\n                \"mapreduce.reduce.shuffle.parallelcopies\": \"30\",\n                \"mapreduce.reduce.speculative\": \"false\",\n                \"mapreduce.shuffle.port\": \"13562\",\n                \"mapreduce.task.io.sort.factor\": \"100\",\n                \"mapreduce.task.io.sort.mb\": \"410\",\n                \"mapreduce.task.timeout\": \"300000\",\n                \"yarn.app.mapreduce.am.admin-command-opts\": \"-Dhdp.version=${hdp.version}\",\n                \"yarn.app.mapreduce.am.command-opts\": \"-Xmx819m -Dhdp.version=${hdp.version}\",\n                \"yarn.app.mapreduce.am.log.level\": \"INFO\",\n                \"yarn.app.mapreduce.am.resource.mb\": \"1024\",\n                \"yarn.app.mapreduce.am.staging-dir\": \"/user\"\n            }\n        },\n        {\n            \"nagios-env\": {\n                \"nagios_group\": \"nagios\",\n                \"nagios_user\": \"nagios\",\n                \"nagios_web_login\": \"nagiosadmin\"\n            }\n        },\n        {\n            \"oozie-env\": {\n                \"content\": \"\\n#!/bin/bash\\n\\nif [ -d \\\"/usr/lib/bigtop-tomcat\\\" ]; then\\n  export OOZIE_CONFIG=${OOZIE_CONFIG:-/etc/oozie/conf}\\n  export CATALINA_BASE=${CATALINA_BASE:-{{oozie_server_dir}}}\\n  export CATALINA_TMPDIR=${CATALINA_TMPDIR:-/var/tmp/oozie}\\n  export OOZIE_CATALINA_HOME=/usr/lib/bigtop-tomcat\\nfi\\n\\n#Set JAVA HOME\\nexport JAVA_HOME={{java_home}}\\n\\nexport JRE_HOME=${JAVA_HOME}\\n\\n# Set Oozie specific environment variables here.\\n\\n# Settings for the Embedded Tomcat that runs Oozie\\n# Java System properties for Oozie should be specified in this variable\\n#\\n# export CATALINA_OPTS=\\n\\n# Oozie configuration file to load from Oozie configuration directory\\n#\\n# export OOZIE_CONFIG_FILE=oozie-site.xml\\n\\n# Oozie logs directory\\n#\\nexport OOZIE_LOG={{oozie_log_dir}}\\n\\n# Oozie pid directory\\n#\\nexport CATALINA_PID={{pid_file}}\\n\\n#Location of the data for oozie\\nexport OOZIE_DATA={{oozie_data_dir}}\\n\\n# Oozie Log4J configuration file to load from Oozie configuration directory\\n#\\n# export OOZIE_LOG4J_FILE=oozie-log4j.properties\\n\\n# Reload interval of the Log4J configuration file, in seconds\\n#\\n# export OOZIE_LOG4J_RELOAD=10\\n\\n# The port Oozie server runs\\n#\\nexport OOZIE_HTTP_PORT={{oozie_server_port}}\\n\\n# The admin port Oozie server runs\\n#\\nexport OOZIE_ADMIN_PORT={{oozie_server_admin_port}}\\n\\n# The host name Oozie server runs on\\n#\\n# export OOZIE_HTTP_HOSTNAME=`hostname -f`\\n\\n# The base URL for callback URLs to Oozie\\n#\\n# export OOZIE_BASE_URL=\\\"http://${OOZIE_HTTP_HOSTNAME}:${OOZIE_HTTP_PORT}/oozie\\\"\\nexport JAVA_LIBRARY_PATH={{hadoop_lib_home}}/native/Linux-amd64-64\\n\\n# At least 1 minute of retry time to account for server downtime during\\n# upgrade/downgrade\\nexport OOZIE_CLIENT_OPTS=\\\"${OOZIE_CLIENT_OPTS} -Doozie.connection.retry.count=5 \\\"\\n\\n# This is needed so that Oozie does not run into OOM or GC Overhead limit\\n# exceeded exceptions. If the oozie server is handling large number of\\n# workflows/coordinator jobs, the memory settings may need to be revised\\nexport CATALINA_OPTS=\\\"${CATALINA_OPTS} -Xmx2048m -XX:MaxPermSize=256m \\\"\",\n                \"oozie_admin_port\": \"11001\",\n                \"oozie_ambari_database\": \"MySQL\",\n                \"oozie_data_dir\": \"/hadoop/oozie/data\",\n                \"oozie_database\": \"New Derby Database\",\n                \"oozie_derby_database\": \"Derby\",\n                \"oozie_existing_mysql_database\": \"MySQL\",\n                \"oozie_existing_oracle_database\": \"Oracle\",\n                \"oozie_existing_oracle_host\": \"\",\n                \"oozie_existing_postgresql_database\": \"PostgreSQL\",\n                \"oozie_existing_postgresql_host\": \"\",\n                \"oozie_heapsize\": \"2048m\",\n                \"oozie_log_dir\": \"/var/log/oozie\",\n                \"oozie_permsize\": \"256m\",\n                \"oozie_pid_dir\": \"/var/run/oozie\",\n                \"oozie_user\": \"oozie\"\n            }\n        },\n        {\n            \"oozie-log4j\": {\n                \"content\": \"\\n#\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#    http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing, software\\n# distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n# See the License for the specific language governing permissions and\\n# limitations under the License. See accompanying LICENSE file.\\n#\\n\\n# If the Java System property 'oozie.log.dir' is not defined at Oozie start up time\\n# XLogService sets its value to '${oozie.home}/logs'\\n\\nlog4j.appender.oozie=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.oozie.DatePattern='.'yyyy-MM-dd-HH\\nlog4j.appender.oozie.File=${oozie.log.dir}/oozie.log\\nlog4j.appender.oozie.Append=true\\nlog4j.appender.oozie.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.oozie.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - SERVER[${oozie.instance.id}] %m%n\\n\\nlog4j.appender.oozieops=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.oozieops.DatePattern='.'yyyy-MM-dd\\nlog4j.appender.oozieops.File=${oozie.log.dir}/oozie-ops.log\\nlog4j.appender.oozieops.Append=true\\nlog4j.appender.oozieops.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.oozieops.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\\n\\nlog4j.appender.oozieinstrumentation=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.oozieinstrumentation.DatePattern='.'yyyy-MM-dd\\nlog4j.appender.oozieinstrumentation.File=${oozie.log.dir}/oozie-instrumentation.log\\nlog4j.appender.oozieinstrumentation.Append=true\\nlog4j.appender.oozieinstrumentation.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.oozieinstrumentation.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\\n\\nlog4j.appender.oozieaudit=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.oozieaudit.DatePattern='.'yyyy-MM-dd\\nlog4j.appender.oozieaudit.File=${oozie.log.dir}/oozie-audit.log\\nlog4j.appender.oozieaudit.Append=true\\nlog4j.appender.oozieaudit.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.oozieaudit.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\\n\\nlog4j.appender.openjpa=org.apache.log4j.DailyRollingFileAppender\\nlog4j.appender.openjpa.DatePattern='.'yyyy-MM-dd\\nlog4j.appender.openjpa.File=${oozie.log.dir}/oozie-jpa.log\\nlog4j.appender.openjpa.Append=true\\nlog4j.appender.openjpa.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.openjpa.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\\n\\nlog4j.logger.openjpa=INFO, openjpa\\nlog4j.logger.oozieops=INFO, oozieops\\nlog4j.logger.oozieinstrumentation=ALL, oozieinstrumentation\\nlog4j.logger.oozieaudit=ALL, oozieaudit\\nlog4j.logger.org.apache.oozie=INFO, oozie\\nlog4j.logger.org.apache.hadoop=WARN, oozie\\nlog4j.logger.org.mortbay=WARN, oozie\\nlog4j.logger.org.hsqldb=WARN, oozie\\nlog4j.logger.org.apache.hadoop.security.authentication.server=INFO, oozie\"\n            }\n        },\n        {\n            \"pig-env\": {\n                \"content\": \"\\nJAVA_HOME={{java64_home}}\\nHADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\\n\\nif [ -d \\\"/usr/lib/tez\\\" ]; then\\n  PIG_OPTS=\\\"$PIG_OPTS -Dmapreduce.framework.name=yarn\\\"\\nfi\"\n            }\n        },\n        {\n            \"pig-log4j\": {\n                \"content\": \"\\n#\\n#\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#   http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing,\\n# software distributed under the License is distributed on an\\n# \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n# KIND, either express or implied.  See the License for the\\n# specific language governing permissions and limitations\\n# under the License.\\n#\\n#\\n#\\n\\n# ***** Set root logger level to DEBUG and its only appender to A.\\nlog4j.logger.org.apache.pig=info, A\\n\\n# ***** A is set to be a ConsoleAppender.\\nlog4j.appender.A=org.apache.log4j.ConsoleAppender\\n# ***** A uses PatternLayout.\\nlog4j.appender.A.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.A.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n\"\n            }\n        },\n        {\n            \"pig-properties\": {\n                \"content\": \"\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#   http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing,\\n# software distributed under the License is distributed on an\\n# \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n# KIND, either express or implied.  See the License for the\\n# specific language governing permissions and limitations\\n# under the License.\\n\\n# Pig default configuration file. All values can be overwritten by pig.properties and command line arguments.\\n# see bin/pig -help\\n\\n# brief logging (no timestamps)\\nbrief=false\\n\\n# debug level, INFO is default\\ndebug=INFO\\n\\n# verbose print all log messages to screen (default to print only INFO and above to screen)\\nverbose=false\\n\\n# exectype local|mapreduce, mapreduce is default\\nexectype=mapreduce\\n\\n# Enable insertion of information about script into hadoop job conf \\npig.script.info.enabled=true\\n\\n# Do not spill temp files smaller than this size (bytes)\\npig.spill.size.threshold=5000000\\n\\n# EXPERIMENT: Activate garbage collection when spilling a file bigger than this size (bytes)\\n# This should help reduce the number of files being spilled.\\npig.spill.gc.activation.size=40000000\\n\\n# the following two parameters are to help estimate the reducer number\\npig.exec.reducers.bytes.per.reducer=1000000000\\npig.exec.reducers.max=999\\n\\n# Temporary location to store the intermediate data.\\npig.temp.dir=/tmp/\\n\\n# Threshold for merging FRJoin fragment files\\npig.files.concatenation.threshold=100\\npig.optimistic.files.concatenation=false;\\n\\npig.disable.counter=false\\n\\n# Avoid pig failures when multiple jobs write to the same location\\npig.location.check.strict=false\\n\\nhcat.bin=/usr/bin/hcat\"\n            }\n        },\n        {\n            \"slider-env\": {\n                \"content\": \"\\n# Set Slider-specific environment variables here.\\n\\n# The only required environment variable is JAVA_HOME.  All others are\\n# optional.  When running a distributed configuration it is best to\\n# set JAVA_HOME in this file, so that it is correctly defined on\\n# remote nodes.\\n\\n# The java implementation to use.  Required.\\nexport JAVA_HOME={{java64_home}}\\n# The hadoop conf directory.  Optional as slider-client.xml can be edited to add properties.\\nexport HADOOP_CONF_DIR={{hadoop_conf_dir}}\"\n            }\n        },\n        {\n            \"slider-log4j\": {\n                \"content\": \"\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#     http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing, software\\n# distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n# See the License for the specific language governing permissions and\\n# limitations under the License.\\n\\n\\n# Define some default values that can be overridden by system properties\\nlog4j.rootLogger=INFO,stdout\\nlog4j.threshhold=ALL\\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\\n\\n# log layout skips stack-trace creation operations by avoiding line numbers and method\\nlog4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} [%t] %-5p %c{2} - %m%n\\n\\n# debug edition is much more expensive\\n#log4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} [%t] %-5p %c{2} (%F:%M(%L)) - %m%n\\n\\n\\nlog4j.appender.subprocess=org.apache.log4j.ConsoleAppender\\nlog4j.appender.subprocess.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.subprocess.layout.ConversionPattern=[%c{1}]: %m%n\\n#log4j.logger.org.apache.slider.yarn.appmaster.SliderAppMasterer.master=INFO,subprocess\\n\\n# for debugging Slider\\n#log4j.logger.org.apache.slider=DEBUG\\n#log4j.logger.org.apache.slider=DEBUG\\n\\n# uncomment to debug service lifecycle issues\\n#log4j.logger.org.apache.hadoop.yarn.service.launcher=DEBUG\\n#log4j.logger.org.apache.hadoop.yarn.service=DEBUG\\n\\n# uncomment for YARN operations\\n#log4j.logger.org.apache.hadoop.yarn.client=DEBUG\\n\\n# uncomment this to debug security problems\\n#log4j.logger.org.apache.hadoop.security=DEBUG\\n\\n#crank back on some noise\\nlog4j.logger.org.apache.hadoop.util.NativeCodeLoader=ERROR\\nlog4j.logger.org.apache.hadoop.hdfs=WARN\\n\\n\\nlog4j.logger.org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor=WARN\\nlog4j.logger.org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl=WARN\\nlog4j.logger.org.apache.zookeeper=WARN\"\n            }\n        },\n        {\n            \"sqoop-env\": {\n                \"content\": \"\\n# Set Hadoop-specific environment variables here.\\n\\n#Set path to where bin/hadoop is available\\n#Set path to where bin/hadoop is available\\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\\n\\n#set the path to where bin/hbase is available\\nexport HBASE_HOME=${HBASE_HOME:-{{hbase_home}}}\\n\\n#Set the path to where bin/hive is available\\nexport HIVE_HOME=${HIVE_HOME:-{{hive_home}}}\\n\\n#Set the path for where zookeper config dir is\\nexport ZOOCFGDIR=${ZOOCFGDIR:-/etc/zookeeper/conf}\\n\\n# add libthrift in hive to sqoop class path first so hive imports work\\nexport SQOOP_USER_CLASSPATH=\\\"`ls ${HIVE_HOME}/lib/libthrift-*.jar 2> /dev/null`:${SQOOP_USER_CLASSPATH}\\\"\",\n                \"sqoop_user\": \"sqoop\"\n            }\n        },\n        {\n            \"storm-env\": {\n                \"content\": \"\\n#!/bin/bash\\n\\n# Set Storm specific environment variables here.\\n\\n# The java implementation to use.\\nexport JAVA_HOME={{java64_home}}\\n\\n# export STORM_CONF_DIR=\\\"\\\"\\nSTORM_HOME=/usr/hdp/current/storm-client\",\n                \"storm_log_dir\": \"/var/log/storm\",\n                \"storm_pid_dir\": \"/var/run/storm\",\n                \"storm_user\": \"storm\"\n            }\n        },\n        {\n            \"storm-site\": {\n                \"_storm.min.ruid\": \"null\",\n                \"_storm.thrift.nonsecure.transport\": \"backtype.storm.security.auth.SimpleTransportPlugin\",\n                \"_storm.thrift.secure.transport\": \"backtype.storm.security.auth.kerberos.KerberosSaslTransportPlugin\",\n                \"dev.zookeeper.path\": \"/tmp/dev-storm-zookeeper\",\n                \"drpc.childopts\": \"-Xmx768m _JAAS_PLACEHOLDER\",\n                \"drpc.invocations.port\": \"3773\",\n                \"drpc.port\": \"3772\",\n                \"drpc.queue.size\": \"128\",\n                \"drpc.request.timeout.secs\": \"600\",\n                \"drpc.worker.threads\": \"64\",\n                \"java.library.path\": \"/usr/local/lib:/opt/local/lib:/usr/lib:/usr/hdp/current/storm-client/lib\",\n                \"logviewer.appender.name\": \"A1\",\n                \"logviewer.childopts\": \"-Xmx128m _JAAS_PLACEHOLDER\",\n                \"logviewer.port\": \"8000\",\n                \"nimbus.childopts\": \"-Xmx1024m _JAAS_PLACEHOLDER -javaagent:/usr/hdp/current/storm-nimbus/contrib/storm-jmxetric/lib/jmxetric-1.0.4.jar=host=%HOSTGROUP::host_group_1%,port=8649,wireformat31x=true,mode=multicast,config=/usr/hdp/current/storm-nimbus/contrib/storm-jmxetric/conf/jmxetric-conf.xml,process=Nimbus_JVM\",\n                \"nimbus.cleanup.inbox.freq.secs\": \"600\",\n                \"nimbus.file.copy.expiration.secs\": \"600\",\n                \"nimbus.host\": \"%HOSTGROUP::host_group_1%\",\n                \"nimbus.inbox.jar.expiration.secs\": \"3600\",\n                \"nimbus.monitor.freq.secs\": \"10\",\n                \"nimbus.reassign\": \"true\",\n                \"nimbus.supervisor.timeout.secs\": \"60\",\n                \"nimbus.task.launch.secs\": \"120\",\n                \"nimbus.task.timeout.secs\": \"30\",\n                \"nimbus.thrift.max_buffer_size\": \"1048576\",\n                \"nimbus.thrift.port\": \"6627\",\n                \"nimbus.topology.validator\": \"backtype.storm.nimbus.DefaultTopologyValidator\",\n                \"storm.cluster.mode\": \"distributed\",\n                \"storm.local.dir\": \"/hadoop/storm\",\n                \"storm.local.mode.zmq\": \"false\",\n                \"storm.messaging.netty.buffer_size\": \"5242880\",\n                \"storm.messaging.netty.client_worker_threads\": \"1\",\n                \"storm.messaging.netty.max_retries\": \"30\",\n                \"storm.messaging.netty.max_wait_ms\": \"1000\",\n                \"storm.messaging.netty.min_wait_ms\": \"100\",\n                \"storm.messaging.netty.server_worker_threads\": \"1\",\n                \"storm.messaging.transport\": \"backtype.storm.messaging.netty.Context\",\n                \"storm.zookeeper.connection.timeout\": \"15000\",\n                \"storm.zookeeper.port\": \"2181\",\n                \"storm.zookeeper.retry.interval\": \"1000\",\n                \"storm.zookeeper.retry.intervalceiling.millis\": \"30000\",\n                \"storm.zookeeper.retry.times\": \"5\",\n                \"storm.zookeeper.root\": \"/storm\",\n                \"storm.zookeeper.servers\": \"['%HOSTGROUP::host_group_1%']\",\n                \"storm.zookeeper.session.timeout\": \"20000\",\n                \"supervisor.childopts\": \"-Xmx256m _JAAS_PLACEHOLDER -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=56431 -javaagent:/usr/hdp/current/storm-supervisor/contrib/storm-jmxetric/lib/jmxetric-1.0.4.jar=host=%HOSTGROUP::host_group_1%,port=8650,wireformat31x=true,mode=multicast,config=/usr/hdp/current/storm-supervisor/contrib/storm-jmxetric/conf/jmxetric-conf.xml,process=Supervisor_JVM\",\n                \"supervisor.heartbeat.frequency.secs\": \"5\",\n                \"supervisor.monitor.frequency.secs\": \"3\",\n                \"supervisor.slots.ports\": \"[6700, 6701]\",\n                \"supervisor.worker.start.timeout.secs\": \"120\",\n                \"supervisor.worker.timeout.secs\": \"30\",\n                \"task.heartbeat.frequency.secs\": \"3\",\n                \"task.refresh.poll.secs\": \"10\",\n                \"topology.acker.executors\": \"null\",\n                \"topology.builtin.metrics.bucket.size.secs\": \"60\",\n                \"topology.debug\": \"false\",\n                \"topology.disruptor.wait.strategy\": \"com.lmax.disruptor.BlockingWaitStrategy\",\n                \"topology.enable.message.timeouts\": \"true\",\n                \"topology.error.throttle.interval.secs\": \"10\",\n                \"topology.executor.receive.buffer.size\": \"1024\",\n                \"topology.executor.send.buffer.size\": \"1024\",\n                \"topology.fall.back.on.java.serialization\": \"true\",\n                \"topology.kryo.factory\": \"backtype.storm.serialization.DefaultKryoFactory\",\n                \"topology.max.error.report.per.interval\": \"5\",\n                \"topology.max.spout.pending\": \"null\",\n                \"topology.max.task.parallelism\": \"null\",\n                \"topology.message.timeout.secs\": \"30\",\n                \"topology.optimize\": \"true\",\n                \"topology.receiver.buffer.size\": \"8\",\n                \"topology.skip.missing.kryo.registrations\": \"false\",\n                \"topology.sleep.spout.wait.strategy.time.ms\": \"1\",\n                \"topology.spout.wait.strategy\": \"backtype.storm.spout.SleepSpoutWaitStrategy\",\n                \"topology.state.synchronization.timeout.secs\": \"60\",\n                \"topology.stats.sample.rate\": \"0.05\",\n                \"topology.tick.tuple.freq.secs\": \"null\",\n                \"topology.transfer.buffer.size\": \"1024\",\n                \"topology.trident.batch.emit.interval.millis\": \"500\",\n                \"topology.tuple.serializer\": \"backtype.storm.serialization.types.ListDelegateSerializer\",\n                \"topology.worker.childopts\": \"null\",\n                \"topology.worker.shared.thread.pool.size\": \"4\",\n                \"topology.workers\": \"1\",\n                \"transactional.zookeeper.port\": \"null\",\n                \"transactional.zookeeper.root\": \"/transactional\",\n                \"transactional.zookeeper.servers\": \"null\",\n                \"ui.childopts\": \"-Xmx768m _JAAS_PLACEHOLDER\",\n                \"ui.port\": \"8744\",\n                \"worker.childopts\": \"-Xmx768m _JAAS_PLACEHOLDER -javaagent:/usr/hdp/current/storm-client/contrib/storm-jmxetric/lib/jmxetric-1.0.4.jar=host=%HOSTGROUP::host_group_1%,port=8650,wireformat31x=true,mode=multicast,config=/usr/hdp/current/storm-client/contrib/storm-jmxetric/conf/jmxetric-conf.xml,process=Worker_%ID%_JVM\",\n                \"worker.heartbeat.frequency.secs\": \"1\",\n                \"zmq.hwm\": \"0\",\n                \"zmq.linger.millis\": \"5000\",\n                \"zmq.threads\": \"1\"\n            }\n        },\n        {\n            \"tez-env\": {\n                \"content\": \"\\n# Tez specific configuration\\nexport TEZ_CONF_DIR={{config_dir}}\\n\\n# Set HADOOP_HOME to point to a specific hadoop install directory\\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\\n\\n# The java implementation to use.\\nexport JAVA_HOME={{java64_home}}\",\n                \"tez_user\": \"tez\"\n            }\n        },\n        {\n            \"tez-site\": {\n                \"tez.am.am-rm.heartbeat.interval-ms.max\": \"250\",\n                \"tez.am.container.idle.release-timeout-max.millis\": \"20000\",\n                \"tez.am.container.idle.release-timeout-min.millis\": \"10000\",\n                \"tez.am.container.reuse.enabled\": \"true\",\n                \"tez.am.container.reuse.locality.delay-allocation-millis\": \"250\",\n                \"tez.am.container.reuse.non-local-fallback.enabled\": \"false\",\n                \"tez.am.container.reuse.rack-fallback.enabled\": \"true\",\n                \"tez.am.launch.cluster-default.cmd-opts\": \"-server -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}\",\n                \"tez.am.launch.cmd-opts\": \"-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA -XX:+UseParallelGC\",\n                \"tez.am.launch.env\": \"LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-amd64-64\",\n                \"tez.am.log.level\": \"INFO\",\n                \"tez.am.max.app.attempts\": \"2\",\n                \"tez.am.maxtaskfailures.per.node\": \"10\",\n                \"tez.am.resource.memory.mb\": \"2048\",\n                \"tez.cluster.additional.classpath.prefix\": \"/usr/hdp/${hdp.version}/hadoop/lib/hadoop-lzo-0.6.0.${hdp.version}.jar:/etc/hadoop/conf/secure\",\n                \"tez.counters.max\": \"2000\",\n                \"tez.counters.max.groups\": \"1000\",\n                \"tez.generate.debug.artifacts\": \"false\",\n                \"tez.grouping.max-size\": \"1073741824\",\n                \"tez.grouping.min-size\": \"16777216\",\n                \"tez.grouping.split-waves\": \"1.7\",\n                \"tez.history.logging.service.class\": \"org.apache.tez.dag.history.logging.ats.ATSHistoryLoggingService\",\n                \"tez.lib.uris\": \"/hdp/apps/${hdp.version}/tez/tez.tar.gz\",\n                \"tez.runtime.compress\": \"true\",\n                \"tez.runtime.compress.codec\": \"org.apache.hadoop.io.compress.SnappyCodec\",\n                \"tez.runtime.io.sort.mb\": \"409\",\n                \"tez.runtime.unordered.output.buffer.size-mb\": \"76\",\n                \"tez.session.am.dag.submit.timeout.secs\": \"300\",\n                \"tez.session.client.timeout.secs\": \"-1\",\n                \"tez.shuffle-vertex-manager.max-src-fraction\": \"0.4\",\n                \"tez.shuffle-vertex-manager.min-src-fraction\": \"0.2\",\n                \"tez.staging-dir\": \"/tmp/${user.name}/staging\",\n                \"tez.task.am.heartbeat.counter.interval-ms.max\": \"4000\",\n                \"tez.task.get-task.sleep.interval-ms.max\": \"200\",\n                \"tez.task.launch.cluster-default.cmd-opts\": \"-server -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}\",\n                \"tez.task.launch.cmd-opts\": \"-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA -XX:+UseParallelGC\",\n                \"tez.task.launch.env\": \"LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-amd64-64\",\n                \"tez.task.max-events-per-heartbeat\": \"500\",\n                \"tez.task.resource.memory.mb\": \"1024\"\n            }\n        },\n        {\n            \"topology\": {\n                \"content\": \"\\n        <topology>\\n\\n            <gateway>\\n\\n                <provider>\\n                    <role>authentication</role>\\n                    <name>ShiroProvider</name>\\n                    <enabled>true</enabled>\\n                    <param>\\n                        <name>sessionTimeout</name>\\n                        <value>30</value>\\n                    </param>\\n                    <param>\\n                        <name>main.ldapRealm</name>\\n                        <value>org.apache.hadoop.gateway.shirorealm.KnoxLdapRealm</value>\\n                    </param>\\n                    <param>\\n                        <name>main.ldapRealm.userDnTemplate</name>\\n                        <value>uid={0},ou=people,dc=hadoop,dc=apache,dc=org</value>\\n                    </param>\\n                    <param>\\n                        <name>main.ldapRealm.contextFactory.url</name>\\n                        <value>ldap://{{knox_host_name}}:33389</value>\\n                    </param>\\n                    <param>\\n                        <name>main.ldapRealm.contextFactory.authenticationMechanism</name>\\n                        <value>simple</value>\\n                    </param>\\n                    <param>\\n                        <name>urls./**</name>\\n                        <value>authcBasic</value>\\n                    </param>\\n                </provider>\\n\\n                <provider>\\n                    <role>identity-assertion</role>\\n                    <name>Default</name>\\n                    <enabled>true</enabled>\\n                </provider>\\n\\n            </gateway>\\n\\n            <service>\\n                <role>NAMENODE</role>\\n                <url>hdfs://{{namenode_host}}:{{namenode_rpc_port}}</url>\\n            </service>\\n\\n            <service>\\n                <role>JOBTRACKER</role>\\n                <url>rpc://{{rm_host}}:{{jt_rpc_port}}</url>\\n            </service>\\n\\n            <service>\\n                <role>WEBHDFS</role>\\n                <url>http://{{namenode_host}}:{{namenode_http_port}}/webhdfs</url>\\n            </service>\\n\\n            <service>\\n                <role>WEBHCAT</role>\\n                <url>http://{{webhcat_server_host}}:{{templeton_port}}/templeton</url>\\n            </service>\\n\\n            <service>\\n                <role>OOZIE</role>\\n                <url>http://{{oozie_server_host}}:{{oozie_server_port}}/oozie</url>\\n            </service>\\n\\n            <service>\\n                <role>WEBHBASE</role>\\n                <url>http://{{hbase_master_host}}:{{hbase_master_port}}</url>\\n            </service>\\n\\n            <service>\\n                <role>HIVE</role>\\n                <url>http://{{hive_server_host}}:{{hive_http_port}}/{{hive_http_path}}</url>\\n            </service>\\n\\n            <service>\\n                <role>RESOURCEMANAGER</role>\\n                <url>http://{{rm_host}}:{{rm_port}}/ws</url>\\n            </service>\\n        </topology>\"\n            }\n        },\n        {\n            \"users-ldif\": {\n                \"content\": \"\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#     http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing, software\\n# distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n# See the License for the specific language governing permissions and\\n# limitations under the License.\\n\\nversion: 1\\n\\n# Please replace with site specific values\\ndn: dc=hadoop,dc=apache,dc=org\\nobjectclass: organization\\nobjectclass: dcObject\\no: Hadoop\\ndc: hadoop\\n\\n# Entry for a sample people container\\n# Please replace with site specific values\\ndn: ou=people,dc=hadoop,dc=apache,dc=org\\nobjectclass:top\\nobjectclass:organizationalUnit\\nou: people\\n\\n# Entry for a sample end user\\n# Please replace with site specific values\\ndn: uid=guest,ou=people,dc=hadoop,dc=apache,dc=org\\nobjectclass:top\\nobjectclass:person\\nobjectclass:organizationalPerson\\nobjectclass:inetOrgPerson\\ncn: Guest\\nsn: User\\nuid: guest\\nuserPassword:guest-password\\n\\n# entry for sample user admin\\ndn: uid=admin,ou=people,dc=hadoop,dc=apache,dc=org\\nobjectclass:top\\nobjectclass:person\\nobjectclass:organizationalPerson\\nobjectclass:inetOrgPerson\\ncn: Admin\\nsn: Admin\\nuid: admin\\nuserPassword:admin-password\\n\\n# entry for sample user sam\\ndn: uid=sam,ou=people,dc=hadoop,dc=apache,dc=org\\nobjectclass:top\\nobjectclass:person\\nobjectclass:organizationalPerson\\nobjectclass:inetOrgPerson\\ncn: sam\\nsn: sam\\nuid: sam\\nuserPassword:sam-password\\n\\n# entry for sample user tom\\ndn: uid=tom,ou=people,dc=hadoop,dc=apache,dc=org\\nobjectclass:top\\nobjectclass:person\\nobjectclass:organizationalPerson\\nobjectclass:inetOrgPerson\\ncn: tom\\nsn: tom\\nuid: tom\\nuserPassword:tom-password\\n\\n# create FIRST Level groups branch\\ndn: ou=groups,dc=hadoop,dc=apache,dc=org\\nobjectclass:top\\nobjectclass:organizationalUnit\\nou: groups\\ndescription: generic groups branch\\n\\n# create the analyst group under groups\\ndn: cn=analyst,ou=groups,dc=hadoop,dc=apache,dc=org\\nobjectclass:top\\nobjectclass: groupofnames\\ncn: analyst\\ndescription:analyst  group\\nmember: uid=sam,ou=people,dc=hadoop,dc=apache,dc=org\\nmember: uid=tom,ou=people,dc=hadoop,dc=apache,dc=org\\n\\n\\n# create the scientist group under groups\\ndn: cn=scientist,ou=groups,dc=hadoop,dc=apache,dc=org\\nobjectclass:top\\nobjectclass: groupofnames\\ncn: scientist\\ndescription: scientist group\\nmember: uid=sam,ou=people,dc=hadoop,dc=apache,dc=org\"\n            }\n        },\n        {\n            \"webhcat-env\": {\n                \"content\": \"\\n# The file containing the running pid\\nPID_FILE={{webhcat_pid_file}}\\n\\nTEMPLETON_LOG_DIR={{templeton_log_dir}}/\\n\\n\\nWEBHCAT_LOG_DIR={{templeton_log_dir}}/\\n\\n# The console error log\\nERROR_LOG={{templeton_log_dir}}/webhcat-console-error.log\\n\\n# The console log\\nCONSOLE_LOG={{templeton_log_dir}}/webhcat-console.log\\n\\n#TEMPLETON_JAR=templeton_jar_name\\n\\n#HADOOP_PREFIX=hadoop_prefix\\n\\n#HCAT_PREFIX=hive_prefix\\n\\n# Set HADOOP_HOME to point to a specific hadoop install directory\\nexport HADOOP_HOME={{hadoop_home}}\"\n            }\n        },\n        {\n            \"yarn-env\": {\n                \"apptimelineserver_heapsize\": \"1024\",\n                \"content\": \"\\nexport HADOOP_YARN_HOME={{hadoop_yarn_home}}\\nexport YARN_LOG_DIR={{yarn_log_dir_prefix}}/$USER\\nexport YARN_PID_DIR={{yarn_pid_dir_prefix}}/$USER\\nexport HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\\nexport JAVA_HOME={{java64_home}}\\n\\n# User for YARN daemons\\nexport HADOOP_YARN_USER=${HADOOP_YARN_USER:-yarn}\\n\\n# resolve links - $0 may be a softlink\\nexport YARN_CONF_DIR=\\\"${YARN_CONF_DIR:-$HADOOP_YARN_HOME/conf}\\\"\\n\\n# some Java parameters\\n# export JAVA_HOME=/home/y/libexec/jdk1.6.0/\\nif [ \\\"$JAVA_HOME\\\" != \\\"\\\" ]; then\\n  #echo \\\"run java in $JAVA_HOME\\\"\\n  JAVA_HOME=$JAVA_HOME\\nfi\\n\\nif [ \\\"$JAVA_HOME\\\" = \\\"\\\" ]; then\\n  echo \\\"Error: JAVA_HOME is not set.\\\"\\n  exit 1\\nfi\\n\\nJAVA=$JAVA_HOME/bin/java\\nJAVA_HEAP_MAX=-Xmx1000m\\n\\n# For setting YARN specific HEAP sizes please use this\\n# Parameter and set appropriately\\nYARN_HEAPSIZE={{yarn_heapsize}}\\n\\n# check envvars which might override default args\\nif [ \\\"$YARN_HEAPSIZE\\\" != \\\"\\\" ]; then\\n  JAVA_HEAP_MAX=\\\"-Xmx\\\"\\\"$YARN_HEAPSIZE\\\"\\\"m\\\"\\nfi\\n\\n# Resource Manager specific parameters\\n\\n# Specify the max Heapsize for the ResourceManager using a numerical value\\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\\n# the value to 1000.\\n# This value will be overridden by an Xmx setting specified in either YARN_OPTS\\n# and/or YARN_RESOURCEMANAGER_OPTS.\\n# If not specified, the default value will be picked from either YARN_HEAPMAX\\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\\nexport YARN_RESOURCEMANAGER_HEAPSIZE={{resourcemanager_heapsize}}\\n\\n# Specify the JVM options to be used when starting the ResourceManager.\\n# These options will be appended to the options specified as YARN_OPTS\\n# and therefore may override any similar flags set in YARN_OPTS\\n#export YARN_RESOURCEMANAGER_OPTS=\\n\\n# Node Manager specific parameters\\n\\n# Specify the max Heapsize for the NodeManager using a numerical value\\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\\n# the value to 1000.\\n# This value will be overridden by an Xmx setting specified in either YARN_OPTS\\n# and/or YARN_NODEMANAGER_OPTS.\\n# If not specified, the default value will be picked from either YARN_HEAPMAX\\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\\nexport YARN_NODEMANAGER_HEAPSIZE={{nodemanager_heapsize}}\\n\\n# Specify the max Heapsize for the HistoryManager using a numerical value\\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\\n# the value to 1024.\\n# This value will be overridden by an Xmx setting specified in either YARN_OPTS\\n# and/or YARN_HISTORYSERVER_OPTS.\\n# If not specified, the default value will be picked from either YARN_HEAPMAX\\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\\nexport YARN_HISTORYSERVER_HEAPSIZE={{apptimelineserver_heapsize}}\\n\\n# Specify the JVM options to be used when starting the NodeManager.\\n# These options will be appended to the options specified as YARN_OPTS\\n# and therefore may override any similar flags set in YARN_OPTS\\n#export YARN_NODEMANAGER_OPTS=\\n\\n# so that filenames w/ spaces are handled correctly in loops below\\nIFS=\\n\\n\\n# default log directory and file\\nif [ \\\"$YARN_LOG_DIR\\\" = \\\"\\\" ]; then\\n  YARN_LOG_DIR=\\\"$HADOOP_YARN_HOME/logs\\\"\\nfi\\nif [ \\\"$YARN_LOGFILE\\\" = \\\"\\\" ]; then\\n  YARN_LOGFILE='yarn.log'\\nfi\\n\\n# default policy file for service-level authorization\\nif [ \\\"$YARN_POLICYFILE\\\" = \\\"\\\" ]; then\\n  YARN_POLICYFILE=\\\"hadoop-policy.xml\\\"\\nfi\\n\\n# restore ordinary behaviour\\nunset IFS\\n\\n\\nYARN_OPTS=\\\"$YARN_OPTS -Dhadoop.log.dir=$YARN_LOG_DIR\\\"\\nYARN_OPTS=\\\"$YARN_OPTS -Dyarn.log.dir=$YARN_LOG_DIR\\\"\\nYARN_OPTS=\\\"$YARN_OPTS -Dhadoop.log.file=$YARN_LOGFILE\\\"\\nYARN_OPTS=\\\"$YARN_OPTS -Dyarn.log.file=$YARN_LOGFILE\\\"\\nYARN_OPTS=\\\"$YARN_OPTS -Dyarn.home.dir=$YARN_COMMON_HOME\\\"\\nYARN_OPTS=\\\"$YARN_OPTS -Dyarn.id.str=$YARN_IDENT_STRING\\\"\\nYARN_OPTS=\\\"$YARN_OPTS -Dhadoop.root.logger=${YARN_ROOT_LOGGER:-INFO,console}\\\"\\nYARN_OPTS=\\\"$YARN_OPTS -Dyarn.root.logger=${YARN_ROOT_LOGGER:-INFO,console}\\\"\\nif [ \\\"x$JAVA_LIBRARY_PATH\\\" != \\\"x\\\" ]; then\\n  YARN_OPTS=\\\"$YARN_OPTS -Djava.library.path=$JAVA_LIBRARY_PATH\\\"\\nfi\\nYARN_OPTS=\\\"$YARN_OPTS -Dyarn.policy.file=$YARN_POLICYFILE\\\"\",\n                \"min_user_id\": \"1000\",\n                \"nodemanager_heapsize\": \"1024\",\n                \"resourcemanager_heapsize\": \"1024\",\n                \"yarn_heapsize\": \"1024\",\n                \"yarn_log_dir_prefix\": \"/var/log/hadoop-yarn\",\n                \"yarn_pid_dir_prefix\": \"/var/run/hadoop-yarn\",\n                \"yarn_user\": \"yarn\"\n            }\n        },\n        {\n            \"yarn-log4j\": {\n                \"content\": \"\\n#Relative to Yarn Log Dir Prefix\\nyarn.log.dir=.\\n#\\n# Job Summary Appender\\n#\\n# Use following logger to send summary to separate file defined by\\n# hadoop.mapreduce.jobsummary.log.file rolled daily:\\n# hadoop.mapreduce.jobsummary.logger=INFO,JSA\\n#\\nhadoop.mapreduce.jobsummary.logger=${hadoop.root.logger}\\nhadoop.mapreduce.jobsummary.log.file=hadoop-mapreduce.jobsummary.log\\nlog4j.appender.JSA=org.apache.log4j.DailyRollingFileAppender\\n# Set the ResourceManager summary log filename\\nyarn.server.resourcemanager.appsummary.log.file=hadoop-mapreduce.jobsummary.log\\n# Set the ResourceManager summary log level and appender\\nyarn.server.resourcemanager.appsummary.logger=${hadoop.root.logger}\\n#yarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\\n\\n# To enable AppSummaryLogging for the RM,\\n# set yarn.server.resourcemanager.appsummary.logger to\\n# LEVEL,RMSUMMARY in hadoop-env.sh\\n\\n# Appender for ResourceManager Application Summary Log\\n# Requires the following properties to be set\\n#    - hadoop.log.dir (Hadoop Log directory)\\n#    - yarn.server.resourcemanager.appsummary.log.file (resource manager app summary log filename)\\n#    - yarn.server.resourcemanager.appsummary.logger (resource manager app summary log level and appender)\\nlog4j.appender.RMSUMMARY=org.apache.log4j.RollingFileAppender\\nlog4j.appender.RMSUMMARY.File=${yarn.log.dir}/${yarn.server.resourcemanager.appsummary.log.file}\\nlog4j.appender.RMSUMMARY.MaxFileSize=256MB\\nlog4j.appender.RMSUMMARY.MaxBackupIndex=20\\nlog4j.appender.RMSUMMARY.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.RMSUMMARY.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.JSA.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\\nlog4j.appender.JSA.DatePattern=.yyyy-MM-dd\\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\\nlog4j.logger.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=${yarn.server.resourcemanager.appsummary.logger}\\nlog4j.additivity.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=false\"\n            }\n        },\n        {\n            \"yarn-site\": {\n                \"hadoop.registry.rm.enabled\": \"true\",\n                \"hadoop.registry.zk.quorum\": \"%HOSTGROUP::host_group_1%:2181\",\n                \"yarn.acl.enable\": \"false\",\n                \"yarn.admin.acl\": \"\",\n                \"yarn.application.classpath\": \"$HADOOP_CONF_DIR,/usr/hdp/current/hadoop-client/*,/usr/hdp/current/hadoop-client/lib/*,/usr/hdp/current/hadoop-hdfs-client/*,/usr/hdp/current/hadoop-hdfs-client/lib/*,/usr/hdp/current/hadoop-yarn-client/*,/usr/hdp/current/hadoop-yarn-client/lib/*\",\n                \"yarn.client.nodemanager-connect.max-wait-ms\": \"900000\",\n                \"yarn.client.nodemanager-connect.retry-interval-ms\": \"10000\",\n                \"yarn.log-aggregation-enable\": \"true\",\n                \"yarn.log-aggregation.retain-seconds\": \"2592000\",\n                \"yarn.log.server.url\": \"http://%HOSTGROUP::host_group_1%:19888/jobhistory/logs\",\n                \"yarn.node-labels.fs-store.retry-policy-spec\": \"2000, 500\",\n                \"yarn.node-labels.fs-store.root-dir\": \"/system/yarn/node-labels\",\n                \"yarn.node-labels.manager-class\": \"org.apache.hadoop.yarn.server.resourcemanager.nodelabels.MemoryRMNodeLabelsManager\",\n                \"yarn.nodemanager.address\": \"0.0.0.0:45454\",\n                \"yarn.nodemanager.admin-env\": \"MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX\",\n                \"yarn.nodemanager.aux-services\": \"mapreduce_shuffle\",\n                \"yarn.nodemanager.aux-services.mapreduce_shuffle.class\": \"org.apache.hadoop.mapred.ShuffleHandler\",\n                \"yarn.nodemanager.bind-host\": \"0.0.0.0\",\n                \"yarn.nodemanager.container-executor.class\": \"org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor\",\n                \"yarn.nodemanager.container-monitor.interval-ms\": \"3000\",\n                \"yarn.nodemanager.delete.debug-delay-sec\": \"0\",\n                \"yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage\": \"90\",\n                \"yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb\": \"1000\",\n                \"yarn.nodemanager.disk-health-checker.min-healthy-disks\": \"0.25\",\n                \"yarn.nodemanager.health-checker.interval-ms\": \"135000\",\n                \"yarn.nodemanager.health-checker.script.timeout-ms\": \"60000\",\n                \"yarn.nodemanager.linux-container-executor.cgroups.hierarchy\": \"hadoop-yarn\",\n                \"yarn.nodemanager.linux-container-executor.cgroups.mount\": \"false\",\n                \"yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage\": \"false\",\n                \"yarn.nodemanager.linux-container-executor.group\": \"hadoop\",\n                \"yarn.nodemanager.linux-container-executor.resources-handler.class\": \"org.apache.hadoop.yarn.server.nodemanager.util.DefaultLCEResourcesHandler\",\n                \"yarn.nodemanager.local-dirs\": \"/hadoop/yarn/local\",\n                \"yarn.nodemanager.log-aggregation.compression-type\": \"gz\",\n                \"yarn.nodemanager.log-aggregation.debug-enabled\": \"false\",\n                \"yarn.nodemanager.log-aggregation.num-log-files-per-app\": \"30\",\n                \"yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds\": \"-1\",\n                \"yarn.nodemanager.log-dirs\": \"/hadoop/yarn/log\",\n                \"yarn.nodemanager.log.retain-second\": \"604800\",\n                \"yarn.nodemanager.recovery.dir\": \"/var/log/hadoop-yarn/nodemanager/recovery-state\",\n                \"yarn.nodemanager.recovery.enabled\": \"false\",\n                \"yarn.nodemanager.remote-app-log-dir\": \"/app-logs\",\n                \"yarn.nodemanager.remote-app-log-dir-suffix\": \"logs\",\n                \"yarn.nodemanager.resource.cpu-vcores\": \"4\",\n                \"yarn.nodemanager.resource.memory-mb\": \"6144\",\n                \"yarn.nodemanager.resource.percentage-physical-cpu-limit\": \"100\",\n                \"yarn.nodemanager.vmem-check-enabled\": \"false\",\n                \"yarn.nodemanager.vmem-pmem-ratio\": \"2.1\",\n                \"yarn.resourcemanager.address\": \"%HOSTGROUP::host_group_1%:8050\",\n                \"yarn.resourcemanager.admin.address\": \"%HOSTGROUP::host_group_1%:8141\",\n                \"yarn.resourcemanager.am.max-attempts\": \"2\",\n                \"yarn.resourcemanager.bind-host\": \"0.0.0.0\",\n                \"yarn.resourcemanager.connect.max-wait.ms\": \"900000\",\n                \"yarn.resourcemanager.connect.retry-interval.ms\": \"30000\",\n                \"yarn.resourcemanager.fs.state-store.retry-policy-spec\": \"2000, 500\",\n                \"yarn.resourcemanager.fs.state-store.uri\": \" \",\n                \"yarn.resourcemanager.ha.enabled\": \"false\",\n                \"yarn.resourcemanager.hostname\": \"%HOSTGROUP::host_group_1%\",\n                \"yarn.resourcemanager.nodes.exclude-path\": \"/etc/hadoop/conf/yarn.exclude\",\n                \"yarn.resourcemanager.recovery.enabled\": \"false\",\n                \"yarn.resourcemanager.resource-tracker.address\": \"%HOSTGROUP::host_group_1%:8025\",\n                \"yarn.resourcemanager.scheduler.address\": \"%HOSTGROUP::host_group_1%:8030\",\n                \"yarn.resourcemanager.scheduler.class\": \"org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler\",\n                \"yarn.resourcemanager.state-store.max-completed-applications\": \"${yarn.resourcemanager.max-completed-applications}\",\n                \"yarn.resourcemanager.store.class\": \"org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore\",\n                \"yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size\": \"10\",\n                \"yarn.resourcemanager.system-metrics-publisher.enabled\": \"true\",\n                \"yarn.resourcemanager.webapp.address\": \"%HOSTGROUP::host_group_1%:8088\",\n                \"yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled\": \"false\",\n                \"yarn.resourcemanager.work-preserving-recovery.enabled\": \"false\",\n                \"yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms\": \"10000\",\n                \"yarn.resourcemanager.zk-acl\": \"world:anyone:rwcda\",\n                \"yarn.resourcemanager.zk-address\": \"localhost:2181\",\n                \"yarn.resourcemanager.zk-num-retries\": \"1000\",\n                \"yarn.resourcemanager.zk-retry-interval-ms\": \"1000\",\n                \"yarn.resourcemanager.zk-state-store.parent-path\": \"/rmstore\",\n                \"yarn.resourcemanager.zk-timeout-ms\": \"10000\",\n                \"yarn.scheduler.maximum-allocation-mb\": \"6144\",\n                \"yarn.scheduler.minimum-allocation-mb\": \"1024\",\n                \"yarn.timeline-service.address\": \"%HOSTGROUP::host_group_1%:10200\",\n                \"yarn.timeline-service.bind-host\": \"0.0.0.0\",\n                \"yarn.timeline-service.client.max-retries\": \"30\",\n                \"yarn.timeline-service.client.retry-interval-ms\": \"1000\",\n                \"yarn.timeline-service.enabled\": \"true\",\n                \"yarn.timeline-service.generic-application-history.store-class\": \"org.apache.hadoop.yarn.server.applicationhistoryservice.NullApplicationHistoryStore\",\n                \"yarn.timeline-service.http-authentication.simple.anonymous.allowed\": \"true\",\n                \"yarn.timeline-service.http-authentication.type\": \"simple\",\n                \"yarn.timeline-service.leveldb-timeline-store.path\": \"/hadoop/yarn/timeline\",\n                \"yarn.timeline-service.leveldb-timeline-store.read-cache-size\": \"104857600\",\n                \"yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size\": \"10000\",\n                \"yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size\": \"10000\",\n                \"yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms\": \"300000\",\n                \"yarn.timeline-service.store-class\": \"org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore\",\n                \"yarn.timeline-service.ttl-enable\": \"true\",\n                \"yarn.timeline-service.ttl-ms\": \"2678400000\",\n                \"yarn.timeline-service.webapp.address\": \"%HOSTGROUP::host_group_1%:8188\",\n                \"yarn.timeline-service.webapp.https.address\": \"%HOSTGROUP::host_group_1%:8190\"\n            }\n        },\n        {\n            \"zoo.cfg\": {\n                \"clientPort\": \"2181\",\n                \"dataDir\": \"/hadoop/zookeeper\",\n                \"initLimit\": \"10\",\n                \"syncLimit\": \"5\",\n                \"tickTime\": \"2000\"\n            }\n        },\n        {\n            \"zookeeper-env\": {\n                \"content\": \"\\nexport JAVA_HOME={{java64_home}}\\nexport ZOOKEEPER_HOME={{zk_home}}\\nexport ZOO_LOG_DIR={{zk_log_dir}}\\nexport ZOOPIDFILE={{zk_pid_file}}\\nexport SERVER_JVMFLAGS={{zk_server_heapsize}}\\nexport JAVA=$JAVA_HOME/bin/java\\nexport CLASSPATH=$CLASSPATH:/usr/share/zookeeper/*\\n\\n{% if security_enabled %}\\nexport SERVER_JVMFLAGS=\\\"$SERVER_JVMFLAGS -Djava.security.auth.login.config={{zk_server_jaas_file}}\\\"\\nexport CLIENT_JVMFLAGS=\\\"$CLIENT_JVMFLAGS -Djava.security.auth.login.config={{zk_client_jaas_file}}\\\"\\n{% endif %}\",\n                \"zk_log_dir\": \"/var/log/zookeeper\",\n                \"zk_pid_dir\": \"/var/run/zookeeper\",\n                \"zk_user\": \"zookeeper\"\n            }\n        },\n        {\n            \"zookeeper-log4j\": {\n                \"content\": \"\\n#\\n#\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#   http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing,\\n# software distributed under the License is distributed on an\\n# \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n# KIND, either express or implied.  See the License for the\\n# specific language governing permissions and limitations\\n# under the License.\\n#\\n#\\n#\\n\\n#\\n# ZooKeeper Logging Configuration\\n#\\n\\n# DEFAULT: console appender only\\nlog4j.rootLogger=INFO, CONSOLE\\n\\n# Example with rolling log file\\n#log4j.rootLogger=DEBUG, CONSOLE, ROLLINGFILE\\n\\n# Example with rolling log file and tracing\\n#log4j.rootLogger=TRACE, CONSOLE, ROLLINGFILE, TRACEFILE\\n\\n#\\n# Log INFO level and above messages to the console\\n#\\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender\\nlog4j.appender.CONSOLE.Threshold=INFO\\nlog4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\\n\\n#\\n# Add ROLLINGFILE to rootLogger to get log file output\\n#    Log DEBUG level and above messages to a log file\\nlog4j.appender.ROLLINGFILE=org.apache.log4j.RollingFileAppender\\nlog4j.appender.ROLLINGFILE.Threshold=DEBUG\\nlog4j.appender.ROLLINGFILE.File=zookeeper.log\\n\\n# Max log file size of 10MB\\nlog4j.appender.ROLLINGFILE.MaxFileSize=10MB\\n# uncomment the next line to limit number of backup files\\n#log4j.appender.ROLLINGFILE.MaxBackupIndex=10\\n\\nlog4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout\\nlog4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\\n\\n\\n#\\n# Add TRACEFILE to rootLogger to get log file output\\n#    Log DEBUG level and above messages to a log file\\nlog4j.appender.TRACEFILE=org.apache.log4j.FileAppender\\nlog4j.appender.TRACEFILE.Threshold=TRACE\\nlog4j.appender.TRACEFILE.File=zookeeper_trace.log\\n\\nlog4j.appender.TRACEFILE.layout=org.apache.log4j.PatternLayout\\n### Notice we are including log4j's NDC here (%x)\\nlog4j.appender.TRACEFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L][%x] - %m%n\"\n            }\n        },\n        {\n            \"core-site\": {\n                \"fs.defaultFS\": \"hdfs://%HOSTGROUP::host_group_1%:8020\",\n                \"fs.trash.interval\": \"360\",\n                \"hadoop.http.authentication.simple.anonymous.allowed\": \"true\",\n                \"hadoop.proxyuser.falcon.groups\": \"*\",\n                \"hadoop.proxyuser.falcon.hosts\": \"*\",\n                \"hadoop.proxyuser.hcat.groups\": \"*\",\n                \"hadoop.proxyuser.hcat.hosts\": \"*\",\n                \"hadoop.proxyuser.hive.groups\": \"*\",\n                \"hadoop.proxyuser.hive.hosts\": \"*\",\n                \"hadoop.proxyuser.hue.groups\": \"*\",\n                \"hadoop.proxyuser.hue.hosts\": \"*\",\n                \"hadoop.proxyuser.oozie.groups\": \"*\",\n                \"hadoop.proxyuser.oozie.hosts\": \"*\",\n                \"hadoop.security.auth_to_local\": \"\\n        RULE:[2:$1@$0]([rn]m@.*)s/.*/yarn/\\n        RULE:[2:$1@$0](jhs@.*)s/.*/mapred/\\n        RULE:[2:$1@$0]([nd]n@.*)s/.*/hdfs/\\n        RULE:[2:$1@$0](hm@.*)s/.*/hbase/\\n        RULE:[2:$1@$0](rs@.*)s/.*/hbase/\\n        DEFAULT\",\n                \"hadoop.security.authentication\": \"simple\",\n                \"hadoop.security.authorization\": \"false\",\n                \"io.compression.codecs\": \"org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.DefaultCodec,org.apache.hadoop.io.compress.SnappyCodec\",\n                \"io.file.buffer.size\": \"131072\",\n                \"io.serializations\": \"org.apache.hadoop.io.serializer.WritableSerialization\",\n                \"ipc.client.connect.max.retries\": \"50\",\n                \"ipc.client.connection.maxidletime\": \"30000\",\n                \"ipc.client.idlethreshold\": \"8000\",\n                \"ipc.server.tcpnodelay\": \"true\",\n                \"mapreduce.jobtracker.webinterface.trusted\": \"false\",\n                \"proxyuser_group\": \"users\"\n            }\n        },\n        {\n            \"webhcat-site\": {\n                \"templeton.exec.timeout\": \"60000\",\n                \"templeton.hadoop\": \"/usr/hdp/current/hadoop-client/bin/hadoop\",\n                \"templeton.hadoop.conf.dir\": \"/etc/hadoop/conf\",\n                \"templeton.hcat\": \"/usr/hdp/current/hive-client/bin/hcat\",\n                \"templeton.hcat.home\": \"hive.tar.gz/hive/hcatalog\",\n                \"templeton.hive.archive\": \"hdfs:///hdp/apps/${hdp.version}/hive/hive.tar.gz\",\n                \"templeton.hive.home\": \"hive.tar.gz/hive\",\n                \"templeton.hive.path\": \"hive.tar.gz/hive/bin/hive\",\n                \"templeton.hive.properties\": \"hive.metastore.local=false, hive.metastore.uris=thrift://%HOSTGROUP::host_group_1%:9933, hive.metastore.sasl.enabled=false, hive.metastore.execute.setugi=true\",\n                \"templeton.jar\": \"/usr/hdp/current/hive-webhcat/share/webhcat/svr/lib/hive-webhcat-*.jar\",\n                \"templeton.libjars\": \"/usr/hdp/current/zookeeper-client/zookeeper.jar\",\n                \"templeton.override.enabled\": \"false\",\n                \"templeton.pig.archive\": \"hdfs:///hdp/apps/${hdp.version}/pig/pig.tar.gz\",\n                \"templeton.pig.path\": \"pig.tar.gz/pig/bin/pig\",\n                \"templeton.port\": \"50111\",\n                \"templeton.sqoop.archive\": \"hdfs:///hdp/apps/${hdp.version}/sqoop/sqoop.tar.gz\",\n                \"templeton.sqoop.home\": \"sqoop.tar.gz/sqoop\",\n                \"templeton.sqoop.path\": \"sqoop.tar.gz/sqoop/bin/sqoop\",\n                \"templeton.storage.class\": \"org.apache.hive.hcatalog.templeton.tool.ZooKeeperStorage\",\n                \"templeton.streaming.jar\": \"hdfs:///hdp/apps/${hdp.version}/mapreduce/hadoop-streaming.jar\",\n                \"templeton.zookeeper.hosts\": \"%HOSTGROUP::host_group_1%:2181\",\n                \"webhcat.proxyuser.hue.groups\": \"*\",\n                \"webhcat.proxyuser.hue.hosts\": \"*\"\n            }\n        },\n        {\n            \"hive-site\": {\n                \"ambari.hive.db.schema.name\": \"hive\",\n                \"datanucleus.cache.level2.type\": \"none\",\n                \"hive.auto.convert.join\": \"true\",\n                \"hive.auto.convert.join.noconditionaltask\": \"true\",\n                \"hive.auto.convert.join.noconditionaltask.size\": \"357564416\",\n                \"hive.auto.convert.sortmerge.join\": \"true\",\n                \"hive.auto.convert.sortmerge.join.noconditionaltask\": \"true\",\n                \"hive.auto.convert.sortmerge.join.to.mapjoin\": \"false\",\n                \"hive.cbo.enable\": \"true\",\n                \"hive.cli.print.header\": \"false\",\n                \"hive.cluster.delegation.token.store.class\": \"org.apache.hadoop.hive.thrift.ZooKeeperTokenStore\",\n                \"hive.cluster.delegation.token.store.zookeeper.connectString\": \"%HOSTGROUP::host_group_1%:2181\",\n                \"hive.cluster.delegation.token.store.zookeeper.znode\": \"/hive/cluster/delegation\",\n                \"hive.compactor.abortedtxn.threshold\": \"1000\",\n                \"hive.compactor.check.interval\": \"300L\",\n                \"hive.compactor.delta.num.threshold\": \"10\",\n                \"hive.compactor.delta.pct.threshold\": \"0.1f\",\n                \"hive.compactor.initiator.on\": \"false\",\n                \"hive.compactor.worker.threads\": \"0\",\n                \"hive.compactor.worker.timeout\": \"86400L\",\n                \"hive.compute.query.using.stats\": \"true\",\n                \"hive.conf.restricted.list\": \"hive.security.authenticator.manager,hive.security.authorization.manager,hive.users.in.admin.role\",\n                \"hive.convert.join.bucket.mapjoin.tez\": \"false\",\n                \"hive.enforce.bucketing\": \"true\",\n                \"hive.enforce.sorting\": \"true\",\n                \"hive.enforce.sortmergebucketmapjoin\": \"true\",\n                \"hive.exec.compress.intermediate\": \"false\",\n                \"hive.exec.compress.output\": \"false\",\n                \"hive.exec.dynamic.partition\": \"true\",\n                \"hive.exec.dynamic.partition.mode\": \"nonstrict\",\n                \"hive.exec.failure.hooks\": \"org.apache.hadoop.hive.ql.hooks.ATSHook\",\n                \"hive.exec.max.created.files\": \"100000\",\n                \"hive.exec.max.dynamic.partitions\": \"5000\",\n                \"hive.exec.max.dynamic.partitions.pernode\": \"2000\",\n                \"hive.exec.orc.compression.strategy\": \"SPEED\",\n                \"hive.exec.orc.default.compress\": \"ZLIB\",\n                \"hive.exec.orc.default.stripe.size\": \"67108864\",\n                \"hive.exec.parallel\": \"false\",\n                \"hive.exec.parallel.thread.number\": \"8\",\n                \"hive.exec.post.hooks\": \"org.apache.hadoop.hive.ql.hooks.ATSHook\",\n                \"hive.exec.pre.hooks\": \"org.apache.hadoop.hive.ql.hooks.ATSHook\",\n                \"hive.exec.reducers.bytes.per.reducer\": \"67108864\",\n                \"hive.exec.reducers.max\": \"1009\",\n                \"hive.exec.scratchdir\": \"/tmp/hive\",\n                \"hive.exec.submit.local.task.via.child\": \"true\",\n                \"hive.exec.submitviachild\": \"false\",\n                \"hive.execution.engine\": \"mr\",\n                \"hive.fetch.task.aggr\": \"false\",\n                \"hive.fetch.task.conversion\": \"more\",\n                \"hive.fetch.task.conversion.threshold\": \"1073741824\",\n                \"hive.heapsize\": \"1024\",\n                \"hive.limit.optimize.enable\": \"true\",\n                \"hive.limit.pushdown.memory.usage\": \"0.04\",\n                \"hive.map.aggr\": \"true\",\n                \"hive.map.aggr.hash.force.flush.memory.threshold\": \"0.9\",\n                \"hive.map.aggr.hash.min.reduction\": \"0.5\",\n                \"hive.map.aggr.hash.percentmemory\": \"0.5\",\n                \"hive.mapjoin.bucket.cache.size\": \"10000\",\n                \"hive.mapjoin.optimized.hashtable\": \"true\",\n                \"hive.mapred.reduce.tasks.speculative.execution\": \"false\",\n                \"hive.merge.mapfiles\": \"true\",\n                \"hive.merge.mapredfiles\": \"false\",\n                \"hive.merge.orcfile.stripe.level\": \"true\",\n                \"hive.merge.rcfile.block.level\": \"true\",\n                \"hive.merge.size.per.task\": \"256000000\",\n                \"hive.merge.smallfiles.avgsize\": \"16000000\",\n                \"hive.merge.tezfiles\": \"false\",\n                \"hive.metastore.authorization.storage.checks\": \"false\",\n                \"hive.metastore.cache.pinobjtypes\": \"Table,Database,Type,FieldSchema,Order\",\n                \"hive.metastore.client.connect.retry.delay\": \"5s\",\n                \"hive.metastore.client.socket.timeout\": \"1800s\",\n                \"hive.metastore.connect.retries\": \"24\",\n                \"hive.metastore.execute.setugi\": \"true\",\n                \"hive.metastore.failure.retries\": \"24\",\n                \"hive.metastore.kerberos.keytab.file\": \"/etc/security/keytabs/hive.service.keytab\",\n                \"hive.metastore.kerberos.principal\": \"hive/_HOST@EXAMPLE.COM\",\n                \"hive.metastore.pre.event.listeners\": \"org.apache.hadoop.hive.ql.security.authorization.AuthorizationPreEventListener\",\n                \"hive.metastore.sasl.enabled\": \"false\",\n                \"hive.metastore.server.max.threads\": \"100000\",\n                \"hive.metastore.uris\": \"thrift://%HOSTGROUP::host_group_1%:9083\",\n                \"hive.metastore.warehouse.dir\": \"/apps/hive/warehouse\",\n                \"hive.optimize.bucketmapjoin\": \"true\",\n                \"hive.optimize.bucketmapjoin.sortedmerge\": \"false\",\n                \"hive.optimize.constant.propagation\": \"true\",\n                \"hive.optimize.index.filter\": \"true\",\n                \"hive.optimize.mapjoin.mapreduce\": \"true\",\n                \"hive.optimize.metadataonly\": \"true\",\n                \"hive.optimize.null.scan\": \"true\",\n                \"hive.optimize.reducededuplication\": \"true\",\n                \"hive.optimize.reducededuplication.min.reducer\": \"4\",\n                \"hive.optimize.sort.dynamic.partition\": \"false\",\n                \"hive.orc.compute.splits.num.threads\": \"10\",\n                \"hive.orc.splits.include.file.footer\": \"false\",\n                \"hive.prewarm.enabled\": \"false\",\n                \"hive.prewarm.numcontainers\": \"10\",\n                \"hive.security.authenticator.manager\": \"org.apache.hadoop.hive.ql.security.ProxyUserAuthenticator\",\n                \"hive.security.authorization.enabled\": \"false\",\n                \"hive.security.authorization.manager\": \"org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdConfOnlyAuthorizerFactory\",\n                \"hive.security.metastore.authenticator.manager\": \"org.apache.hadoop.hive.ql.security.HadoopDefaultMetastoreAuthenticator\",\n                \"hive.security.metastore.authorization.auth.reads\": \"true\",\n                \"hive.security.metastore.authorization.manager\": \"org.apache.hadoop.hive.ql.security.authorization.StorageBasedAuthorizationProvider,org.apache.hadoop.hive.ql.security.authorization.MetaStoreAuthzAPIAuthorizerEmbedOnly\",\n                \"hive.server2.allow.user.substitution\": \"true\",\n                \"hive.server2.authentication\": \"NOSASL\",\n                \"hive.server2.authentication.spnego.keytab\": \"HTTP/_HOST@EXAMPLE.COM\",\n                \"hive.server2.authentication.spnego.principal\": \"/etc/security/keytabs/spnego.service.keytab\",\n                \"hive.server2.enable.doAs\": \"true\",\n                \"hive.server2.enable.impersonation\": \"true\",\n                \"hive.server2.logging.operation.enabled\": \"true\",\n                \"hive.server2.logging.operation.log.location\": \"${system:java.io.tmpdir}/${system:user.name}/operation_logs\",\n                \"hive.server2.support.dynamic.service.discovery\": \"true\",\n                \"hive.server2.table.type.mapping\": \"CLASSIC\",\n                \"hive.server2.tez.default.queues\": \"default\",\n                \"hive.server2.tez.initialize.default.sessions\": \"false\",\n                \"hive.server2.tez.sessions.per.default.queue\": \"1\",\n                \"hive.server2.thrift.http.path\": \"cliservice\",\n                \"hive.server2.thrift.http.port\": \"10001\",\n                \"hive.server2.thrift.max.worker.threads\": \"500\",\n                \"hive.server2.thrift.port\": \"10000\",\n                \"hive.server2.thrift.sasl.qop\": \"auth\",\n                \"hive.server2.transport.mode\": \"binary\",\n                \"hive.server2.use.SSL\": \"false\",\n                \"hive.server2.zookeeper.namespace\": \"hiveserver2\",\n                \"hive.smbjoin.cache.rows\": \"10000\",\n                \"hive.stats.autogather\": \"true\",\n                \"hive.stats.dbclass\": \"fs\",\n                \"hive.stats.fetch.column.stats\": \"false\",\n                \"hive.stats.fetch.partition.stats\": \"true\",\n                \"hive.support.concurrency\": \"false\",\n                \"hive.support.quoted.identifiers\": \"NONE\",\n                \"hive.tez.auto.reducer.parallelism\": \"false\",\n                \"hive.tez.container.size\": \"1024\",\n                \"hive.tez.cpu.vcores\": \"-1\",\n                \"hive.tez.dynamic.partition.pruning\": \"true\",\n                \"hive.tez.dynamic.partition.pruning.max.data.size\": \"104857600\",\n                \"hive.tez.dynamic.partition.pruning.max.event.size\": \"1048576\",\n                \"hive.tez.input.format\": \"org.apache.hadoop.hive.ql.io.HiveInputFormat\",\n                \"hive.tez.java.opts\": \"-server -Xmx820m -Djava.net.preferIPv4Stack=true -XX:NewRatio=8 -XX:+UseNUMA -XX:+UseParallelGC -XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps\",\n                \"hive.tez.log.level\": \"INFO\",\n                \"hive.tez.max.partition.factor\": \"2.0\",\n                \"hive.tez.min.partition.factor\": \"0.25\",\n                \"hive.tez.smb.number.waves\": \"0.5\",\n                \"hive.txn.manager\": \"org.apache.hadoop.hive.ql.lockmgr.DummyTxnManager\",\n                \"hive.txn.max.open.batch\": \"1000\",\n                \"hive.txn.timeout\": \"300\",\n                \"hive.user.install.directory\": \"/user/\",\n                \"hive.vectorized.execution.enabled\": \"true\",\n                \"hive.vectorized.execution.reduce.enabled\": \"false\",\n                \"hive.vectorized.groupby.checkinterval\": \"4096\",\n                \"hive.vectorized.groupby.flush.percent\": \"0.1\",\n                \"hive.vectorized.groupby.maxentries\": \"100000\",\n                \"hive.zookeeper.client.port\": \"2181\",\n                \"hive.zookeeper.namespace\": \"hive_zookeeper_namespace\",\n                \"hive.zookeeper.quorum\": \"%HOSTGROUP::host_group_1%:2181\",\n                \"javax.jdo.option.ConnectionDriverName\": \"com.mysql.jdbc.Driver\",\n                \"javax.jdo.option.ConnectionPassword\": \"verint1!\",\n                \"javax.jdo.option.ConnectionURL\": \"jdbc:mysql://%HOSTGROUP::host_group_1%/hive?createDatabaseIfNotExist=true\",\n                \"javax.jdo.option.ConnectionUserName\": \"hive\"\n            }\n        },\n        {\n            \"oozie-site\": {\n                \"oozie.action.max.output.data\": \"1048576\",\n                \"oozie.authentication.kerberos.name.rules\": \"\\n      RULE:[2:$1@$0]([jt]t@.*TODO-KERBEROS-DOMAIN)s/.*/TODO-MAPREDUSER/\\n      RULE:[2:$1@$0]([nd]n@.*TODO-KERBEROS-DOMAIN)s/.*/TODO-HDFSUSER/\\n      RULE:[2:$1@$0](hm@.*TODO-KERBEROS-DOMAIN)s/.*/TODO-HBASE-USER/\\n      RULE:[2:$1@$0](rs@.*TODO-KERBEROS-DOMAIN)s/.*/TODO-HBASE-USER/\\n      DEFAULT\",\n                \"oozie.authentication.simple.anonymous.allowed\": \"true\",\n                \"oozie.authentication.type\": \"simple\",\n                \"oozie.base.url\": \"http://%HOSTGROUP::host_group_1%:11000/oozie\",\n                \"oozie.credentials.credentialclasses\": \"hcat=org.apache.oozie.action.hadoop.HCatCredentials\",\n                \"oozie.db.schema.name\": \"oozie\",\n                \"oozie.service.ActionService.executor.ext.classes\": \"\\n      org.apache.oozie.action.email.EmailActionExecutor,\\n      org.apache.oozie.action.hadoop.HiveActionExecutor,\\n      org.apache.oozie.action.hadoop.ShellActionExecutor,\\n      org.apache.oozie.action.hadoop.SqoopActionExecutor,\\n      org.apache.oozie.action.hadoop.DistcpActionExecutor\",\n                \"oozie.service.AuthorizationService.security.enabled\": \"false\",\n                \"oozie.service.CallableQueueService.callable.concurrency\": \"3\",\n                \"oozie.service.CallableQueueService.queue.size\": \"1000\",\n                \"oozie.service.CallableQueueService.threads\": \"10\",\n                \"oozie.service.ELService.ext.functions.coord-action-create\": \"\\n      now=org.apache.oozie.extensions.OozieELExtensions#ph2_now,\\n      today=org.apache.oozie.extensions.OozieELExtensions#ph2_today,\\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph2_yesterday,\\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_currentMonth,\\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_lastMonth,\\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph2_currentYear,\\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph2_lastYear,\\n      latest=org.apache.oozie.coord.CoordELFunctions#ph2_coord_latest_echo,\\n      future=org.apache.oozie.coord.CoordELFunctions#ph2_coord_future_echo,\\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph2_coord_formatTime,\\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user\",\n                \"oozie.service.ELService.ext.functions.coord-action-create-inst\": \"\\n      now=org.apache.oozie.extensions.OozieELExtensions#ph2_now_inst,\\n      today=org.apache.oozie.extensions.OozieELExtensions#ph2_today_inst,\\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph2_yesterday_inst,\\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_currentMonth_inst,\\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_lastMonth_inst,\\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph2_currentYear_inst,\\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph2_lastYear_inst,\\n      latest=org.apache.oozie.coord.CoordELFunctions#ph2_coord_latest_echo,\\n      future=org.apache.oozie.coord.CoordELFunctions#ph2_coord_future_echo,\\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph2_coord_formatTime,\\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user\",\n                \"oozie.service.ELService.ext.functions.coord-action-start\": \"\\n      now=org.apache.oozie.extensions.OozieELExtensions#ph2_now,\\n      today=org.apache.oozie.extensions.OozieELExtensions#ph2_today,\\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph2_yesterday,\\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_currentMonth,\\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_lastMonth,\\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph2_currentYear,\\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph2_lastYear,\\n      latest=org.apache.oozie.coord.CoordELFunctions#ph3_coord_latest,\\n      future=org.apache.oozie.coord.CoordELFunctions#ph3_coord_future,\\n      dataIn=org.apache.oozie.extensions.OozieELExtensions#ph3_dataIn,\\n      instanceTime=org.apache.oozie.coord.CoordELFunctions#ph3_coord_nominalTime,\\n      dateOffset=org.apache.oozie.coord.CoordELFunctions#ph3_coord_dateOffset,\\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph3_coord_formatTime,\\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user\",\n                \"oozie.service.ELService.ext.functions.coord-job-submit-data\": \"\\n      now=org.apache.oozie.extensions.OozieELExtensions#ph1_now_echo,\\n      today=org.apache.oozie.extensions.OozieELExtensions#ph1_today_echo,\\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph1_yesterday_echo,\\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_currentMonth_echo,\\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_lastMonth_echo,\\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph1_currentYear_echo,\\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph1_lastYear_echo,\\n      dataIn=org.apache.oozie.extensions.OozieELExtensions#ph1_dataIn_echo,\\n      instanceTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_nominalTime_echo_wrap,\\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_formatTime_echo,\\n      dateOffset=org.apache.oozie.coord.CoordELFunctions#ph1_coord_dateOffset_echo,\\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user\",\n                \"oozie.service.ELService.ext.functions.coord-job-submit-instances\": \"\\n      now=org.apache.oozie.extensions.OozieELExtensions#ph1_now_echo,\\n      today=org.apache.oozie.extensions.OozieELExtensions#ph1_today_echo,\\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph1_yesterday_echo,\\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_currentMonth_echo,\\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_lastMonth_echo,\\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph1_currentYear_echo,\\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph1_lastYear_echo,\\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_formatTime_echo,\\n      latest=org.apache.oozie.coord.CoordELFunctions#ph2_coord_latest_echo,\\n      future=org.apache.oozie.coord.CoordELFunctions#ph2_coord_future_echo\",\n                \"oozie.service.ELService.ext.functions.coord-sla-create\": \"\\n      instanceTime=org.apache.oozie.coord.CoordELFunctions#ph2_coord_nominalTime,\\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user\",\n                \"oozie.service.ELService.ext.functions.coord-sla-submit\": \"\\n      instanceTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_nominalTime_echo_fixed,\\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user\",\n                \"oozie.service.HadoopAccessorService.hadoop.configurations\": \"*=/etc/hadoop/conf\",\n                \"oozie.service.HadoopAccessorService.kerberos.enabled\": \"false\",\n                \"oozie.service.HadoopAccessorService.supported.filesystems\": \"*\",\n                \"oozie.service.JPAService.create.db.schema\": \"false\",\n                \"oozie.service.JPAService.jdbc.driver\": \"org.apache.derby.jdbc.EmbeddedDriver\",\n                \"oozie.service.JPAService.jdbc.username\": \"oozie\",\n                \"oozie.service.JPAService.pool.max.active.conn\": \"10\",\n                \"oozie.service.ProxyUserService.proxyuser.falcon.groups\": \"*\",\n                \"oozie.service.ProxyUserService.proxyuser.falcon.hosts\": \"*\",\n                \"oozie.service.ProxyUserService.proxyuser.hue.groups\": \"*\",\n                \"oozie.service.ProxyUserService.proxyuser.hue.hosts\": \"*\",\n                \"oozie.service.PurgeService.older.than\": \"30\",\n                \"oozie.service.PurgeService.purge.interval\": \"3600\",\n                \"oozie.service.SchemaService.wf.ext.schemas\": \"shell-action-0.1.xsd,shell-action-0.2.xsd,shell-action-0.3.xsd,email-action-0.1.xsd,email-action-0.2.xsd,hive-action-0.2.xsd,hive-action-0.3.xsd,hive-action-0.4.xsd,hive-action-0.5.xsd,sqoop-action-0.2.xsd,sqoop-action-0.3.xsd,sqoop-action-0.4.xsd,ssh-action-0.1.xsd,ssh-action-0.2.xsd,distcp-action-0.1.xsd,distcp-action-0.2.xsd,oozie-sla-0.1.xsd,oozie-sla-0.2.xsd\",\n                \"oozie.service.URIHandlerService.uri.handlers\": \"org.apache.oozie.dependency.FSURIHandler,org.apache.oozie.dependency.HCatURIHandler\",\n                \"oozie.service.WorkflowAppService.system.libpath\": \"/user/${user.name}/share/lib\",\n                \"oozie.service.coord.check.maximum.frequency\": \"false\",\n                \"oozie.service.coord.normal.default.timeout\": \"120\",\n                \"oozie.service.coord.push.check.requeue.interval\": \"30000\",\n                \"oozie.services\": \"\\n      org.apache.oozie.service.SchedulerService,\\n      org.apache.oozie.service.InstrumentationService,\\n      org.apache.oozie.service.MemoryLocksService,\\n      org.apache.oozie.service.UUIDService,\\n      org.apache.oozie.service.ELService,\\n      org.apache.oozie.service.AuthorizationService,\\n      org.apache.oozie.service.UserGroupInformationService,\\n      org.apache.oozie.service.HadoopAccessorService,\\n      org.apache.oozie.service.JobsConcurrencyService,\\n      org.apache.oozie.service.URIHandlerService,\\n      org.apache.oozie.service.DagXLogInfoService,\\n      org.apache.oozie.service.SchemaService,\\n      org.apache.oozie.service.LiteWorkflowAppService,\\n      org.apache.oozie.service.JPAService,\\n      org.apache.oozie.service.StoreService,\\n      org.apache.oozie.service.CoordinatorStoreService,\\n      org.apache.oozie.service.SLAStoreService,\\n      org.apache.oozie.service.DBLiteWorkflowStoreService,\\n      org.apache.oozie.service.CallbackService,\\n      org.apache.oozie.service.ShareLibService,\\n      org.apache.oozie.service.CallableQueueService,\\n      org.apache.oozie.service.ActionService,\\n      org.apache.oozie.service.ActionCheckerService,\\n      org.apache.oozie.service.RecoveryService,\\n      org.apache.oozie.service.PurgeService,\\n      org.apache.oozie.service.CoordinatorEngineService,\\n      org.apache.oozie.service.BundleEngineService,\\n      org.apache.oozie.service.DagEngineService,\\n      org.apache.oozie.service.CoordMaterializeTriggerService,\\n      org.apache.oozie.service.StatusTransitService,\\n      org.apache.oozie.service.PauseTransitService,\\n      org.apache.oozie.service.GroupsService,\\n      org.apache.oozie.service.ProxyUserService,\\n      org.apache.oozie.service.XLogStreamingService,\\n      org.apache.oozie.service.JvmPauseMonitorService\",\n                \"oozie.services.ext\": \"org.apache.oozie.service.JMSAccessorService,org.apache.oozie.service.PartitionDependencyManagerService,org.apache.oozie.service.HCatAccessorService\",\n                \"oozie.system.id\": \"oozie-${user.name}\",\n                \"oozie.systemmode\": \"NORMAL\",\n                \"use.system.libpath.for.mapreduce.and.pig.jobs\": \"false\"\n            }\n        }\n    ],\n    \"host_groups\": [\n        {\n            \"name\": \"host_group_1\",\n            \"configurations\": [\n                {\n                    \"nagios-env\" : {\n                        \"nagios_contact\": \"me@my-awesome-domain.example\"\n                    }\n                },\n                {\n                    \"yarn-site\": {\n                        \"yarn.nodemanager.pmem-check-enabled\": \"false\",\n                        \"yarn.nodemanager.resource.memory-mb\": \"9216\",\n                        \"yarn.nodemanager.vmem-pmem-ratio\": \"10\",\n                        \"yarn.scheduler.minimum-allocation-mb\": \"512\"\n                    }\n                },\n                {\n                    \"mapred-site\": {\n                        \"mapreduce.map.java.opts\": \"-Xmx384m\",\n                        \"mapreduce.map.memory.mb\": \"512\",\n                        \"mapreduce.reduce.java.opts\": \"-Xmx768m\",\n                        \"mapreduce.task.io.sort.mb\": \"128\",\n                        \"yarn.app.mapreduce.am.command-opts\": \"-Xmx384m -Dhdp.version=${hdp.version}\",\n                        \"yarn.app.mapreduce.am.resource.mb\": \"512\"\n                    }\n                },\n                {\n                    \"hive-site\": {\n                        \"hive.auto.convert.join.noconditionaltask.size\": \"134217000\",\n                        \"hive.tez.container.size\": \"512\",\n                        \"hive.tez.java.opts\": \"-server -Xmx384m -Djava.net.preferIPv4Stack=true -XX:NewRatio=8 -XX:+UseNUMA -XX:+UseParallelGC -XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps\"\n                    }\n                },\n                {\n                    \"tez-site\": {\n                        \"tez.am.java.opts\": \"-server -Xmx768m -Djava.net.preferIPv4Stack=true -XX:+UseNUMA -XX:+UseParallelGC\",\n                        \"tez.am.resource.memory.mb\": \"1024\",\n                        \"tez.dag.am.resource.memory.mb\": \"1024\",\n                        \"yarn.app.mapreduce.am.command-opts\": \"-Xmx768m\"\n                    }\n                }\n            ],\n            \"components\": [\n                {\n                    \"name\": \"PIG\"\n                },\n                {\n                    \"name\": \"HISTORYSERVER\"\n                },\n                {\n                    \"name\": \"KAFKA_BROKER\"\n                },\n                {\n                    \"name\": \"OOZIE_CLIENT\"\n                },\n                {\n                    \"name\": \"HBASE_REGIONSERVER\"\n                },\n                {\n                    \"name\": \"HBASE_CLIENT\"\n                },\n                {\n                    \"name\": \"NAMENODE\"\n                },\n                {\n                    \"name\": \"SUPERVISOR\"\n                },\n                {\n                    \"name\": \"FALCON_SERVER\"\n                },\n                {\n                    \"name\": \"HCAT\"\n                },\n                {\n                    \"name\": \"KNOX_GATEWAY\"\n                },\n                {\n                    \"name\": \"SLIDER\"\n                },\n                {\n                    \"name\": \"AMBARI_SERVER\"\n                },\n                {\n                    \"name\": \"APP_TIMELINE_SERVER\"\n                },\n                {\n                    \"name\": \"NODEMANAGER\"\n                },\n                {\n                    \"name\": \"HDFS_CLIENT\"\n                },\n                {\n                    \"name\": \"HIVE_CLIENT\"\n                },\n                {\n                    \"name\": \"FLUME_HANDLER\"\n                },\n                {\n                    \"name\": \"DATANODE\"\n                },\n                {\n                    \"name\": \"WEBHCAT_SERVER\"\n                },\n                {\n                    \"name\": \"RESOURCEMANAGER\"\n                },\n                {\n                    \"name\": \"ZOOKEEPER_SERVER\"\n                },\n                {\n                    \"name\": \"ZOOKEEPER_CLIENT\"\n                },\n                {\n                    \"name\": \"STORM_UI_SERVER\"\n                },\n                {\n                    \"name\": \"HBASE_MASTER\"\n                },\n                {\n                    \"name\": \"HIVE_SERVER\"\n                },\n                {\n                    \"name\": \"OOZIE_SERVER\"\n                },\n                {\n                    \"name\": \"FALCON_CLIENT\"\n                },\n                {\n                    \"name\": \"NAGIOS_SERVER\"\n                },\n                {\n                    \"name\": \"SECONDARY_NAMENODE\"\n                },\n                {\n                    \"name\": \"TEZ_CLIENT\"\n                },\n                {\n                    \"name\": \"HIVE_METASTORE\"\n                },\n                {\n                    \"name\": \"GANGLIA_SERVER\"\n                },\n                {\n                    \"name\": \"SQOOP\"\n                },\n                {\n                    \"name\": \"YARN_CLIENT\"\n                },\n                {\n                    \"name\": \"MAPREDUCE2_CLIENT\"\n                },\n                {\n                    \"name\": \"MYSQL_SERVER\"\n                },\n                {\n                    \"name\": \"GANGLIA_MONITOR\"\n                },\n                {\n                    \"name\": \"DRPC_SERVER\"\n                },\n                {\n                    \"name\": \"NIMBUS\"\n                }\n            ],\n            \"cardinality\": \"1\"\n        }\n    ],\n    \"Blueprints\": {\n        \"stack_name\": \"HDP\",\n        \"stack_version\": \"2.2\"\n    }\n}\n"
		}
	]
}